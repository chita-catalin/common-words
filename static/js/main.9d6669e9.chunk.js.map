{"version":3,"sources":["components/pages/LanguageBlendPage/BlendComponent.tsx","components/pages/LanguageBlendPage/ResultComponent/ResultPapers/WordListPaper.tsx","components/pages/LanguageBlendPage/ResultComponent/ResultPapers/StatisticsPaper.tsx","components/Layout/NavBar/NavBar.tsx","components/pages/LanguageBlendPage/ResultComponent/ResultComponent.tsx","components/pages/LanguageBlendPage/index.tsx","components/pages/NotFound/NotFound.tsx","components/pages/Resources/Resources.tsx","components/pages/changelog/ChangeLog.tsx","components/pages/MoreStatistics/index.tsx","components/pages/MoreDetails/index.tsx","useLanguageBlend.ts","components/pages/LandingPage/index.tsx","App.tsx","index.tsx"],"names":["BlendComponent","useContext","LanguageBlendContext","id","WordListPaper","props","Paper","variant","elevation","style","margin","display","flexDirection","overflowY","height","List","component","disablePadding","padding","blend","blendedList","map","el","index","ListItemText","primary","word","Button","textDecoration","color","to","ChartJS","register","ArcElement","Tooltip","Legend","StatisticsPaper","data","labels","selectedLanguage1","selectedLanguage2","datasets","label","length","backgroundColor","borderColor","borderWidth","alignItems","flexGrow","justifyContent","NavBar","fontFamily","fontSize","marginRight","marginLeft","ResultComponent","onClick","setBlendedList","setSelectedLanguage2","setSelectedLanguage1","cursor","flexWrap","FormControl","fullWidth","Select","value","MenuItem","React","createContext","LanguageBlendPage","BlendContext","Provider","NotFound","marginTop","marginBottom","Resources","href","ChangeLog","Chip","className","MoreStatistics","Typography","fontWeight","MoreDetails","wordList","useState","minLength","setMinLength","maxLength","setMaxLength","TextField","placeholder","type","InputLabelProps","shrink","borderRadius","onChange","e","Number","target","useLanguageBlend","loading","setLoading","alert","setAlert","language1","language2","compare","a","languages","handleSelect1","innerText","handleSelect2","pickFlag","language","LandingPage","vantaEffect","setVantaEffect","myRef","useRef","useEffect","GLOBE","current","destroy","ref","width","position","right","bottom","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d6669e9.chunk.js","sourcesContent":["import { Alert, Autocomplete, Button, TextField } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { LanguageBlendContext } from \"./\";\r\nimport CompareArrowsIcon from \"@mui/icons-material/CompareArrows\";\r\nimport Flag from \"react-world-flags\";\r\nimport NavBar from \"../../Layout/NavBar/NavBar\";\r\n\r\nconst BlendComponent = () => {\r\n  const blend = useContext(LanguageBlendContext); \r\n\r\n  return (\r\n    <div id=\"blend-section\">\r\n      {/* <NavBar />\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div\r\n          style={{\r\n            flexGrow: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"cenetr\",\r\n          }}\r\n        >\r\n          <Flag\r\n            code={blend.pickFlag(1)}\r\n            style={{\r\n              width: \"50%\",\r\n              opacity: blend.selectedLanguage1 ? 0.6 : 0,\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            paddingTop: \"50px\",\r\n            transition: \"1s linear\",\r\n          }}\r\n        >\r\n          <h1 style={{ fontFamily: \"consolas\", color: \"white\" }}>\r\n            BLEND LANGUAGES\r\n          </h1>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              flexWrap: \"wrap\",\r\n              minWidth: \"281px\",\r\n            }}\r\n          >\r\n            <Autocomplete\r\n              disablePortal\r\n              id=\"combo-box-demo\"\r\n              options={blend.languages}\r\n              onChange={blend.handleSelect1}\r\n              style={{\r\n                borderRadius: \"4px\",\r\n                margin: \"10px\",\r\n                backgroundColor: \"#FFF\",\r\n                flexGrow: 1,\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} placeholder=\"Select language\" />\r\n              )}\r\n            />\r\n            <Autocomplete\r\n              disablePortal\r\n              id=\"combo-box-demo\"\r\n              options={blend.languages}\r\n              onChange={blend.handleSelect2}\r\n              style={{\r\n                borderRadius: \"4px\",\r\n                margin: \"10px\",\r\n                backgroundColor: \"#fff\",\r\n                flexGrow: 1,\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} placeholder=\"Select another language\" />\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={\r\n              blend.selectedLanguage1 === null ||\r\n              blend.selectedLanguage2 === null\r\n                ? true\r\n                : false\r\n            }\r\n            onClick={blend.compare}\r\n            style={{\r\n              marginBottom: \"30px\",\r\n              backgroundColor: \"white\",\r\n              color: \"#F84284\",\r\n              width: \"261px\",\r\n              marginTop: \"10px\",\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <CompareArrowsIcon style={{ marginRight: \"10px\" }} />\r\n              Compare\r\n            </div>\r\n          </Button>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            flexGrow: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"cenetr\",\r\n          }}\r\n        >\r\n          <Flag\r\n            code={blend.pickFlag(2)}\r\n            style={{\r\n              width: \"50%\",\r\n              opacity: blend.selectedLanguage2 ? 0.6 : 0,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        {blend.alert && (\r\n          <Alert\r\n            style={{ marginTop: \"20px\", maxWidth: \"400px\" }}\r\n            severity=\"error\"\r\n          >\r\n            {blend.alert}\r\n          </Alert>\r\n        )}\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlendComponent;\r\n","import { Button, List, ListItemText, Paper } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  blend: any;\r\n}\r\n\r\nconst WordListPaper = (props: Props) => {\r\n  return (\r\n    <Paper\r\n      variant=\"elevation\"\r\n      elevation={3}\r\n      style={{\r\n        margin: \"10px 10px 0px 0px\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <div style={{ overflowY: \"scroll\", height: \"339px\" }}>\r\n          <List component=\"div\" disablePadding style={{ padding: \"10px\" }}>\r\n            {props.blend.blendedList?.map((el: any, index: number) => {\r\n              return <ListItemText key={index} primary={el.word} />;\r\n            })}\r\n          </List>\r\n        </div>\r\n\r\n        <Button variant=\"contained\">\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            to=\"/more-details\"\r\n          >\r\n            + More details\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default WordListPaper;\r\n","import { Button, Paper } from \"@mui/material\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\ninterface Props {\r\n  blend: any;\r\n}\r\n\r\nconst StatisticsPaper = (props: Props) => {\r\n  const data = {\r\n    labels: [\r\n      props.blend.selectedLanguage1,\r\n      props.blend.selectedLanguage2,\r\n      \"common\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [50000, 50000, props.blend.blendedList.length],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      variant=\"elevation\"\r\n      elevation={3}\r\n      style={{ height: \"350px\", margin: \"10px 0px 0px 10px\" }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          height: \"100%\",\r\n          alignItems: \"space-between\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            flexGrow: 1,\r\n            padding: \"10px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <b> {props.blend.blendedList.length} common words</b>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Pie data={data} />\r\n          </div>\r\n        </div>\r\n\r\n        <Button variant=\"contained\">\r\n          <Link\r\n            style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            to=\"/more-statistics\"\r\n          >\r\n            + more statistics\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StatisticsPaper;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../style.css\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav id=\"nav-bar\">\r\n      <div id=\"title\">\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            textDecoration: \"none\",\r\n            color: \"white\",\r\n            fontFamily: \"consolas\",\r\n          }}\r\n        >\r\n          COMMON WORDS\r\n        </Link>\r\n      </div>\r\n      <span\r\n        style={{\r\n          fontSize: \"13px\",\r\n          marginRight: \"30px\",\r\n          color: \"lightgrey\",\r\n          marginLeft: \"3px\",\r\n        }}\r\n      >\r\n        V0.3\r\n      </span>\r\n      <Link\r\n        to=\"/about\"\r\n        style={{\r\n          marginRight: \"30px\",\r\n          textDecoration: \"none\",\r\n          color: \"#F84284\",\r\n        }}\r\n      >\r\n        <u>resources</u>\r\n      </Link>\r\n      <Link\r\n        to=\"/about\"\r\n        style={{\r\n          marginRight: \"30px\",\r\n          textDecoration: \"none\",\r\n          color: \"#F84284\",\r\n        }}\r\n      >\r\n        <u>about</u>\r\n      </Link>\r\n      <Link\r\n        to=\"/changelog\"\r\n        style={{\r\n          marginRight: \"30px\",\r\n          textDecoration: \"none\",\r\n          color: \"#F84284\",\r\n        }}\r\n      >\r\n        <u>changelog</u>\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { LanguageBlendContext } from \"..\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport WordListPaper from \"./ResultPapers/WordListPaper\";\r\nimport StatisticsPaper from \"./ResultPapers/StatisticsPaper\";\r\nimport NavBar from \"../../../Layout/NavBar/NavBar\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst ResultComponent = () => {\r\n  const blend = useContext(LanguageBlendContext);\r\n\r\n  return (\r\n    <>\r\n      {blend.blendedList.length ? (\r\n        <div id=\"result-section\">\r\n          <NavBar />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h1 style={{ fontFamily: \"consolas\", color: \"white\" }}>\r\n              <span\r\n                onClick={() => {\r\n                  blend.setBlendedList([]);\r\n                  blend.setSelectedLanguage2(\"\");\r\n                  blend.setSelectedLanguage1(\"\");\r\n                }}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                BLEND LANGUAGES\r\n              </span>\r\n              {\">\"} <u>RESULTS</u>\r\n            </h1>\r\n\r\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  margin: \"10px\",\r\n                }}\r\n              >\r\n                <FormControl fullWidth>\r\n                  <Select value={100} style={{ backgroundColor: \"white\" }}>\r\n                    <MenuItem value={100}>100% match</MenuItem>\r\n                    <MenuItem value={90}>90% match</MenuItem>\r\n                    <MenuItem value={80}>80% match</MenuItem>\r\n                    <MenuItem value={70}>70% match</MenuItem>\r\n                    <MenuItem value={60}>60% match</MenuItem>\r\n                    <MenuItem value={60}>50% match</MenuItem>\r\n                    <MenuItem value={60}>40% match</MenuItem>\r\n                    <MenuItem value={60}>30% match</MenuItem>\r\n                    <MenuItem value={60}>20% match</MenuItem>\r\n                    <MenuItem value={60}>10% match</MenuItem>\r\n                    <MenuItem value={60}>below 10% match</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                  <WordListPaper blend={blend} />\r\n                  <StatisticsPaper blend={blend} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultComponent;\r\n","import React from \"react\";\r\nimport BlendComponent from \"./BlendComponent\";\r\nimport ResultComponent from \"./ResultComponent/ResultComponent\";\r\nimport \"./style.css\";\r\nimport { BlendContext } from \"../../../App\";\r\n\r\nexport const LanguageBlendContext = React.createContext<any>(null);\r\n\r\nconst LanguageBlendPage = () => {\r\n  const blend = React.useContext(BlendContext);\r\n\r\n  return (\r\n    <LanguageBlendContext.Provider value={blend}>\r\n      <div id=\"language-blend-page\">\r\n        {blend.blendedList.length > 0 ? (\r\n          <ResultComponent />\r\n        ) : (\r\n          <BlendComponent />\r\n        )}\r\n      </div>\r\n    </LanguageBlendContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LanguageBlendPage;\r\n","import { Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport NavBar from \"../../Layout/NavBar/NavBar\";\r\nconst NotFound = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        color: \"#fff\",\r\n      }}\r\n    >\r\n      <NavBar />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexGrow: 1,\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <span style={{ fontSize: \"6rem\", marginTop: \"100px\" }}>404</span>\r\n        <p style={{ marginTop: \"-15px\", marginBottom: \"30px\" }}>\r\n          Nothing to see here\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","const Resources = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n        padding: \"30px\",\r\n      }}\r\n    >\r\n      <p> Dictionaries:</p>\r\n      <a href=\"https://en.wiktionary.org/wiki/Wiktionary:Frequency_lists\">\r\n        https://en.wiktionary.org/wiki/Wiktionary:Frequency_lists\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resources;\r\n","import { Chip } from \"@mui/material\";\r\nimport NavBar from \"../../Layout/NavBar/NavBar\";\r\nimport \"./style.css\";\r\n\r\nconst ChangeLog = () => {\r\n  return (\r\n    <div style={{ color: \"#FFF\" }}>\r\n      <NavBar />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexGrow: 1,\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginTop: \"40px\",\r\n          }}\r\n        >\r\n          <Chip\r\n            label=\"V0.3 / 29.12.2021\"\r\n            className=\"changelog-chip\"\r\n            style={{ backgroundColor: \"lightgrey\" }}\r\n          />\r\n          <span> Added Italian,French,Finnish languages</span>\r\n          <span> Enhanced results page.</span>\r\n          <span> added changelog section.</span>\r\n          <span> added country flags.</span>\r\n          <span> added dark/light theme switch</span>\r\n\r\n          <Chip\r\n            label=\"V0.2 / 10.12.2021\"\r\n            className=\"changelog-chip\"\r\n            style={{ backgroundColor: \"lightgrey\" }}\r\n          />\r\n          <span> Added basic language blending</span>\r\n\r\n          <Chip\r\n            label=\"V0.1 / 1.12.2021\"\r\n            className=\"changelog-chip\"\r\n            style={{ backgroundColor: \"lightgrey\" }}\r\n          />\r\n          <span> Project created.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeLog;\r\n","import { Button, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nexport const MoreStatistics = () => {\r\n  return (\r\n    <div className=\"more-statistics-container\">\r\n      <Typography style={{ fontSize: \"3.58rem\", fontWeight: 100 }}>\r\n        STATISTICS:\r\n      </Typography>\r\n      <Button>\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <b>&larr; &nbsp;</b> back to blending\r\n        </Link>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BlendContext } from \"../../../App\";\r\nimport NavBar from \"../../Layout/NavBar/NavBar\";\r\n\r\nconst MoreDetails = () => {\r\n  const blend = React.useContext(BlendContext);\r\n  const wordList = blend.blendedList;\r\n\r\n  const [minLength, setMinLength] = React.useState(1);\r\n  const [maxLength, setMaxLength] = React.useState(10);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <NavBar />\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <h1\r\n          style={{ fontFamily: \"consolas\", color: \"white\", marginTop: \"30px\" }}\r\n        >\r\n          <span\r\n            onClick={() => {\r\n              blend.setBlendedList([]);\r\n              blend.setSelectedLanguage2(\"\");\r\n              blend.setSelectedLanguage1(\"\");\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            BLEND LANGUAGES\r\n          </span>\r\n          {\">\"}{\" \"}\r\n          <Link\r\n            to=\"/language-blend\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            RESULTS\r\n          </Link>\r\n          {\">\"} <u>MORE DETAILS</u>\r\n        </h1>\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: \"10px\",\r\n          margin: \"30px 0 30px 0\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        {/*minimum word length*/}\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", margin: \"5px\" }}\r\n        >\r\n          <span style={{ color: \"white\", marginBottom: \"5px\" }}>\r\n            minimum word length\r\n          </span>\r\n          <TextField\r\n            placeholder=\"\"\r\n            type=\"number\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={minLength}\r\n            style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}\r\n            onChange={(e: any) => setMinLength(Number(e.target.value))}\r\n          />\r\n        </div>\r\n        {/*maximum word length*/}\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", margin: \"5px\" }}\r\n        >\r\n          <span style={{ color: \"white\", marginBottom: \"5px\" }}>\r\n            maximum word length\r\n          </span>\r\n          <TextField\r\n            placeholder=\"\"\r\n            type=\"number\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={maxLength}\r\n            style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}\r\n            onChange={(e: any) => setMaxLength(Number(e.target.value))}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\r\n        {wordList.map((el: any) =>\r\n          el.word &&\r\n          el.word.length >= minLength &&\r\n          el.word.length <= maxLength ? (\r\n            <div\r\n              style={{\r\n                margin: \"10px\",\r\n                padding: \"10px\",\r\n                borderRadius: \"20px\",\r\n                backgroundColor: \"rgba(255, 255, 255,0.1)\",\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              {el.word}\r\n            </div>\r\n          ) : null\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoreDetails;\r\n","import { useState } from \"react\";\r\n\r\nconst useLanguageBlend = () => {\r\n  const [selectedLanguage1, setSelectedLanguage1] = useState<any>(null);\r\n  const [selectedLanguage2, setSelectedLanguage2] = useState<any>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [blendedList, setBlendedList] = useState<any>([]);\r\n  const [alert, setAlert] = useState<string>(\"\");\r\n\r\n  const languages = [\r\n    { label: \"English\", id: \"English\" },\r\n    { label: \"Finnish\", id: \"Finnish\" },\r\n    { label: \"French\", id: \"French\" },\r\n    { label: \"Hungarian\", id: \"Hungarian\" },\r\n    { label: \"Italian\", id: \"Italian\" },\r\n    { label: \"Romanian\", id: \"Romanian\" },\r\n  ];\r\n\r\n  const handleSelect1 = (e: any) => {\r\n    setSelectedLanguage1(e.target.innerText);\r\n  };\r\n\r\n  const handleSelect2 = (e: any) => {\r\n    setSelectedLanguage2(e.target.innerText);\r\n  };\r\n\r\n  const pickFlag = (language: number) => {\r\n    let lang_code: string;\r\n    if (language === 1) {\r\n      lang_code = selectedLanguage1;\r\n    } else {\r\n      lang_code = selectedLanguage2;\r\n    }\r\n\r\n    switch (lang_code) {\r\n      case \"Romanian\":\r\n        return \"ro\";\r\n      case \"English\":\r\n        return \"gb\";\r\n\r\n      case \"Italian\":\r\n        return \"it\";\r\n\r\n      case \"French\":\r\n        return \"fr\";\r\n\r\n      case \"Finnish\":\r\n        return \"fi\";\r\n\r\n      case \"Hungarian\":\r\n        return \"hu\";\r\n    }\r\n    return \"gb\";\r\n  };\r\n\r\n  const blend = (language1: string, language2: string) => {\r\n    setAlert(\"\");\r\n    setLoading(true);\r\n    let arr1 = null;\r\n    let arr2 = null;\r\n    //set first language array\r\n    // switch (language1) {\r\n    //   case \"Romanian\":\r\n    //     arr1 = RO_WORDS;\r\n    //     break;\r\n    //   case \"English\":\r\n    //     arr1 = EN_WORDS;\r\n    //     break;\r\n    //   case \"Italian\":\r\n    //     arr1 = IT_WORDS;\r\n    //     break;\r\n\r\n    //   case \"French\":\r\n    //     arr1 = FR_WORDS;\r\n    //     break;\r\n\r\n    //   case \"Finnish\":\r\n    //     arr1 = FI_WORDS;\r\n    //     break;\r\n\r\n    //   case \"Hungarian\":\r\n    //     arr1 = HU_WORDS;\r\n    //     break;\r\n    // }\r\n    // //set second language array\r\n    // switch (language2) {\r\n    //   case \"Romanian\":\r\n    //     arr2 = RO_WORDS;\r\n    //     break;\r\n    //   case \"English\":\r\n    //     arr2 = EN_WORDS;\r\n    //     break;\r\n    //   case \"Italian\":\r\n    //     arr2 = IT_WORDS;\r\n    //     break;\r\n\r\n    //   case \"French\":\r\n    //     arr2 = FR_WORDS;\r\n    //     break;\r\n\r\n    //   case \"Finnish\":\r\n    //     arr2 = FI_WORDS;\r\n    //     break;\r\n\r\n    //   case \"Hungarian\":\r\n    //     arr2 = HU_WORDS;\r\n    //     break;\r\n    // }\r\n\r\n    // if (language1 !== language2) {\r\n    //   if (arr1 && arr2) {\r\n    //     let arr: any = [];\r\n    //     for (let i = 0; i < arr1.length; i++) {\r\n    //       for (let j = 0; j < arr2.length; j++) {\r\n    //         if (arr1[i].word === arr2[j].word) {\r\n    //           arr = [...arr, arr1[i]];\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //     setBlendedList(arr);\r\n    //     if (arr.length === 0) {\r\n    //       setAlert(\"These languages have no common words\");\r\n    //     }\r\n    //     console.log(blendedList);\r\n    //   }\r\n    // } else {\r\n    //   setAlert(\"Please select 2 different languages\");\r\n    // }\r\n    setLoading(false);\r\n  };\r\n\r\n  const compare = async () => {\r\n    setLoading(true);\r\n    blend(selectedLanguage1, selectedLanguage2);\r\n    setLoading(false);\r\n  };\r\n\r\n  return {\r\n    selectedLanguage1,\r\n    setSelectedLanguage1,\r\n\r\n    selectedLanguage2,\r\n    setSelectedLanguage2,\r\n\r\n    loading,\r\n    setLoading,\r\n\r\n    blendedList,\r\n    setBlendedList,\r\n\r\n    languages,\r\n    compare,\r\n\r\n    handleSelect1,\r\n    handleSelect2,\r\n\r\n    alert,\r\n    setAlert,\r\n\r\n    pickFlag,\r\n  };\r\n};\r\n\r\nexport default useLanguageBlend;\r\n","import \"./style.css\";\r\nimport { Button } from \"@mui/material\";\r\nimport ArrowForwardIosRoundedIcon from \"@mui/icons-material/ArrowForwardIosRounded\";\r\nimport { useRef } from \"react\";\r\nimport React from \"react\";\r\n//@ts-ignore\r\nimport GLOBE from \"vanta/dist/vanta.globe.min\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../../Layout/NavBar/NavBar\";\r\nimport { BlendContext } from \"../../../App\";\r\n\r\nconst LandingPage = () => {\r\n  const [vantaEffect, setVantaEffect] = React.useState<any>(0);\r\n  const myRef = useRef(null);\r\n  const blend = React.useContext(BlendContext);\r\n\r\n  React.useEffect(() => {\r\n    //clear blending history\r\n    blend.selectedLanguage1 = null;\r\n    blend.selectedLanguage2 = null;\r\n    blend.blendedList = [];\r\n\r\n    if (!vantaEffect) {\r\n      setVantaEffect(\r\n        GLOBE({\r\n          el: myRef.current,\r\n        })\r\n      );\r\n    }\r\n    return () => {\r\n      if (vantaEffect) vantaEffect.destroy();\r\n    };\r\n  }, [vantaEffect]);\r\n  return (\r\n    <div style={{ height: \"100vh\" }} ref={myRef} id=\"landing-page-container\">\r\n      <NavBar />\r\n      <div id=\"left-section-container\">\r\n        <p\r\n          style={{\r\n            fontFamily: \"consolas\",\r\n            color: \"white\",\r\n            width: \"370px\",\r\n            marginBottom: \"30px\",\r\n          }}\r\n        >\r\n          Compare your language with another! Find the common words, and more\r\n          fun statistics about languages, completely free!\r\n        </p>\r\n        <Link\r\n          to=\"/language-blend\"\r\n          style={{ textDecoration: \"none\", color: \"#F84284\" }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{\r\n              backgroundColor: \"#FFF\",\r\n              color: \"#F84284\",\r\n            }}\r\n          >\r\n            Start Exploring\r\n            <ArrowForwardIosRoundedIcon\r\n              style={{ fontSize: \"16px\", color: \"#F84284\" }}\r\n            />\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      <div id=\"right-section-container\"></div>\r\n      <a\r\n        href=\"https://www.vantajs.com/\"\r\n        style={{\r\n          position: \"absolute\",\r\n          right: 10,\r\n          bottom: 10,\r\n          textDecoration: \"none\",\r\n          color: \"lightgrey\",\r\n        }}\r\n      >\r\n        vanta.js\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport NavBar from \"./components/Layout/NavBar/NavBar\";\nimport LanguageBlendPage from \"./components/pages/LanguageBlendPage/index\";\nimport NotFound from \"./components/pages/NotFound/NotFound\";\nimport Resources from \"./components/pages/Resources/Resources\";\nimport ChangeLog from \"./components/pages/changelog/ChangeLog\";\nimport React from \"react\";\nimport { MoreStatistics } from \"./components/pages/MoreStatistics\";\nimport MoreDetails from \"./components/pages/MoreDetails\";\nimport useLanguageBlend from \"./useLanguageBlend\";\nimport LandingPage from \"./components/pages/LandingPage\";\n\nexport const BlendContext = React.createContext<any>(null);\n\nfunction App() {\n  const blend = useLanguageBlend();\n\n  return (\n    <BlendContext.Provider value={blend}>\n      <BrowserRouter>\n        <Routes>\n          <Route\n            path=\"/common-words/language-blend\"\n            element={<LanguageBlendPage />}\n          />\n          <Route path=\"/common-words/resources\" element={<Resources />} />\n          <Route path=\"/common-words/changelog\" element={<ChangeLog />} />\n          <Route\n            path=\"/common-words/more-statistics\"\n            element={<MoreStatistics />}\n          />\n          <Route path=\"/common-words/more-details\" element={<MoreDetails />} />\n          <Route path=\"/common-words/\" element={<LandingPage />} />\n\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </BrowserRouter>\n    </BlendContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}