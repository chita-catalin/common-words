{"version":3,"sources":["components/pages/LanguageBlendPage/components/wordsTable.tsx","components/pages/LanguageBlendPage/index.tsx","components/pages/Resources/Resources.tsx","components/pages/changelog/ChangeLog.tsx","components/pages/NotFound/NotFound.tsx","useLanguageBlend.ts","components/pages/about/index.tsx","components/pages/Tools/index.tsx","App.tsx","useLanguage.tsx","index.tsx"],"names":["WordsTable","blend","useContext","BlendContext","LanguageContext","wordsPerPage","words","minWordLength","maxWordLength","wordMatch","useState","page","setPage","itemsPerPage","setItemsPerPage","modalVisible","setModalVisible","selectedWordsArray","setSelectedWordsArray","blendedList","map","el","word","length","style","display","alignItems","flexDirection","paddingTop","current","pageSize","defaultCurrent","total","pageSizeOptions","flexGrow","onChange","flexWrap","marginTop","prefixLetters","nested","index1","index2","maxLength","minLength","join","indexOf","className","cursor","backgroundColor","onClick","substr","split","letter","index","fontWeight","textDecoration","title","visible","onCancel","footer","color","marginRight","languageCode1","marginLeft","languageCode2","prefixLetetrs1","loading","justifyContent","LanguageBlendContext","React","createContext","LanguageBlendPage","Provider","value","id","getFirstLanguage","placeholder","width","defaultValue","languages","language","Option","name","_id","SwapOutlined","getSecondLanguage","sort","a","b","margin","size","min","max","nr","setMinLength","type","setMaxLength","setPrefixLetters","Resources","english","finnish","french","german","hungarian","italian","polish","romanian","spanish","turkish","viewList","setLoading","getLanguage","axios","get","process","response","status","element","document","createElement","file","Blob","data","list","href","URL","createObjectURL","download","body","appendChild","click","console","log","maxWidth","indicator","LoadingOutlined","fontSize","spin","marginBottom","ChangeLog","update1","update2","update3","update4","update5","update6","headStyle","NotFound","useLanguageBlend","selectedLanguage1","setSelectedLanguage1","selectedLanguage2","setSelectedLanguage2","setLanguageCode1","setLanguageCode2","setLanguages","setBlendedList","alert","setAlert","getLanguages","useEffect","reduce","o","v","key","substring","undefined","Object","keys","filteredArray","String","filter","count","duplicate","k","About","findTheCommonWordsOfLanguages","appBuiltUsingMERN","developerAndCommunity","contribuitors","getInvolved","border","padding","borderRadius","ArrowRightOutlined","DatabaseOutlined","CloudServerOutlined","ToolOutlined","AntDesignOutlined","MailOutlined","GithubOutlined","Tools","selectValue","setSelectValue","text","setText","scrapedText","setScrapedText","allowAll","setAllowAll","customCharacters","setCustomCharacters","customCharactersString","setCustomCharactersString","controlsCollapsed","setControlsCollapsed","statisticsCollapsed","setStatisticsCollapsed","allowedChars","setAllowedChars","allWordsCount","setAllWordsCount","uniqueWordsCount","setUniqueWordsCount","extractionTime","setExtractionTime","position","overflowY","enterYourTextHere","rows","e","target","window","navigator","clipboard","writeText","notification","open","message","copied","placement","t0","performance","now","arr","replace","i","includes","aux","toLowerCase","reducer","t1","scrape","copyAll","extract","clear","PlusSquareOutlined","MinusSquareOutlined","strokeColor","percent","format","toFixed","allWords","toString","uniqueWords","trailColor","borderBottom","paddingBottom","checked","textLanguage","disabled","dutch","ukrainian","characters","char","Header","Layout","Sider","Content","App","setLanguage","explore","setExplore","compareLanguages","setCompareLanguages","setViewList","commonWords","setCommonWords","resources","setResources","about","setAbout","changelog","setChangelog","startExploring","setStartExploring","landingPageText","setLandingPageText","setCopied","extractUniqueWords","setExtractUniqueWords","setCopyAll","setExtract","setTextLanguage","setEnterYourTextHere","setAllWords","setCharacters","tools","setTools","setClear","initialWords","setInitialWords","setUniqueWords","selectTwoLanguages","setSelectTwoLanguages","setWordsPerPage","setWords","setMinWordLength","setMaxWordLength","setWordMatch","setFindTheCommonWordsOfLanguages","setDeveloperAndCommunity","setGetInvolved","setContribuitors","setAppBuiltUsingMERN","languageWordList","setLanguageWordList","setEnglish","setSpanish","setFrench","setDutch","setUkrainian","setFinnish","setGerman","setHungarian","setItalian","setPolish","setRomanian","setTurkish","setUpdate1","setUpdate2","setUpdate3","setUpdate4","setUpdate5","setUpdate6","useLanguage","collapsed","setCollapsed","trigger","collapsible","collapsedWidth","minHeight","height","theme","mode","defaultSelectedKeys","Item","to","InfoCircleOutlined","HistoryOutlined","minWidth","MenuUnfoldOutlined","MenuFoldOutlined","suffixIcon","DownOutlined","bordered","lng","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db10f75d.chunk.js","sourcesContent":["import { BlendContext, LanguageContext } from \"../../../../App\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport \"../style.css\";\r\nimport { Badge, Modal, Pagination, Spin, Table, Tag, Tooltip } from \"antd\";\r\n\r\nexport const WordsTable = () => {\r\n  const blend = useContext(BlendContext);\r\n\r\n  const { wordsPerPage, words, minWordLength, maxWordLength, wordMatch } =\r\n    useContext(LanguageContext);\r\n\r\n  const [page, setPage] = useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = useState<number>(200);\r\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\r\n  const [selectedWordsArray, setSelectedWordsArray] = useState<string[]>([]);\r\n\r\n  const data: any = blend.blendedList.map((el: string) => {\r\n    return { word: el };\r\n  });\r\n\r\n  const columns: any = [\r\n    {\r\n      title: \"word\",\r\n      dataIndex: \"word\",\r\n      key: \"word\",\r\n      render: (text: string) => <a>{text}</a>,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {blend.blendedList.length > 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            paddingTop: \"12px\",\r\n          }}\r\n        >\r\n          <Pagination\r\n            current={page}\r\n            pageSize={itemsPerPage}\r\n            defaultCurrent={1}\r\n            total={blend.blendedList.length}\r\n            pageSizeOptions={[50, 100, 200, 500, 1000, 2000, 5000, 10000]}\r\n            style={{ flexGrow: 1 }}\r\n            onChange={(page, pageSize: number) => {\r\n              setItemsPerPage(pageSize);\r\n              setPage(page);\r\n            }}\r\n          />\r\n          <div style={{ display: \"flex\", flexWrap: \"wrap\", marginTop: \"6px\" }}>\r\n            {blend.prefixLetters > 0 &&\r\n              typeof blend.blendedList[0] === \"object\" &&\r\n              //map(nested => nested.map(element => element * 2));\r\n\r\n              blend.blendedList.map((nested: any, index1: number) =>\r\n                nested?.map((el: string, index2: number) => {\r\n                  if (\r\n                    index1 * index2 >= itemsPerPage * page &&\r\n                    index1 * index2 <= itemsPerPage * (page + 1) - 1 &&\r\n                    el.length <= blend.maxLength &&\r\n                    el.length >= blend.minLength &&\r\n                    //and both languages are present\r\n                    nested.join().indexOf(\"1\") !== -1 &&\r\n                    nested.join().indexOf(\"2\") !== -1\r\n                  ) {\r\n                    return (\r\n                      <Tag\r\n                        className=\"word-tag\"\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          flexGrow: 1,\r\n                          marginTop: \"6px\",\r\n                          backgroundColor:\r\n                            el.length <= 5\r\n                              ? \"#e6f7ff\"\r\n                              : el.length <= 10\r\n                              ? \"#bae7ff\"\r\n                              : el.length <= 15\r\n                              ? \"#91d5ff\"\r\n                              : \"#69c0ff\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setSelectedWordsArray(nested);\r\n                          setModalVisible(true);\r\n                        }}\r\n                      >\r\n                        {el\r\n                          .substr(0, el.length - 1)\r\n                          .split(\"\")\r\n                          .map((letter: string, index) => (\r\n                            <span\r\n                              style={{\r\n                                fontWeight:\r\n                                  index < blend.prefixLetters &&\r\n                                  blend.prefixLetters !== 0\r\n                                    ? 600\r\n                                    : 100,\r\n                                textDecoration:\r\n                                  index < blend.prefixLetters &&\r\n                                  blend.prefixLetters !== 0\r\n                                    ? \"underline\"\r\n                                    : \"normal\",\r\n                              }}\r\n                            >\r\n                              {letter}\r\n                            </span>\r\n                          ))}\r\n                      </Tag>\r\n                    );\r\n                  }\r\n                })\r\n              )}\r\n\r\n            {/*Modal for Similar words*/}\r\n            <Modal\r\n              title=\"Common words\"\r\n              visible={modalVisible}\r\n              onCancel={() => setModalVisible(false)}\r\n              footer={null}\r\n            >\r\n              <h3>\r\n                <Badge color=\"#096dd9\" style={{ marginRight: \"0px\" }} /> (\r\n                {blend.languageCode1}) |\r\n                <Badge color=\"#cf1322\" style={{ marginLeft: \"10px\" }} />(\r\n                {blend.languageCode2})\r\n              </h3>\r\n              {selectedWordsArray.map((el: string) => {\r\n                return (\r\n                  <>\r\n                    <span\r\n                      style={{\r\n                        color: el.indexOf(\"1\") !== -1 ? \"#096dd9\" : \"#cf1322\",\r\n                      }}\r\n                    >\r\n                      {el\r\n                        .substr(0, el.length - 1)\r\n                        .split(\"\")\r\n                        .map((letter: string, index) => (\r\n                          <span\r\n                            style={{\r\n                              fontWeight:\r\n                                index < blend.prefixLetters &&\r\n                                blend.prefixLetters !== 0\r\n                                  ? 600\r\n                                  : 100,\r\n                              textDecoration:\r\n                                index < blend.prefixLetters &&\r\n                                blend.prefixLetters !== 0\r\n                                  ? \"underline\"\r\n                                  : \"normal\",\r\n                            }}\r\n                          >\r\n                            {letter}\r\n                          </span>\r\n                        ))}\r\n                    </span>{\" \"}\r\n                    |{\" \"}\r\n                  </>\r\n                );\r\n              })}\r\n            </Modal>\r\n\r\n            {blend.prefixLetters === 0 &&\r\n              blend.blendedList.map((word: string, index: number) => {\r\n                if (\r\n                  index >= itemsPerPage * page &&\r\n                  index <= itemsPerPage * (page + 1) - 1 &&\r\n                  word.length <= blend.maxLength &&\r\n                  word.length >= blend.minLength\r\n                ) {\r\n                  return (\r\n                    <Tag\r\n                      style={{\r\n                        flexGrow: 1,\r\n                        marginTop: \"6px\",\r\n                        backgroundColor:\r\n                          word.length <= 5\r\n                            ? \"#e6f7ff\"\r\n                            : word.length <= 10\r\n                            ? \"#bae7ff\"\r\n                            : word.length <= 15\r\n                            ? \"#91d5ff\"\r\n                            : \"#69c0ff\",\r\n                      }}\r\n                    >\r\n                      {word.split(\"\").map((letter: string, index) => (\r\n                        <span\r\n                          style={{\r\n                            color:\r\n                              index < blend.prefixLetters &&\r\n                              blend.prefixLetetrs1 !== 0\r\n                                ? \"#002766\"\r\n                                : \"black\",\r\n                            fontWeight:\r\n                              index < blend.prefixLetters &&\r\n                              blend.prefixLetters !== 0\r\n                                ? 500\r\n                                : 100,\r\n                          }}\r\n                        >\r\n                          {letter}\r\n                        </span>\r\n                      ))}\r\n                    </Tag>\r\n                  );\r\n                }\r\n              })}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {blend.loading && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"48px\",\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Button, Card, Divider, InputNumber, Select, Statistic } from \"antd\";\r\nimport { WordsTable } from \"./components/wordsTable\";\r\nimport { SwapOutlined } from \"@ant-design/icons\";\r\nimport { BlendContext } from \"../../../App\";\r\nimport { Language } from \"../../../types\";\r\nimport React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport const LanguageBlendContext = React.createContext<any>(null);\r\n\r\nconst LanguageBlendPage = () => {\r\n  const blend = React.useContext(BlendContext);\r\n\r\n  const resetFilters = () => {\r\n    blend.setMinLength(1);\r\n    blend.setMaxLength(99);\r\n  };\r\n\r\n  const handleFirstLanguageChange = (value: string) => {\r\n    blend.getFirstLanguage(value);\r\n  };\r\n\r\n  const handleSecondLanguageChange = (value: string) => {\r\n    blend.getSecondLanguage(value);\r\n  };\r\n\r\n  return (\r\n    <LanguageBlendContext.Provider value={blend}>\r\n      <div id=\"header-container\">\r\n        <Card id=\"inputs-card\">\r\n          <Select\r\n            onChange={handleFirstLanguageChange}\r\n            placeholder=\"select a language\"\r\n            style={{ width: \"160px\" }}\r\n            defaultValue={\"\"}\r\n          >\r\n            {blend.languages.map((language: Language) => {\r\n              return (\r\n                <Select.Option value={language.name} key={language._id}>\r\n                  {language.name}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n          <SwapOutlined\r\n            style={{ marginLeft: \"10px\", marginRight: \"10px\", color: \"white\" }}\r\n          />\r\n\r\n          <Select\r\n            placeholder=\"select another language\"\r\n            onChange={handleSecondLanguageChange}\r\n            defaultValue={\"\"}\r\n            style={{ width: \"160px\" }}\r\n          >\r\n            {blend.languages\r\n              .sort((a: Language, b: Language) => {\r\n                if (a.name > b.name) return 1;\r\n                return -1;\r\n              })\r\n              .map((language: Language) => {\r\n                return (\r\n                  <Select.Option value={language.name} key={language._id}>\r\n                    {language.name}\r\n                  </Select.Option>\r\n                );\r\n              })}\r\n          </Select>\r\n        </Card>\r\n\r\n        <Card id=\"statistics-card\">add statistics here</Card>\r\n\r\n        {blend.blendedList.length > 0 && (\r\n          <Card id=\"controls-card\">\r\n            <div id=\"controls-content\">\r\n              <div style={{ margin: \"5px\" }}>\r\n                Min. word length:{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={99}\r\n                  value={blend.minLength}\r\n                  onChange={(nr: number) => {\r\n                    blend.setMinLength(nr);\r\n                  }}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <div style={{ margin: \"5px\" }}>\r\n                Max. word length:{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={99}\r\n                  value={blend.maxLength}\r\n                  onChange={(nr: number) => {\r\n                    blend.setMaxLength(nr);\r\n                  }}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <div style={{ margin: \"5px\" }}>\r\n                Same prefix length:{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={3}\r\n                  max={99}\r\n                  value={blend.prefixLetters}\r\n                  onChange={(nr: number) => {\r\n                    blend.setPrefixLetters(nr);\r\n                  }}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              <Button style={{ marginTop: \"12px\" }} onClick={resetFilters}>\r\n                Reset all filters\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        )}\r\n      </div>\r\n      <WordsTable />\r\n    </LanguageBlendContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LanguageBlendPage;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Divider, Spin } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Resources = () => {\r\n  const {\r\n    english,\r\n    finnish,\r\n    french,\r\n    german,\r\n    hungarian,\r\n    italian,\r\n    polish,\r\n    romanian,\r\n    spanish,\r\n    turkish,\r\n    viewList,\r\n  } = useContext(LanguageContext);\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const getLanguage = async (language: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([response.data.data[0].list.join(\"\\n\")], {\r\n          type: \"text/plain\",\r\n        });\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"list.txt\";\r\n        document.body.appendChild(element);\r\n        element.click();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexDirection: \"column\", maxWidth: \"300px\" }}\r\n    >\r\n      {!loading ? (\r\n        <>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(en) {english}</div>\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"english\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(fi) {finnish}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"finnish\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(fr) {french}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"french\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(de) {german}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"german\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(hu) {hungarian}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"hungarian\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(it) {italian}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"italian\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(pl) {polish}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"polish\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(ro) {romanian}</div>\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"romanian\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(es) {spanish}</div>\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"spanish\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(tr) {turkish}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"turkish\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Spin\r\n          indicator={\r\n            <LoadingOutlined\r\n              style={{ fontSize: 48, color: \"white\", marginTop: \"100px\" }}\r\n              spin\r\n            />\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resources;\r\n","import { LanguageContext } from \"../../../App\";\r\nimport { useContext } from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst ChangeLog = () => {\r\n  const { update1, update2, update3, update4, update5, update6 } =\r\n    useContext(LanguageContext);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"changelog-container\">\r\n        <div id=\"changelog-sub-container\">\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V1.0.0 / -\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          ></Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.5.0 / 17.5.2022\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {update6}\r\n          </Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.0.5 / 26.4.2022\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {update5}\r\n          </Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.0.4 / 16.4.2022\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {update4}\r\n          </Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.3 / 29.12.2021\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {update3}\r\n          </Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.2 / 10.12.2021\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {update2}\r\n          </Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.1 / 1.12.2021\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {update1}\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeLog;\r\n","const NotFound = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        color: \"#fff\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexGrow: 1,\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <span style={{ fontSize: \"6rem\", marginTop: \"100px\" }}>404</span>\r\n        <p style={{ marginTop: \"-15px\", marginBottom: \"30px\" }}>\r\n          Nothing to see here\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useLanguageBlend = () => {\r\n  const [selectedLanguage1, setSelectedLanguage1] = useState<any>([]);\r\n  const [selectedLanguage2, setSelectedLanguage2] = useState<any>([]);\r\n  const [languageCode1, setLanguageCode1] = useState<string>(\"\");\r\n  const [languageCode2, setLanguageCode2] = useState<string>(\"\");\r\n  const [languages, setLanguages] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [blendedList, setBlendedList] = useState<any>([]);\r\n  const [alert, setAlert] = useState<string>(\"\");\r\n\r\n  //word restrictions\r\n  const [prefixLetters, setPrefixLetters] = useState<number>(3);\r\n\r\n  //controls\r\n  const [minLength, setMinLength] = useState<number>(1);\r\n  const [maxLength, setMaxLength] = useState<number>(99);\r\n\r\n  //Levenstein Distance\r\n  const levenshteinDistance = (str1: string, str2: string) => {\r\n    const track = Array(str2.length + 1)\r\n      .fill(null)\r\n      .map(() => Array(str1.length + 1).fill(null));\r\n    for (let i = 0; i <= str1.length; i += 1) {\r\n      track[0][i] = i;\r\n    }\r\n    for (let j = 0; j <= str2.length; j += 1) {\r\n      track[j][0] = j;\r\n    }\r\n    for (let j = 1; j <= str2.length; j += 1) {\r\n      for (let i = 1; i <= str1.length; i += 1) {\r\n        const indicator = str1[i - 1] === str2[j - 1] ? 0 : 1;\r\n        track[j][i] = Math.min(\r\n          track[j][i - 1] + 1, // deletion\r\n          track[j - 1][i] + 1, // insertion\r\n          track[j - 1][i - 1] + indicator // substitution\r\n        );\r\n      }\r\n    }\r\n    return track[str2.length][str1.length];\r\n  };\r\n\r\n  const getLanguages = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguages`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setLanguages(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const getFirstLanguage = async (language: string) => {\r\n    setLoading(true);\r\n\r\n    //update language code for language1\r\n    switch (language) {\r\n      case \"english\":\r\n        setLanguageCode1(\"en\");\r\n        break;\r\n      case \"finnish\":\r\n        setLanguageCode1(\"fi\");\r\n        break;\r\n      case \"french\":\r\n        setLanguageCode1(\"fr\");\r\n        break;\r\n      case \"german\":\r\n        setLanguageCode1(\"de\");\r\n        break;\r\n      case \"hungarian\":\r\n        setLanguageCode1(\"hu\");\r\n        break;\r\n      case \"italian\":\r\n        setLanguageCode1(\"it\");\r\n        break;\r\n      case \"polish\":\r\n        setLanguageCode1(\"pl\");\r\n        break;\r\n      case \"romanian\":\r\n        setLanguageCode1(\"ro\");\r\n        break;\r\n      case \"spanish\":\r\n        setLanguageCode1(\"es\");\r\n        break;\r\n      case \"turkish\":\r\n        setLanguageCode1(\"tr\");\r\n        break;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSelectedLanguage1(\r\n          response.data.data[0].list.map((el: string) => el + \"1\")\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getSecondLanguage = async (language: string) => {\r\n    setLoading(true);\r\n\r\n    //update language code for language2\r\n    switch (language) {\r\n      case \"english\":\r\n        setLanguageCode2(\"en\");\r\n        break;\r\n      case \"finnish\":\r\n        setLanguageCode2(\"fi\");\r\n        break;\r\n      case \"french\":\r\n        setLanguageCode2(\"fr\");\r\n        break;\r\n      case \"german\":\r\n        setLanguageCode2(\"de\");\r\n        break;\r\n      case \"hungarian\":\r\n        setLanguageCode2(\"hu\");\r\n        break;\r\n      case \"italian\":\r\n        setLanguageCode2(\"it\");\r\n        break;\r\n      case \"polish\":\r\n        setLanguageCode2(\"pl\");\r\n        break;\r\n      case \"romanian\":\r\n        setLanguageCode2(\"ro\");\r\n        break;\r\n      case \"spanish\":\r\n        setLanguageCode2(\"es\");\r\n        break;\r\n      case \"turkish\":\r\n        setLanguageCode2(\"tr\");\r\n        break;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSelectedLanguage2(\r\n          response.data.data[0].list.map((el: string) => el + \"2\")\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLanguages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //for prefix stuff\r\n    if (prefixLetters !== 0) {\r\n      if (selectedLanguage1.length > 0 && selectedLanguage2.length > 0) {\r\n        var words = [...selectedLanguage1, ...selectedLanguage2].reduce(\r\n          (o, v) => {\r\n            let key = v.substring(0, prefixLetters);\r\n            o[key] = o[key] === undefined ? \"\" : o[key] + \"|\" + v;\r\n            return o;\r\n          },\r\n          {}\r\n        );\r\n\r\n        //count is an object with keys\r\n        console.log(words[Object.keys(words)[28]]);\r\n        //Object.keys(obj).length\r\n        var filteredArray = Object.keys(words)\r\n          .map(String)\r\n          .map((key: string) => {\r\n            //((\"str1,str2,str3,str4\".match(/,/g) || []).length)\r\n            if (words[key].split(\"|\").length >= 3) return words[key].split(\"|\");\r\n          })\r\n          .filter((el: any) => {\r\n            if (el !== undefined) return true;\r\n            return false;\r\n          });\r\n        console.log(filteredArray);\r\n\r\n        setBlendedList(filteredArray);\r\n      }\r\n    } else {\r\n      if (selectedLanguage1.length > 0 && selectedLanguage2.length > 0) {\r\n        var count = [...selectedLanguage1, ...selectedLanguage2].reduce(\r\n          (o, v) => {\r\n            o[v] = o[v] + 1 || 1;\r\n            return o;\r\n          },\r\n          {}\r\n        );\r\n\r\n        //count is an object with keys\r\n        console.log(Object.keys(count)[23]);\r\n\r\n        var duplicate = Object.keys(count)\r\n          .filter((k) => count[k] > 1)\r\n          .map(String);\r\n\r\n        setBlendedList(duplicate);\r\n      }\r\n    }\r\n\r\n    //set language codes\r\n  }, [selectedLanguage1, selectedLanguage2, prefixLetters]);\r\n\r\n  return {\r\n    selectedLanguage1,\r\n    setSelectedLanguage1,\r\n\r\n    selectedLanguage2,\r\n    setSelectedLanguage2,\r\n\r\n    loading,\r\n    setLoading,\r\n\r\n    blendedList,\r\n    setBlendedList,\r\n\r\n    languages,\r\n    setLanguages,\r\n\r\n    alert,\r\n    setAlert,\r\n\r\n    getFirstLanguage,\r\n    getSecondLanguage,\r\n\r\n    languageCode1,\r\n    setLanguageCode1,\r\n    languageCode2,\r\n    setLanguageCode2,\r\n\r\n    minLength,\r\n    setMinLength,\r\n\r\n    maxLength,\r\n    setMaxLength,\r\n\r\n    prefixLetters,\r\n    setPrefixLetters,\r\n  };\r\n};\r\n\r\nexport default useLanguageBlend;\r\n","import { SwapOutlined } from \"@ant-design/icons\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { useContext } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport {\r\n  ArrowRightOutlined,\r\n  GithubOutlined,\r\n  MailOutlined,\r\n  DatabaseOutlined,\r\n  ToolOutlined,\r\n  AntDesignOutlined,\r\n  CloudServerOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport const About = () => {\r\n  const {\r\n    findTheCommonWordsOfLanguages,\r\n    appBuiltUsingMERN,\r\n    developerAndCommunity,\r\n    getInvolved,\r\n    contribuitors,\r\n  } = useContext(LanguageContext);\r\n\r\n  return (\r\n    <div id=\"about-page-container\">\r\n      <Card id=\"project-description-container\">\r\n        <h1 style={{ color: \"white\" }}>{findTheCommonWordsOfLanguages}</h1>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            color: \"#EEEEEE\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              color: \"#EEEEEE\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              border: \"1px solid light#EEEEEE\",\r\n              padding: \"8px\",\r\n              borderRadius: \"4px\",\r\n            }}\r\n          >\r\n            <span style={{ color: \"#00ADB5\" }}>ABC</span> PVBF AUX{\" \"}\r\n            <span style={{ color: \"#00ADB5\" }}>DEF</span> IQYE\r\n          </div>\r\n\r\n          <SwapOutlined\r\n            style={{ fontSize: \"2rem\", margin: \"0px 10px 0px 10px\" }}\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              color: \"#EEEEEE\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              border: \"1px solid light#EEEEEE\",\r\n              padding: \"8px\",\r\n              borderRadius: \"4px\",\r\n            }}\r\n          >\r\n            OQUE <span style={{ color: \"#00ADB5\" }}>ABC</span> KIYW JSU{\" \"}\r\n            <span style={{ color: \"#00ADB5\" }}>DEF</span>\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <ArrowRightOutlined\r\n              style={{ fontSize: \"2rem\", color: \"#EEEEEE\", marginLeft: \"10px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                color: \"#00ADB5\",\r\n                marginLeft: \"7px\",\r\n                border: \"1px solid light#EEEEEE\",\r\n                padding: \"8px\",\r\n                borderRadius: \"4px\",\r\n              }}\r\n            >\r\n              <span>ABC</span>\r\n              <span>DEF</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n      {/*App made using mern stack*/}\r\n\r\n      <Card id=\"mern-container\">\r\n        <h1 style={{ color: \"white\" }}>{appBuiltUsingMERN}</h1>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://www.mongodb.com/\" style={{ color: \"#00ADB5\" }}>\r\n              mongoDB\r\n            </a>\r\n            <DatabaseOutlined\r\n              style={{ fontSize: \"3rem\", color: \"#EEEEEE\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://nodejs.dev/\" style={{ color: \"#00ADB5\" }}>\r\n              Node\r\n            </a>\r\n            <CloudServerOutlined\r\n              style={{ fontSize: \"3rem\", color: \"#EEEEEE\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://expressjs.com/\" style={{ color: \"#00ADB5\" }}>\r\n              Express\r\n            </a>\r\n            <ToolOutlined\r\n              style={{ fontSize: \"3rem\", color: \"#EEEEEE\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://reactjs.org/\" style={{ color: \"#00ADB5\" }}>\r\n              React\r\n            </a>\r\n            <AntDesignOutlined\r\n              style={{ fontSize: \"3rem\", color: \"#EEEEEE\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      <Card id=\"developer-and-community-container\">\r\n        <h1 style={{ color: \"white\" }}>{developerAndCommunity}</h1>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <MailOutlined\r\n            style={{\r\n              fontSize: \"1.5rem\",\r\n              color: \"#EEEEEE\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          />\r\n          <div style={{ color: \"#00ADB5\" }}>chita.catalin.adrian@gmail.com</div>\r\n        </div>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <GithubOutlined\r\n            style={{\r\n              fontSize: \"1.5rem\",\r\n              color: \"#EEEEEE\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          />\r\n          <div style={{ color: \"#00ADB5\" }}>\r\n            github.com/chita-catalin/common-words{\" \"}\r\n          </div>\r\n        </div>\r\n\r\n        <h2 style={{ fontWeight: 100, color: \"white\", marginTop: \"10px\" }}>\r\n          {contribuitors}\r\n        </h2>\r\n        <a href=\"https://github.com/chita-catalin\" style={{ color: \"#00ADB5\" }}>\r\n          chita-catalin\r\n        </a>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { Button, Checkbox, Progress, Select, notification } from \"antd\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { useContext, useState } from \"react\";\r\n\r\nimport \"./style.css\";\r\nimport { MinusSquareOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nconst Tools = () => {\r\n  const language = useContext(LanguageContext);\r\n\r\n  const [selectValue, setSelectValue] = useState<string>(\"English\");\r\n  const [text, setText] = useState<string>(\"\");\r\n  const [scrapedText, setScrapedText] = useState<string[]>([]);\r\n  const [allowAll, setAllowAll] = useState<boolean>(false);\r\n\r\n  const [customCharacters, setCustomCharacters] = useState<boolean>(false);\r\n  const [customCharactersString, setCustomCharactersString] =\r\n    useState<string>(\"\");\r\n\r\n  const [controlsCollapsed, setControlsCollapsed] = useState<boolean>(false);\r\n  const [statisticsCollapsed, setStatisticsCollapsed] =\r\n    useState<boolean>(false);\r\n\r\n  const [allowedChars, setAllowedChars] = useState(\r\n    \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n  );\r\n\r\n  const [allWordsCount, setAllWordsCount] = useState<number>(0);\r\n  const [uniqueWordsCount, setUniqueWordsCount] = useState<number>(0);\r\n  const [extractionTime, setExtractionTime] = useState<number>(0);\r\n\r\n  const scrape = () => {\r\n    let t0 = performance.now();\r\n\r\n    let arr: string[] = [];\r\n\r\n    if (allowAll) {\r\n      arr = text.replace(/\\r/g, \" \").split(\" \");\r\n    } else if (customCharacters) {\r\n      //arr is text with all characters other than cusom, turned to spaces\r\n      for (let i = 0; i < text.length; i++) {\r\n        if (customCharactersString.includes(text[i])) arr[i] = text[i];\r\n        else arr[i] = \" \";\r\n      }\r\n      let aux: string = arr.join(\"\");\r\n      arr = aux.replace(/\\r/g, \" \").split(\" \");\r\n    } else {\r\n      //custom language for sure\r\n      for (let i = 0; i < text.length; i++) {\r\n        if (allowedChars.includes(text[i])) arr[i] = text[i];\r\n        else arr[i] = \" \";\r\n      }\r\n      let aux: string = arr.join(\"\");\r\n      arr = aux.replace(/\\r/g, \" \").split(\" \");\r\n    }\r\n\r\n    arr = arr.map((word: string) => word.toLowerCase());\r\n    setAllWordsCount(arr.length);\r\n\r\n    arr = Object.keys(\r\n      arr.reduce((reducer: any, word: any) => {\r\n        reducer[word] = true;\r\n        return reducer;\r\n      }, {})\r\n    );\r\n\r\n    arr.sort();\r\n\r\n    setScrapedText(arr);\r\n    setUniqueWordsCount(arr.length);\r\n\r\n    var t1 = performance.now();\r\n    setExtractionTime(t1 - t0);\r\n  };\r\n\r\n  const copy = () => {\r\n    window.navigator.clipboard.writeText(scrapedText.join(\"\\n\"));\r\n    notification.open({\r\n      message: language.copied,\r\n      placement: \"bottomRight\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"tools-container\" style={{ position: \"relative\" }}>\r\n      {scrapedText.length > 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            overflowY: \"scroll\",\r\n          }}\r\n        >\r\n          {scrapedText.map((word: string) => {\r\n            return <span style={{ margin: \"2px\" }}>{word}</span>;\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <textarea\r\n          value={text}\r\n          placeholder={language.enterYourTextHere}\r\n          rows={1000}\r\n          id=\"text-area\"\r\n          onChange={(e: any) => setText(e.target.value)}\r\n        ></textarea>\r\n      )}\r\n\r\n      <Button\r\n        id=\"main-action-button\"\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          if (scrapedText.length > 0) copy();\r\n          else {\r\n            scrape();\r\n          }\r\n        }}\r\n      >\r\n        {scrapedText.length > 0 ? language.copyAll : language.extract}\r\n      </Button>\r\n\r\n      <Button\r\n        id=\"clear-button\"\r\n        onClick={() => {\r\n          setText(\"\");\r\n          setScrapedText([]);\r\n        }}\r\n      >\r\n        {language.clear}\r\n      </Button>\r\n\r\n      {/*Allowed characters*/}\r\n\r\n      {controlsCollapsed ? (\r\n        <PlusSquareOutlined\r\n          className=\"fixed-controls-collapse\"\r\n          onClick={() => setControlsCollapsed(false)}\r\n        />\r\n      ) : (\r\n        <MinusSquareOutlined\r\n          className=\"fixed-controls-collapse\"\r\n          onClick={() => setControlsCollapsed(true)}\r\n        />\r\n      )}\r\n      {scrapedText.length > 0 ? (\r\n        <>\r\n          {statisticsCollapsed ? (\r\n            <PlusSquareOutlined\r\n              className=\"fixed-statistics-collapse\"\r\n              onClick={() => setStatisticsCollapsed(false)}\r\n            />\r\n          ) : (\r\n            <MinusSquareOutlined\r\n              className=\"fixed-statistics-collapse\"\r\n              onClick={() => setStatisticsCollapsed(true)}\r\n            />\r\n          )}\r\n        </>\r\n      ) : null}\r\n\r\n      {scrapedText.length > 0 && (\r\n        <div\r\n          id=\"fixed-statistics-container\"\r\n          style={{ display: statisticsCollapsed ? \"none\" : \"\" }}\r\n        >\r\n          <div style={{ margin: \"4px 6px 0px 6px\" }}>\r\n            {language.extractionTime}:\r\n          </div>\r\n          <div style={{ margin: \"0px 6px 2px 6px\", fontWeight: \"bold\" }}>\r\n            <Progress\r\n              strokeColor={{\r\n                \"0%\": \"#00ADB5\",\r\n                \"100%\": \"#00ADB5\",\r\n              }}\r\n              percent={(extractionTime * 100) / 1000}\r\n              size=\"small\"\r\n              width={20}\r\n              format={() => \"\"}\r\n              className=\"white-text\"\r\n            />\r\n            {extractionTime.toFixed(1)} ms\r\n          </div>\r\n\r\n          <div style={{ margin: \"4px 6px 0px 6px\" }}>{language.allWords}:</div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              paddingTop: \"4px\",\r\n            }}\r\n          >\r\n            <Progress\r\n              strokeColor={{\r\n                \"0%\": \"#EEEEEE\",\r\n                \"100%\": \"#EEEEEE\",\r\n              }}\r\n              width={80}\r\n              type=\"circle\"\r\n              percent={100}\r\n              format={() => allWordsCount.toString()}\r\n              className=\"white-text\"\r\n            />\r\n          </div>\r\n\r\n          <div style={{ margin: \"4px 6px 0px 6px\" }}>\r\n            {language.uniqueWords}:\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              paddingTop: \"4px\",\r\n            }}\r\n          >\r\n            <Progress\r\n              strokeColor={{\r\n                \"0%\": \"#00ADB5\",\r\n                \"100%\": \"#00ADB5\",\r\n              }}\r\n              width={80}\r\n              type=\"circle\"\r\n              percent={(uniqueWordsCount * 100) / allWordsCount}\r\n              format={() =>\r\n                uniqueWordsCount.toString() +\r\n                ` (${((uniqueWordsCount * 100) / allWordsCount).toFixed(0)}%)`\r\n              }\r\n              trailColor=\"rgb(100,100,100)\"\r\n              className=\"blue-text\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        id=\"fixed-controls-container\"\r\n        style={{ display: controlsCollapsed ? \"none\" : \"\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            margin: \"6px\",\r\n            borderBottom: \"2px solid lightgrey\",\r\n            paddingBottom: \"6px\",\r\n          }}\r\n        >\r\n          <Checkbox\r\n            checked={allowAll}\r\n            style={{ marginRight: \"4px\" }}\r\n            onClick={() => {\r\n              setAllowAll(!allowAll);\r\n              setCustomCharacters(false);\r\n            }}\r\n          />\r\n          {language.allowAll}\r\n        </div>\r\n        <div\r\n          style={{\r\n            margin: \"0px 6px 6px 6px\",\r\n            borderBottom: \"2px solid lightgrey\",\r\n            paddingBottom: \"6px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Checkbox\r\n              checked={customCharacters}\r\n              style={{ marginRight: \"4px\" }}\r\n              onClick={() => {\r\n                setCustomCharacters(!customCharacters);\r\n                setAllowAll(false);\r\n              }}\r\n            />\r\n            {language.customCharacters}\r\n          </div>\r\n\r\n          {customCharacters && (\r\n            <TextArea\r\n              rows={2}\r\n              style={{ marginTop: \"4px\" }}\r\n              onChange={(e: any) => {\r\n                setCustomCharactersString(e.target.value);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            margin: \"0px 6px 0px 6px\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {language.textLanguage}:\r\n        </div>\r\n\r\n        <Select\r\n          disabled={allowAll || customCharacters}\r\n          value={selectValue}\r\n          style={{\r\n            borderRadius: \"4px\",\r\n            margin: \"6px 6px 10px 6px\",\r\n          }}\r\n          onChange={(e: any) => {\r\n            setSelectValue(e);\r\n            console.log(e);\r\n            switch (e) {\r\n              case \"Romanian\":\r\n                setAllowedChars(\r\n                  \"aăâbcdefghiîjklmnopqrsștțuvwxyzAĂÂBCDEFGHIÎJKLMNOPQRSȘTȚUVWXYZ\"\r\n                );\r\n                break;\r\n\r\n              case \"English\":\r\n                setAllowedChars(\r\n                  \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n                );\r\n                break;\r\n\r\n              case \"German\":\r\n                setAllowedChars(\r\n                  \"abcdefghijklmnopqrstuvwxyzäöüßABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜß\"\r\n                );\r\n                break;\r\n              case \"Dutch\":\r\n                setAllowedChars(\r\n                  \"abcdefghiĳjklmnopqrstuvwxyzABCDEFGHIĲJKLMNOPQRSTUVWXYZ\"\r\n                );\r\n                break;\r\n              case \"Ukrainian\":\r\n                setAllowedChars(\r\n                  \"АаБбВвГгҐґДдЕеЄєЖжЗзИиІіЇїЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЬьЮюЯя\"\r\n                );\r\n                break;\r\n            }\r\n          }}\r\n        >\r\n          <Select.Option value=\"Dutch\">{language.dutch}</Select.Option>\r\n          <Select.Option value=\"English\">{language.english}</Select.Option>\r\n          <Select.Option value=\"German\">{language.german}</Select.Option>\r\n          <Select.Option value=\"Romanian\">{language.romanian}</Select.Option>\r\n          <Select.Option value=\"Ukrainian\">{language.ukrainian}</Select.Option>\r\n        </Select>\r\n\r\n        {!allowAll && !customCharacters && (\r\n          <div id=\"characters-count\">\r\n            {language.characters} ({allowedChars.length}):{\" \"}\r\n          </div>\r\n        )}\r\n\r\n        {!allowAll && !customCharacters && (\r\n          <div id=\"allowed-chars-container\">\r\n            {allowedChars.split(\"\").map((char: string) => {\r\n              return <span id=\"allowed-chars\">{char}</span>;\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tools;\r\n","import LanguageBlendPage from \"./components/pages/LanguageBlendPage/index\";\nimport { Route, Routes, HashRouter, Link } from \"react-router-dom\";\nimport Resources from \"./components/pages/Resources/Resources\";\nimport ChangeLog from \"./components/pages/changelog/ChangeLog\";\nimport NotFound from \"./components/pages/NotFound/NotFound\";\nimport useLanguageBlend from \"./useLanguageBlend\";\nimport { About } from \"./components/pages/about\";\nimport Tools from \"./components/pages/Tools\";\nimport { useLanguage } from \"./useLanguage\";\nimport {\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  ToolOutlined,\n  HistoryOutlined,\n  SwapOutlined,\n  DatabaseOutlined,\n  InfoCircleOutlined,\n  DownOutlined,\n} from \"@ant-design/icons\";\nimport { Layout, Menu, Select } from \"antd\";\nimport React, { useState } from \"react\";\n\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\n//env\nimport \"dotenv/config\";\n\nexport const LanguageContext = React.createContext<any>(null);\nexport const BlendContext = React.createContext<any>(null);\n\nconst { Header, Sider, Content } = Layout;\n\nfunction App() {\n  const blend = useLanguageBlend();\n  const language = useLanguage();\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  return (\n    <LanguageContext.Provider value={language}>\n      <BlendContext.Provider value={blend}>\n        <HashRouter>\n          <Layout>\n            <Sider\n              trigger={null}\n              collapsible\n              collapsed={collapsed}\n              className=\"sider\"\n              collapsedWidth={0}\n            >\n              <Menu\n                style={{\n                  paddingTop: \"60px\",\n                  minHeight: \"100vh\",\n                  height: \"100%\",\n                  backgroundColor: \"#393E46\",\n                }}\n                theme=\"dark\"\n                mode=\"inline\"\n                defaultSelectedKeys={[\"1\"]}\n              >\n                <Menu.Item key=\"1\">\n                  <Link to=\"/language-blend\">\n                    <SwapOutlined /> <span>{language.compareLanguages}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                  <Link to=\"/resources\">\n                    <DatabaseOutlined /> <span>{language.resources}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\">\n                  <Link to=\"/tools\">\n                    <ToolOutlined /> <span>{language.extractUniqueWords}</span>\n                  </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"4\">\n                  <Link to=\"/about\">\n                    <InfoCircleOutlined /> <span>{language.about}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"5\">\n                  <Link to=\"/changelog\">\n                    <HistoryOutlined /> <span>{language.changelog}</span>\n                  </Link>\n                </Menu.Item>\n              </Menu>\n            </Sider>\n            <Layout className=\"site-layout\" style={{ minWidth: 320 }}>\n              <Header\n                className=\"site-layout-background\"\n                style={{\n                  color: \"white\",\n                  backgroundColor: \"#393E46\",\n                  padding: 0,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div className=\"trigger-container\">\n                  {collapsed ? (\n                    <MenuUnfoldOutlined\n                      className=\"trigger\"\n                      onClick={() => setCollapsed(!collapsed)}\n                    />\n                  ) : (\n                    <MenuFoldOutlined\n                      className=\"trigger\"\n                      onClick={() => setCollapsed(!collapsed)}\n                    />\n                  )}\n                </div>\n\n                <div id=\"title\">\n                  <Link\n                    to=\"/\"\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"white\",\n                    }}\n                  >\n                    {language.commonWords}\n                  </Link>\n                  <span\n                    style={{\n                      fontSize: \"15px\",\n                      marginLeft: \"2px\",\n                      color: \"white\",\n                    }}\n                    className=\"version\"\n                  >\n                    V1.0.0\n                  </span>\n                </div>\n\n                <Select\n                  suffixIcon={<DownOutlined style={{ color: \"white\" }} />}\n                  style={{ marginRight: \"24px\", color: \"white\" }}\n                  defaultValue=\"english\"\n                  bordered={false}\n                  value={\n                    language.language === \"romanian\" ? \"Română\" : \"English\"\n                  }\n                  onChange={(lng: string) => language.setLanguage(lng)}\n                >\n                  <Select.Option value=\"english\">\n                    {language.english}\n                  </Select.Option>\n                  <Select.Option value=\"romanian\">\n                    {language.romanian}\n                  </Select.Option>\n                </Select>\n              </Header>\n              <Content\n                style={{\n                  padding: \"12px\",\n                  color: \"white\",\n                  minHeight: 280,\n                  minWidth: 320,\n                  backgroundColor: \"#222831\",\n                }}\n              >\n                <Routes>\n                  <Route\n                    path=\"/language-blend\"\n                    element={<LanguageBlendPage />}\n                  />\n                  <Route path=\"/resources\" element={<Resources />} />\n                  <Route path=\"/changelog\" element={<ChangeLog />} />\n                  <Route path=\"/about\" element={<About />} />\n                  <Route path=\"*\" element={<NotFound />} />\n                  <Route path=\"/tools\" element={<Tools />} />\n                  <Route path=\"/\" element={<LanguageBlendPage />} />\n                </Routes>\n              </Content>\n            </Layout>\n          </Layout>\n        </HashRouter>\n      </BlendContext.Provider>\n    </LanguageContext.Provider>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useLanguage = () => {\r\n  const [language, setLanguage] = useState(\"english\");\r\n\r\n  const [explore, setExplore] = useState(\"Explore\");\r\n  const [compareLanguages, setCompareLanguages] = useState(\"Compare languages\");\r\n  const [viewList, setViewList] = useState(\"Download list (.txt)\");\r\n\r\n  const [commonWords, setCommonWords] = useState<string>(\"COMMON WORDS\");\r\n  const [resources, setResources] = useState(\"resources\");\r\n  const [about, setAbout] = useState(\"about\");\r\n  const [changelog, setChangelog] = useState(\"changelog\");\r\n  const [startExploring, setStartExploring] = useState(\"START EXPLORING\");\r\n  const [landingPageText, setLandingPageText] = useState(\r\n    \"Compare your language with another! Find the common words, and more fun statistics about languages, completely free!\"\r\n  );\r\n\r\n  //tools page\r\n  const [copied, setCopied] = useState(\"Copied!\");\r\n  const [extractUniqueWords, setExtractUniqueWords] = useState(\r\n    \"Extract unique words\"\r\n  );\r\n  const [copyAll, setCopyAll] = useState(\"Copy all\");\r\n  const [extract, setExtract] = useState(\"Extract\");\r\n  const [textLanguage, setTextLanguage] = useState(\"Text language\");\r\n  const [customCharacters, setCustomCharacters] = useState(\"Custom characters\");\r\n  const [allowAll, setAllowAll] = useState(\"Allow all\");\r\n  const [enterYourTextHere, setEnterYourTextHere] = useState(\r\n    \"Enter your text here...\"\r\n  );\r\n  const [extractionTime, setExtractionTime] = useState(\"Extraction time\");\r\n  const [allWords, setAllWords] = useState(\"All words\");\r\n  const [characters, setCharacters] = useState(\"Characters\");\r\n  const [tools, setTools] = useState(\"tools\");\r\n  const [clear, setClear] = useState(\"Clear\");\r\n  const [initialWords, setInitialWords] = useState(\"Initial words\");\r\n  const [uniqueWords, setUniqueWords] = useState(\"Unique words\");\r\n  //blend page\r\n  const [selectTwoLanguages, setSelectTwoLanguages] = useState(\r\n    \"Select two languages!\"\r\n  );\r\n  const [wordsPerPage, setWordsPerPage] = useState(\"Words per page\");\r\n  const [words, setWords] = useState(\"Words\");\r\n  const [minWordLength, setMinWordLength] = useState(\"Min. word length\");\r\n  const [maxWordLength, setMaxWordLength] = useState(\"Max. word length\");\r\n  const [wordMatch, setWordMatch] = useState(\"Word match (different letters)\");\r\n  //about page\r\n  const [findTheCommonWordsOfLanguages, setFindTheCommonWordsOfLanguages] =\r\n    useState(\"FIND THE COMMON WORDS OF LANGUAGES\");\r\n  const [developerAndCommunity, setDeveloperAndCommunity] = useState(\r\n    \"DEVELOPER & COMMUNITY\"\r\n  );\r\n  const [getInvolved, setGetInvolved] = useState(\"GET INVOLVED!\");\r\n  const [contribuitors, setContribuitors] = useState(\"CONTRIBUTORS:\");\r\n  const [appBuiltUsingMERN, setAppBuiltUsingMERN] = useState(\r\n    \"THIS WEB APP WAS BUILT USING THE MERN STACK\"\r\n  );\r\n  //resources\r\n  const [languageWordList, setLanguageWordList] = useState(\r\n    \"Language word lists (all words)\"\r\n  );\r\n  //languages\r\n  const [english, setEnglish] = useState(\"English\");\r\n  const [mandarinChinese, setMandarinChinese] = useState(\"Mandarin Chinese\");\r\n  const [hindi, setHindi] = useState(\"Hindi\");\r\n  const [spanish, setSpanish] = useState(\"Spanish\");\r\n  const [french, setFrench] = useState(\"French\");\r\n  const [standardArabic, setStandardArabic] = useState(\"Standard Arabic\");\r\n  const [bengali, setBengali] = useState(\"Bengali\");\r\n  const [dutch, setDutch] = useState(\"Dutch\");\r\n  const [ukrainian, setUkrainian] = useState(\"Ukrainian\");\r\n\r\n  const [finnish, setFinnish] = useState(\"Finnish\");\r\n  const [german, setGerman] = useState(\"German\");\r\n  const [hungarian, setHungarian] = useState(\"Hungarian\");\r\n  const [italian, setItalian] = useState(\"Italian\");\r\n  const [polish, setPolish] = useState(\"Polish\");\r\n  const [romanian, setRomanian] = useState(\"Romanian\");\r\n  const [turkish, setTurkish] = useState(\"Turkish\");\r\n\r\n  //                 const[Russian – 258M\r\n  //           const[Portuguese – 252.2M\r\n  //             const[Indonesian – 199M\r\n  //               const[Urdu – 170.6M\r\n  //                 const[Standard German – 131.6M\r\n  //                   const[Japanese – 126.4M\r\n  //                     const[Swahili – 98.5M\r\n  //                       const[Marathi – 95.3M\r\n  //                         const[Telugu – 93M\r\n  //                           const[Turkish – 85.2M\r\n  //                             const[Yue Chinese – 84.9M\r\n  //                               const[Tamil – 83.8M\r\n  //                                 const[Western Punjabi – 82.8M\r\n  //                                   const[Wu Chinese – 81.8M\r\n  //                                     const[Korean – 79.4M\r\n  //                                       const[Vietnamese -77M\r\n  //                                         const[Hausa – 72.7M\r\n  //                                           const[Javanese – 68.3M\r\n  //                                             const[Egyptian Arabic – 67.8M\r\n  //                                               const[Italian – 67.7M\r\n  //                                                 const[Thai – 60.7M\r\n  //                                                   const[Gujarati – 60.7M\r\n  //                                                     const[Kannada – 56.5M\r\n  //                                                       const[Persian – 55M\r\n  //                                                         const[Bhojpuri – 52.4M\r\n  //                                                           const[Polish – 50M\r\n  //                                                             const[Southern Min – 48.5M\r\n  //                                                               const[Hakka – 47.8M\r\n  //                                                                 const[Filipino – 45M\r\n  //                                                                   const[Pashto – 40M\r\n  //                                                                     const[Ukranian – 40M\r\n  //                                                                       const[Yoruba – 40M\r\n  //                                                                         const[Malayalam – 37.7M\r\n  //                                                                           const[Xiang Chinese – 36M\r\n  //                                                                             const[Odia – 35M\r\n  //                                                                               const[Maithili – 35M\r\n  //                                                                                 const[Sudanese Arabic– 33M\r\n  //                                                                                   const[Burmese – 32M\r\n  //                                                                                     const[Oromo – 30M\r\n  //                                                                                       const[Uzbek – 27M\r\n  //                                                                                         const[Romanian – 26M\r\n  //                                                                                           const[Sindhi – 25M\r\n  //                                                                                             const[Tagalog – 23.8M\r\n  // //ChangeLog\r\n  const [update1, setUpdate1] = useState(\"Project created\");\r\n  const [update2, setUpdate2] = useState(\"Added basic language blending\");\r\n  const [update3, setUpdate3] = useState(\r\n    `Added Italian,French,Finnish languages\\nEnhanced results page.\\nadded ${\"changelog\"} section.\\nadded country flags.\\nadded dark/light theme switch`\r\n  );\r\n  const [update4, setUpdate4] = useState(\r\n    `Removed language lists from frontend side\\nAdded about section\\nRemoved light/dark theme switch\\nEnhanced landing page UI\\nUpdated versioning system to match web standards`\r\n  );\r\n  const [update5, setUpdate5] = useState(\r\n    `Connected to Backend App\\nNow retreiving languages list from database\\nAdded not-yet-functional table to \"blend-page\"\\nadded Romanian word list to \"Resources\" page`\r\n  );\r\n  const [update6, setUpdate6] = useState(\r\n    \"Added language switch RO/EN\\nAdded more languages\\nAdded language comparing functionality\\nAdded tools section, with unique word extraction tool\\nAdded languages list from database to resources page\\nImproved general UI\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (language) {\r\n      case \"english\":\r\n        setCommonWords(\"COMMON WORDS\");\r\n        setExplore(\"Explore\");\r\n        setCompareLanguages(\"Compare languages\");\r\n        setViewList(\"Download list (.txt)\");\r\n        setResources(\"resources\");\r\n        setAbout(\"about\");\r\n        setChangelog(\"changelog\");\r\n        setStartExploring(\"START EXPLORING\");\r\n        setLandingPageText(\r\n          \"Compare your language with another! Find the common words, and more fun statistics about languages, completely free!\"\r\n        );\r\n        //tools\r\n        setCopied(\"Copied!\");\r\n        setCopyAll(\"Copy all\");\r\n        setExtractUniqueWords(\"Extract unique words\");\r\n        setExtract(\"Extract\");\r\n        setTextLanguage(\"Text language\");\r\n        setCustomCharacters(\"Custom characters\");\r\n        setAllowAll(\"Allow all\");\r\n        setEnterYourTextHere(\"Enter your text here...\");\r\n        setExtractionTime(\"Extraction time\");\r\n        setAllWords(\"All words\");\r\n        setCharacters(\"Characters\");\r\n        setTools(\"Tools\");\r\n        setClear(\"Clear\");\r\n        setInitialWords(\"Initial words\");\r\n        setUniqueWords(\"Unique words\");\r\n        //blend page\r\n        setSelectTwoLanguages(\"Select two languages!\");\r\n        setWordsPerPage(\"Words per page\");\r\n        setWords(\"Words\");\r\n        setMinWordLength(\"Min. word length\");\r\n        setMaxWordLength(\"Max. word length\");\r\n        setWordMatch(\"Word Match (different letters)\");\r\n        //about page\r\n        setFindTheCommonWordsOfLanguages(\"FIND THE COMMON WORDS OF LANGUAGES\");\r\n        setDeveloperAndCommunity(\"DEVELOPER & COMMUNITY\");\r\n        setGetInvolved(\"GET INVOLVED!\");\r\n        setContribuitors(\"CONTRIBUITORS:\");\r\n        setAppBuiltUsingMERN(\"THIS WEB APP WAS BUILT USING THE MERN STACK\");\r\n        //resources\r\n        setLanguageWordList(\"Language word lists (all words)\");\r\n        //languages\r\n        setUkrainian(\"Ukrainian\");\r\n        setDutch(\"Dutch\");\r\n        setEnglish(\"English\");\r\n        setFinnish(\"Finnish\");\r\n        setFrench(\"French\");\r\n        setGerman(\"German\");\r\n        setHungarian(\"Hungarian\");\r\n        setItalian(\"Italian\");\r\n        setPolish(\"Polish\");\r\n        setRomanian(\"Romanian\");\r\n        setSpanish(\"Spanish\");\r\n        setTurkish(\"Turkish\");\r\n        //ChangeLog\r\n        setUpdate1(\"Project created\");\r\n        setUpdate2(\"Added basic language blending\");\r\n        setUpdate3(\r\n          `Added Italian,French,Finnish languages\\nEnhanced results page.\\nadded ${\"changelog\"} section.\\nadded country flags.\\nadded dark/light theme switch`\r\n        );\r\n        setUpdate4(\r\n          `Removed language lists from frontend side\\nAdded about section\\nRemoved light/dark theme switch\\nEnhanced landing page UI\\nUpdated versioning system to match web standards`\r\n        );\r\n        setUpdate5(\r\n          `Connected to Backend App\\nNow retreiving languages list from database\\nAdded not-yet-functional table to \"blend-page\"\\nadded Romanian word list to \"Resources\" page`\r\n        );\r\n        setUpdate6(\r\n          \"Added language switch RO/EN\\nAdded more languages\\nAdded language comparing functionality\\nAdded tools section, with unique word extraction tool\\nAdded languages list from database to resources page\\nImproved general UI\"\r\n        );\r\n\r\n        break;\r\n\r\n      case \"romanian\":\r\n        setCommonWords(\"CUVINTE COMUNE\");\r\n        setExplore(\"Explorează\");\r\n        setCompareLanguages(\"Compară\");\r\n        setViewList(\"Descarcă lista (.txt)\");\r\n        setResources(\"Resurse\");\r\n        setAbout(\"Despre\");\r\n        setChangelog(\"Istoric schimbari\");\r\n        setStartExploring(\"EXPLOREAZĂ\");\r\n        setLandingPageText(\r\n          \"Compară limba ta cu altă limbă! Găsește cuvintele comune, și alte statistici interesante despre limbi, complet gratuit!\"\r\n        );\r\n\r\n        //tools\r\n        setCopied(\"Copiat!\");\r\n        setCopyAll(\"Copiază tot\");\r\n        setExtractUniqueWords(\"Extrage cuvinte unice\");\r\n        setExtract(\"Extrage\");\r\n        setTextLanguage(\"Limba textului\");\r\n        setCustomCharacters(\"Permite doar caracterele următoare\");\r\n        setAllowAll(\"Permite tot\");\r\n        setEnterYourTextHere(\"Introdu textul aici...\");\r\n        setExtractionTime(\"Durată extragere\");\r\n        setAllWords(\"Cuvinte totale\");\r\n        setCharacters(\"Caractere\");\r\n        setTools(\"Unelte\");\r\n        setClear(\"Șterge\");\r\n        setInitialWords(\"Cuvinte inițiale\");\r\n        setUniqueWords(\"Cuvinte unice\");\r\n        //blend page\r\n        setSelectTwoLanguages(\"Selectează două limbi diferite!\");\r\n        setWordsPerPage(\"Cuvinte pe pagină\");\r\n        setWords(\"Cuvinte\");\r\n        setMinWordLength(\"Lungime minimă\");\r\n        setMaxWordLength(\"Lungime maximă\");\r\n        setWordMatch(\"Potrivire cuvinte (litere diferite)\");\r\n        //about page\r\n        setFindTheCommonWordsOfLanguages(\r\n          \"GĂSEȘTE CUVINTELE COMUNE ALE LIMBILOR\"\r\n        );\r\n        setDeveloperAndCommunity(\"DEZVOLTATOR & COMUNITATE\");\r\n        setGetInvolved(\"IMPLICĂ-TE!\");\r\n        setContribuitors(\"CONTRIBUITORI:\");\r\n        setAppBuiltUsingMERN(\r\n          \"ACEASTĂ APLICAȚIE WEB A FOST DEZVOLTATĂ FOLOSIND STACK-UL MERN\"\r\n        );\r\n        //resources\r\n        setLanguageWordList(\r\n          \"Listele de cuvinte ale limbilor (toate cuvintele)\"\r\n        );\r\n        //languages\r\n        setUkrainian(\"Ucraineană\");\r\n        setDutch(\"Neerlandeză\");\r\n        setEnglish(\"Engleză\");\r\n        setFinnish(\"Finlandeză\");\r\n        setFrench(\"Franceză\");\r\n        setGerman(\"Germană\");\r\n        setHungarian(\"Maghiară\");\r\n        setItalian(\"Italiană\");\r\n        setPolish(\"Poloneză\");\r\n        setRomanian(\"Română\");\r\n        setSpanish(\"Spaniolă\");\r\n        setTurkish(\"Turcă\");\r\n        //changelog\r\n        setUpdate1(\"Început proiect\");\r\n        setUpdate2(\"Adăugat algoritm de combinare a limbilor\");\r\n        setUpdate3(\r\n          `Adăugat Italiană, Franceză, Finlandeză\\nÎmbunătățit pagina de rezultate\\nAdăugat secțiune de \"istoric schimbări\"\\nAdăugat steaguri pentru țări\\nAdăugat buton pentru temă light/dark`\r\n        );\r\n        setUpdate4(\r\n          `Înlăturat listele de cuvinte din Frontend\\nAdăugat secțiunea \"despre\"\\nÎnlăturat butonul pentru temă light/dark\\nÎmbunătățit UI-ul paginii de pornire\\nUpdatat sistemul de versionare cu standardul web`\r\n        );\r\n        setUpdate5(\r\n          `Conectat aplicația web la Backend\\nListele de limbi acum sunt preluate dintr-o bază de date\\nAdăugat tabel de cuvinte, încă nefuncțional\\nAdăugat lista cuvintelor din limba română la pagina de resurse `\r\n        );\r\n        setUpdate6(\r\n          `Adăugat funcția de schimbare de limbă\\nAdăugat mai multe limbi\\nAdăugat funcția de comparare a limbilor\\nAdăugat secțiunea de unelte\\nAdăugat unealta de extragere a cuvintelor unice\\nAdăugat liste de limbi la pagina de resurse\\nÎmbunătățit UI general`\r\n        );\r\n\r\n        break;\r\n    }\r\n  }, [language]);\r\n\r\n  return {\r\n    language,\r\n    explore,\r\n    compareLanguages,\r\n    viewList,\r\n    setLanguage,\r\n    commonWords,\r\n    resources,\r\n    about,\r\n    changelog,\r\n    startExploring,\r\n    landingPageText,\r\n    //tools\r\n    copied,\r\n    copyAll,\r\n    allWords,\r\n    extractionTime,\r\n    extract,\r\n    textLanguage,\r\n    customCharacters,\r\n    allowAll,\r\n    enterYourTextHere,\r\n    extractUniqueWords,\r\n    characters,\r\n    clear,\r\n    initialWords,\r\n    uniqueWords,\r\n    tools,\r\n    //blend page\r\n    selectTwoLanguages,\r\n    wordsPerPage,\r\n    words,\r\n    minWordLength,\r\n    maxWordLength,\r\n    //about page\r\n    findTheCommonWordsOfLanguages,\r\n    developerAndCommunity,\r\n    getInvolved,\r\n    contribuitors,\r\n    appBuiltUsingMERN,\r\n    wordMatch,\r\n    //resources\r\n    languageWordList,\r\n    //languages\r\n    ukrainian,\r\n    dutch,\r\n    english,\r\n    finnish,\r\n    french,\r\n    german,\r\n    hungarian,\r\n    italian,\r\n    polish,\r\n    romanian,\r\n    spanish,\r\n    turkish,\r\n    //ChangeLog\r\n    update1,\r\n    update2,\r\n    update3,\r\n    update4,\r\n    update5,\r\n    update6,\r\n  };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}