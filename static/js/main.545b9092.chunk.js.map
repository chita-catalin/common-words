{"version":3,"sources":["components/pages/LanguageBlendPage/components/wordsTable.tsx","components/pages/LanguageBlendPage/index.tsx","components/pages/Resources/Resources.tsx","components/pages/changelog/ChangeLog.tsx","components/pages/NotFound/NotFound.tsx","useLanguageBlend.ts","components/pages/about/index.tsx","components/pages/Tools/index.tsx","App.tsx","useLanguage.tsx","index.tsx"],"names":["WordsTable","blend","useContext","BlendContext","LanguageContext","wordsPerPage","words","minWordLength","maxWordLength","wordMatch","useState","page","setPage","itemsPerPage","setItemsPerPage","modalVisible","setModalVisible","selectedWordsArray","setSelectedWordsArray","blendedList","length","id","current","pageSize","defaultCurrent","total","pageSizeOptions","style","flexGrow","onChange","display","flexWrap","marginTop","prefixLetters","map","nested","index1","el","index2","maxLength","minLength","join","indexOf","className","backgroundColor","onClick","substring","title","visible","onCancel","footer","bodyStyle","maskStyle","color","marginRight","languageCode1","marginLeft","languageCode2","substr","split","letter","index","fontWeight","textDecoration","loading","justifyContent","LoadingOutlined","fontSize","spin","LanguageBlendContext","React","createContext","LanguageBlendPage","language","Provider","value","suffixIcon","DownOutlined","getFirstLanguage","placeholder","width","defaultValue","languages","Option","name","_id","SwapOutlined","getSecondLanguage","sort","a","b","margin","size","min","max","nr","setMinLength","type","setMaxLength","samePrefixLength","setPrefixLetters","resetAllFilters","Resources","english","finnish","french","german","hungarian","italian","polish","romanian","spanish","turkish","viewList","setLoading","getLanguage","axios","get","process","response","status","element","document","createElement","file","Blob","data","list","href","URL","createObjectURL","download","body","appendChild","click","console","log","flexDirection","maxWidth","indicator","marginBottom","ChangeLog","update1","update2","update3","update4","update5","update6","whiteSpace","headStyle","NotFound","alignItems","useLanguageBlend","selectedLanguage1","setSelectedLanguage1","selectedLanguage2","setSelectedLanguage2","setLanguageCode1","setLanguageCode2","setLanguages","setBlendedList","alert","setAlert","getLanguages","useEffect","reduce","o","v","key","undefined","filteredArray","Object","keys","String","filter","count","duplicate","k","About","findTheCommonWordsOfLanguages","appBuiltUsingMERN","developerAndCommunity","contribuitors","getInvolved","border","padding","borderRadius","ArrowRightOutlined","DatabaseOutlined","CloudServerOutlined","ToolOutlined","AntDesignOutlined","MailOutlined","GithubOutlined","Tools","selectValue","setSelectValue","text","setText","scrapedText","setScrapedText","allowAll","setAllowAll","customCharacters","setCustomCharacters","customCharactersString","setCustomCharactersString","controlsCollapsed","setControlsCollapsed","statisticsCollapsed","setStatisticsCollapsed","allowedChars","setAllowedChars","allWordsCount","setAllWordsCount","uniqueWordsCount","setUniqueWordsCount","extractionTime","setExtractionTime","position","overflowY","word","enterYourTextHere","rows","e","target","window","navigator","clipboard","writeText","notification","open","message","copied","placement","t0","performance","now","arr","replace","i","includes","aux","toLowerCase","reducer","t1","scrape","copyAll","extract","clear","PlusSquareOutlined","MinusSquareOutlined","strokeColor","percent","format","toFixed","allWords","paddingTop","toString","uniqueWords","trailColor","borderBottom","paddingBottom","checked","textLanguage","disabled","dutch","ukrainian","characters","char","Header","Layout","Sider","Content","App","setLanguage","compareLanguages","setCompareLanguages","setViewList","commonWords","setCommonWords","resources","setResources","about","setAbout","changelog","setChangelog","setCopied","extractUniqueWords","setExtractUniqueWords","setCopyAll","setExtract","setTextLanguage","setEnterYourTextHere","setAllWords","setCharacters","tools","setTools","setClear","initialWords","setInitialWords","setUniqueWords","setResetAllFilters","setSamePrefixLength","selectTwoLanguages","setSelectTwoLanguages","setWordsPerPage","setWords","setMinWordLength","setMaxWordLength","setWordMatch","setFindTheCommonWordsOfLanguages","setDeveloperAndCommunity","setGetInvolved","setContribuitors","setAppBuiltUsingMERN","languageWordList","setLanguageWordList","setEnglish","setSpanish","setFrench","setDutch","setUkrainian","setFinnish","setGerman","setHungarian","setItalian","setPolish","setRomanian","setTurkish","setUpdate1","setUpdate2","setUpdate3","setUpdate4","setUpdate5","setUpdate6","useLanguage","collapsed","setCollapsed","trigger","collapsible","collapsedWidth","minHeight","height","theme","mode","defaultSelectedKeys","Item","to","InfoCircleOutlined","HistoryOutlined","minWidth","MenuUnfoldOutlined","MenuFoldOutlined","bordered","lng","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.545b9092.chunk.js","sourcesContent":["import { BlendContext, LanguageContext } from \"../../../../App\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Badge, Modal, Pagination, Spin } from \"antd\";\r\n\r\nimport \"../style.css\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nexport const WordsTable = () => {\r\n  const blend = useContext(BlendContext);\r\n\r\n  const { wordsPerPage, words, minWordLength, maxWordLength, wordMatch } =\r\n    useContext(LanguageContext);\r\n\r\n  const [page, setPage] = useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = useState<number>(200);\r\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\r\n  const [selectedWordsArray, setSelectedWordsArray] = useState<string[]>([]);\r\n\r\n  return (\r\n    <>\r\n      {blend.blendedList.length > 0 ? (\r\n        <div id=\"pagination-container\">\r\n          <Pagination\r\n            current={page}\r\n            pageSize={itemsPerPage}\r\n            defaultCurrent={1}\r\n            total={blend.blendedList.length}\r\n            pageSizeOptions={[50, 100, 200, 500, 1000, 2000, 5000, 10000]}\r\n            style={{ flexGrow: 1 }}\r\n            onChange={(page, pageSize: number) => {\r\n              setItemsPerPage(pageSize);\r\n              setPage(page);\r\n            }}\r\n          />\r\n          <div style={{ display: \"flex\", flexWrap: \"wrap\", marginTop: \"12px\" }}>\r\n            {blend.prefixLetters > 0 &&\r\n              typeof blend.blendedList[0] === \"object\" &&\r\n              blend.blendedList.map((nested: any, index1: number) =>\r\n                nested?.map((el: string, index2: number) => {\r\n                  if (\r\n                    index1 * index2 >= itemsPerPage * page &&\r\n                    index1 * index2 <= itemsPerPage * (page + 1) - 1 &&\r\n                    el.length <= blend.maxLength &&\r\n                    el.length >= blend.minLength &&\r\n                    //and both languages are present\r\n                    nested.join().indexOf(\"1\") !== -1 &&\r\n                    nested.join().indexOf(\"2\") !== -1\r\n                  ) {\r\n                    return (\r\n                      <div\r\n                        className=\"word-tag\"\r\n                        style={{\r\n                          backgroundColor:\r\n                            el.length <= 5\r\n                              ? \"#58606e\"\r\n                              : el.length <= 10\r\n                              ? \"#707a8c\"\r\n                              : el.length <= 15\r\n                              ? \"#8b97ad\"\r\n                              : \"#a3b2cc\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setSelectedWordsArray(nested);\r\n                          setModalVisible(true);\r\n                        }}\r\n                      >\r\n                        {el.substring(0, el.length - 1)}\r\n                      </div>\r\n                    );\r\n                  }\r\n                })\r\n              )}\r\n\r\n            {/*Modal for Similar words*/}\r\n            <Modal\r\n              title=\"Common words\"\r\n              visible={modalVisible}\r\n              onCancel={() => setModalVisible(false)}\r\n              footer={null}\r\n              style={{ backgroundColor: \"#EEEEEE\" }}\r\n              bodyStyle={{ backgroundColor: \"#EEEEEE\" }}\r\n              maskStyle={{ backgroundColor: \"#00ADB5\" }}\r\n            >\r\n              <h3>\r\n                <Badge color=\"#096dd9\" style={{ marginRight: \"0px\" }} /> (\r\n                {blend.languageCode1}) |\r\n                <Badge color=\"#cf1322\" style={{ marginLeft: \"10px\" }} />(\r\n                {blend.languageCode2})\r\n              </h3>\r\n              {selectedWordsArray.map((el: string) => {\r\n                return (\r\n                  <>\r\n                    <span\r\n                      style={{\r\n                        color: el.indexOf(\"1\") !== -1 ? \"#096dd9\" : \"#cf1322\",\r\n                      }}\r\n                    >\r\n                      {el\r\n                        .substr(0, el.length - 1)\r\n                        .split(\"\")\r\n                        .map((letter: string, index) => (\r\n                          <span\r\n                            style={{\r\n                              fontWeight:\r\n                                index < blend.prefixLetters &&\r\n                                blend.prefixLetters !== 0\r\n                                  ? 600\r\n                                  : 100,\r\n                              textDecoration:\r\n                                index < blend.prefixLetters &&\r\n                                blend.prefixLetters !== 0\r\n                                  ? \"underline\"\r\n                                  : \"normal\",\r\n                            }}\r\n                          >\r\n                            {letter}\r\n                          </span>\r\n                        ))}\r\n                    </span>{\" \"}\r\n                    |{\" \"}\r\n                  </>\r\n                );\r\n              })}\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {blend.loading && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"48px\",\r\n          }}\r\n        >\r\n          <LoadingOutlined style={{ fontSize: 44, color: \"#EEEEEE\" }} spin />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Button, Card, Divider, InputNumber, Select } from \"antd\";\r\nimport { WordsTable } from \"./components/wordsTable\";\r\nimport { DownOutlined, SwapOutlined } from \"@ant-design/icons\";\r\nimport { BlendContext, LanguageContext } from \"../../../App\";\r\nimport { Language } from \"../../../types\";\r\nimport React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport const LanguageBlendContext = React.createContext<any>(null);\r\n\r\nconst LanguageBlendPage = () => {\r\n  const blend = React.useContext(BlendContext);\r\n  const language = React.useContext(LanguageContext);\r\n\r\n  const resetFilters = () => {\r\n    blend.setMinLength(1);\r\n    blend.setMaxLength(99);\r\n  };\r\n\r\n  const handleFirstLanguageChange = (value: string) => {\r\n    blend.getFirstLanguage(value);\r\n  };\r\n\r\n  const handleSecondLanguageChange = (value: string) => {\r\n    blend.getSecondLanguage(value);\r\n  };\r\n\r\n  return (\r\n    <LanguageBlendContext.Provider value={blend}>\r\n      <div id=\"header-container\">\r\n        <Card id=\"inputs-card\">\r\n          <Select\r\n            suffixIcon={\r\n              <DownOutlined\r\n                style={{ color: \"black\", fontWeight: \"bold\", fontSize: \"14px\" }}\r\n              />\r\n            }\r\n            onChange={handleFirstLanguageChange}\r\n            placeholder=\"select a language\"\r\n            style={{ width: \"160px\" }}\r\n            defaultValue={\"\"}\r\n          >\r\n            {blend.languages.map((language: Language) => {\r\n              return (\r\n                <Select.Option value={language.name} key={language._id}>\r\n                  {language.name}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n          <SwapOutlined\r\n            style={{ marginLeft: \"10px\", marginRight: \"10px\", color: \"white\" }}\r\n          />\r\n\r\n          <Select\r\n            suffixIcon={\r\n              <DownOutlined\r\n                style={{ color: \"black\", fontWeight: \"bold\", fontSize: \"14px\" }}\r\n              />\r\n            }\r\n            placeholder=\"select another language\"\r\n            onChange={handleSecondLanguageChange}\r\n            defaultValue={\"\"}\r\n            style={{ width: \"160px\" }}\r\n          >\r\n            {blend.languages\r\n              .sort((a: Language, b: Language) => {\r\n                if (a.name > b.name) return 1;\r\n                return -1;\r\n              })\r\n              .map((language: Language) => {\r\n                return (\r\n                  <Select.Option value={language.name} key={language._id}>\r\n                    {language.name}\r\n                  </Select.Option>\r\n                );\r\n              })}\r\n          </Select>\r\n        </Card>\r\n\r\n        {blend.blendedList.length > 0 && (\r\n          <Card id=\"controls-card\">\r\n            <div id=\"controls-content\">\r\n              <div style={{ margin: \"5px\" }}>\r\n                {language.minWordLength}{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={99}\r\n                  value={blend.minLength}\r\n                  onChange={(nr: number) => {\r\n                    blend.setMinLength(nr);\r\n                  }}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <div style={{ margin: \"5px\" }}>\r\n                {language.maxWordLength}{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={99}\r\n                  value={blend.maxLength}\r\n                  onChange={(nr: number) => {\r\n                    blend.setMaxLength(nr);\r\n                  }}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <div style={{ margin: \"5px\" }}>\r\n                {language.samePrefixLength}{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={3}\r\n                  max={99}\r\n                  value={blend.prefixLetters}\r\n                  onChange={(nr: number) => {\r\n                    blend.setPrefixLetters(nr);\r\n                  }}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n\r\n              <Divider type=\"vertical\" />\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              <Button style={{ marginTop: \"12px\" }} onClick={resetFilters}>\r\n                {language.resetAllFilters}\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        )}\r\n      </div>\r\n      <WordsTable />\r\n    </LanguageBlendContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LanguageBlendPage;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Divider, Spin } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Resources = () => {\r\n  const {\r\n    english,\r\n    finnish,\r\n    french,\r\n    german,\r\n    hungarian,\r\n    italian,\r\n    polish,\r\n    romanian,\r\n    spanish,\r\n    turkish,\r\n    viewList,\r\n  } = useContext(LanguageContext);\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const getLanguage = async (language: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([response.data.data[0].list.join(\"\\n\")], {\r\n          type: \"text/plain\",\r\n        });\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"list.txt\";\r\n        document.body.appendChild(element);\r\n        element.click();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexDirection: \"column\", maxWidth: \"300px\" }}\r\n    >\r\n      {!loading ? (\r\n        <>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(en) {english}</div>\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"english\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(fi) {finnish}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"finnish\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(fr) {french}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"french\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(de) {german}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"german\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(hu) {hungarian}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"hungarian\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(it) {italian}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"italian\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(pl) {polish}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"polish\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(ro) {romanian}</div>\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"romanian\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(es) {spanish}</div>\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"spanish\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>(tr) {turkish}</div>\r\n\r\n            <div\r\n              className=\"download-link\"\r\n              onClick={() => getLanguage(\"turkish\")}\r\n            >\r\n              {viewList}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Spin\r\n          indicator={\r\n            <LoadingOutlined\r\n              style={{ fontSize: 48, color: \"white\", marginTop: \"100px\" }}\r\n              spin\r\n            />\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resources;\r\n","import { LanguageContext } from \"../../../App\";\r\nimport { useContext } from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst ChangeLog = () => {\r\n  const { update1, update2, update3, update4, update5, update6 } =\r\n    useContext(LanguageContext);\r\n\r\n  return (\r\n    <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n      <div id=\"changelog-container\">\r\n        <div id=\"changelog-sub-container\">\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V1.0.0 / -\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          ></Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.5.0 / 17.5.2022\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {update6.split(\".\").join(\"\\n\")}\r\n          </Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.0.5 / 26.4.2022\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {update5.split(\".\").join(\"\\n\")}\r\n          </Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.0.4 / 16.4.2022\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <div>{update4.split(\".\").join(\"\\n\")}</div>\r\n          </Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.3 / 29.12.2021\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {update3.split(\".\").join(\"\\n\")}\r\n          </Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.2 / 10.12.2021\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {update2.split(\".\").join(\"\\n\")}\r\n          </Card>\r\n          <Card\r\n            headStyle={{ color: \"white\" }}\r\n            title=\"V0.1 / 1.12.2021\"\r\n            style={{\r\n              margin: \"12px\",\r\n              backgroundColor: \"#393E46\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {update1.split(\".\").join(\"\\n\")}\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeLog;\r\n","const NotFound = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        color: \"#fff\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexGrow: 1,\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <span style={{ fontSize: \"6rem\", marginTop: \"100px\" }}>404</span>\r\n        <p style={{ marginTop: \"-15px\", marginBottom: \"30px\" }}>\r\n          Nothing to see here\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useLanguageBlend = () => {\r\n  const [selectedLanguage1, setSelectedLanguage1] = useState<any>([]);\r\n  const [selectedLanguage2, setSelectedLanguage2] = useState<any>([]);\r\n  const [languageCode1, setLanguageCode1] = useState<string>(\"\");\r\n  const [languageCode2, setLanguageCode2] = useState<string>(\"\");\r\n  const [languages, setLanguages] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [blendedList, setBlendedList] = useState<any>([]);\r\n  const [alert, setAlert] = useState<string>(\"\");\r\n\r\n  //word restrictions\r\n  const [prefixLetters, setPrefixLetters] = useState<number>(3);\r\n\r\n  //controls\r\n  const [minLength, setMinLength] = useState<number>(3);\r\n  const [maxLength, setMaxLength] = useState<number>(10);\r\n\r\n  const getLanguages = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguages`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setLanguages(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const getFirstLanguage = async (language: string) => {\r\n    setLoading(true);\r\n\r\n    //update language code for language1\r\n    switch (language) {\r\n      case \"english\":\r\n        setLanguageCode1(\"en\");\r\n        break;\r\n      case \"finnish\":\r\n        setLanguageCode1(\"fi\");\r\n        break;\r\n      case \"french\":\r\n        setLanguageCode1(\"fr\");\r\n        break;\r\n      case \"german\":\r\n        setLanguageCode1(\"de\");\r\n        break;\r\n      case \"hungarian\":\r\n        setLanguageCode1(\"hu\");\r\n        break;\r\n      case \"italian\":\r\n        setLanguageCode1(\"it\");\r\n        break;\r\n      case \"polish\":\r\n        setLanguageCode1(\"pl\");\r\n        break;\r\n      case \"romanian\":\r\n        setLanguageCode1(\"ro\");\r\n        break;\r\n      case \"spanish\":\r\n        setLanguageCode1(\"es\");\r\n        break;\r\n      case \"turkish\":\r\n        setLanguageCode1(\"tr\");\r\n        break;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSelectedLanguage1(\r\n          response.data.data[0].list.map((el: string) => el + \"1\")\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getSecondLanguage = async (language: string) => {\r\n    setLoading(true);\r\n\r\n    //update language code for language2\r\n    switch (language) {\r\n      case \"english\":\r\n        setLanguageCode2(\"en\");\r\n        break;\r\n      case \"finnish\":\r\n        setLanguageCode2(\"fi\");\r\n        break;\r\n      case \"french\":\r\n        setLanguageCode2(\"fr\");\r\n        break;\r\n      case \"german\":\r\n        setLanguageCode2(\"de\");\r\n        break;\r\n      case \"hungarian\":\r\n        setLanguageCode2(\"hu\");\r\n        break;\r\n      case \"italian\":\r\n        setLanguageCode2(\"it\");\r\n        break;\r\n      case \"polish\":\r\n        setLanguageCode2(\"pl\");\r\n        break;\r\n      case \"romanian\":\r\n        setLanguageCode2(\"ro\");\r\n        break;\r\n      case \"spanish\":\r\n        setLanguageCode2(\"es\");\r\n        break;\r\n      case \"turkish\":\r\n        setLanguageCode2(\"tr\");\r\n        break;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSelectedLanguage2(\r\n          response.data.data[0].list.map((el: string) => el + \"2\")\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLanguages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //for prefix stuff\r\n    if (prefixLetters !== 0) {\r\n      if (selectedLanguage1.length > 0 && selectedLanguage2.length > 0) {\r\n        var words = [...selectedLanguage1, ...selectedLanguage2].reduce(\r\n          (o, v) => {\r\n            let key = v.substring(0, prefixLetters);\r\n            o[key] = o[key] === undefined ? \"\" : o[key] + \"|\" + v;\r\n            return o;\r\n          },\r\n          {}\r\n        );\r\n\r\n        var filteredArray = Object.keys(words)\r\n          .map(String)\r\n          .map((key: string) => {\r\n            if (words[key].split(\"|\").length >= 3) return words[key].split(\"|\");\r\n          })\r\n          .filter((el: any) => {\r\n            if (el !== undefined) return true;\r\n            return false;\r\n          });\r\n        console.log(filteredArray);\r\n\r\n        setBlendedList(filteredArray);\r\n      }\r\n    } else {\r\n      if (selectedLanguage1.length > 0 && selectedLanguage2.length > 0) {\r\n        var count = [...selectedLanguage1, ...selectedLanguage2].reduce(\r\n          (o, v) => {\r\n            o[v] = o[v] + 1 || 1;\r\n            return o;\r\n          },\r\n          {}\r\n        );\r\n\r\n        var duplicate = Object.keys(count)\r\n          .filter((k) => count[k] > 1)\r\n          .map(String);\r\n\r\n        setBlendedList(duplicate);\r\n      }\r\n    }\r\n\r\n    //set language codes\r\n  }, [selectedLanguage1, selectedLanguage2, prefixLetters]);\r\n\r\n  return {\r\n    selectedLanguage1,\r\n    setSelectedLanguage1,\r\n\r\n    selectedLanguage2,\r\n    setSelectedLanguage2,\r\n\r\n    loading,\r\n    setLoading,\r\n\r\n    blendedList,\r\n    setBlendedList,\r\n\r\n    languages,\r\n    setLanguages,\r\n\r\n    alert,\r\n    setAlert,\r\n\r\n    getFirstLanguage,\r\n    getSecondLanguage,\r\n\r\n    languageCode1,\r\n    setLanguageCode1,\r\n    languageCode2,\r\n    setLanguageCode2,\r\n\r\n    minLength,\r\n    setMinLength,\r\n\r\n    maxLength,\r\n    setMaxLength,\r\n\r\n    prefixLetters,\r\n    setPrefixLetters,\r\n  };\r\n};\r\n\r\nexport default useLanguageBlend;\r\n","import { SwapOutlined } from \"@ant-design/icons\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { useContext } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport {\r\n  ArrowRightOutlined,\r\n  GithubOutlined,\r\n  MailOutlined,\r\n  DatabaseOutlined,\r\n  ToolOutlined,\r\n  AntDesignOutlined,\r\n  CloudServerOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport const About = () => {\r\n  const {\r\n    findTheCommonWordsOfLanguages,\r\n    appBuiltUsingMERN,\r\n    developerAndCommunity,\r\n    getInvolved,\r\n    contribuitors,\r\n  } = useContext(LanguageContext);\r\n\r\n  return (\r\n    <div id=\"about-page-container\">\r\n      <Card id=\"project-description-container\">\r\n        <h1 style={{ color: \"white\" }}>{findTheCommonWordsOfLanguages}</h1>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            color: \"#EEEEEE\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              color: \"#EEEEEE\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              border: \"1px solid light#EEEEEE\",\r\n              padding: \"8px\",\r\n              borderRadius: \"4px\",\r\n            }}\r\n          >\r\n            <span style={{ color: \"#00ADB5\" }}>ABC</span> PVBF AUX{\" \"}\r\n            <span style={{ color: \"#00ADB5\" }}>DEF</span> IQYE\r\n          </div>\r\n\r\n          <SwapOutlined\r\n            style={{ fontSize: \"2rem\", margin: \"0px 10px 0px 10px\" }}\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              color: \"#EEEEEE\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              border: \"1px solid light#EEEEEE\",\r\n              padding: \"8px\",\r\n              borderRadius: \"4px\",\r\n            }}\r\n          >\r\n            OQUE <span style={{ color: \"#00ADB5\" }}>ABC</span> KIYW JSU{\" \"}\r\n            <span style={{ color: \"#00ADB5\" }}>DEF</span>\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <ArrowRightOutlined\r\n              style={{ fontSize: \"2rem\", color: \"#EEEEEE\", marginLeft: \"10px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                color: \"#00ADB5\",\r\n                marginLeft: \"7px\",\r\n                border: \"1px solid light#EEEEEE\",\r\n                padding: \"8px\",\r\n                borderRadius: \"4px\",\r\n              }}\r\n            >\r\n              <span>ABC</span>\r\n              <span>DEF</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n      {/*App made using mern stack*/}\r\n\r\n      <Card id=\"mern-container\">\r\n        <h1 style={{ color: \"white\" }}>{appBuiltUsingMERN}</h1>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://www.mongodb.com/\" style={{ color: \"#00ADB5\" }}>\r\n              mongoDB\r\n            </a>\r\n            <DatabaseOutlined\r\n              style={{ fontSize: \"3rem\", color: \"#EEEEEE\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://nodejs.dev/\" style={{ color: \"#00ADB5\" }}>\r\n              Node\r\n            </a>\r\n            <CloudServerOutlined\r\n              style={{ fontSize: \"3rem\", color: \"#EEEEEE\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://expressjs.com/\" style={{ color: \"#00ADB5\" }}>\r\n              Express\r\n            </a>\r\n            <ToolOutlined\r\n              style={{ fontSize: \"3rem\", color: \"#EEEEEE\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://reactjs.org/\" style={{ color: \"#00ADB5\" }}>\r\n              React\r\n            </a>\r\n            <AntDesignOutlined\r\n              style={{ fontSize: \"3rem\", color: \"#EEEEEE\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      <Card id=\"developer-and-community-container\">\r\n        <h1 style={{ color: \"white\" }}>{developerAndCommunity}</h1>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <MailOutlined\r\n            style={{\r\n              fontSize: \"1.5rem\",\r\n              color: \"#EEEEEE\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          />\r\n          <div style={{ color: \"#00ADB5\" }}>chita.catalin.adrian@gmail.com</div>\r\n        </div>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <GithubOutlined\r\n            style={{\r\n              fontSize: \"1.5rem\",\r\n              color: \"#EEEEEE\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          />\r\n          <div style={{ color: \"#00ADB5\" }}>\r\n            github.com/chita-catalin/common-words{\" \"}\r\n          </div>\r\n        </div>\r\n\r\n        <h1 style={{ color: \"white\", marginTop: \"10px\" }}>{contribuitors}</h1>\r\n        <a href=\"https://github.com/chita-catalin\" style={{ color: \"#00ADB5\" }}>\r\n          chita-catalin\r\n        </a>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { Button, Checkbox, Progress, Select, notification } from \"antd\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { useContext, useState } from \"react\";\r\n\r\nimport \"./style.css\";\r\nimport { MinusSquareOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nconst Tools = () => {\r\n  const language = useContext(LanguageContext);\r\n\r\n  const [selectValue, setSelectValue] = useState<string>(\"English\");\r\n  const [text, setText] = useState<string>(\"\");\r\n  const [scrapedText, setScrapedText] = useState<string[]>([]);\r\n  const [allowAll, setAllowAll] = useState<boolean>(false);\r\n\r\n  const [customCharacters, setCustomCharacters] = useState<boolean>(false);\r\n  const [customCharactersString, setCustomCharactersString] =\r\n    useState<string>(\"\");\r\n\r\n  const [controlsCollapsed, setControlsCollapsed] = useState<boolean>(false);\r\n  const [statisticsCollapsed, setStatisticsCollapsed] =\r\n    useState<boolean>(false);\r\n\r\n  const [allowedChars, setAllowedChars] = useState(\r\n    \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n  );\r\n\r\n  const [allWordsCount, setAllWordsCount] = useState<number>(0);\r\n  const [uniqueWordsCount, setUniqueWordsCount] = useState<number>(0);\r\n  const [extractionTime, setExtractionTime] = useState<number>(0);\r\n\r\n  const scrape = () => {\r\n    let t0 = performance.now();\r\n\r\n    let arr: string[] = [];\r\n\r\n    if (allowAll) {\r\n      arr = text.replace(/\\r/g, \" \").split(\" \");\r\n    } else if (customCharacters) {\r\n      //arr is text with all characters other than cusom, turned to spaces\r\n      for (let i = 0; i < text.length; i++) {\r\n        if (customCharactersString.includes(text[i])) arr[i] = text[i];\r\n        else arr[i] = \" \";\r\n      }\r\n      let aux: string = arr.join(\"\");\r\n      arr = aux.replace(/\\r/g, \" \").split(\" \");\r\n    } else {\r\n      //custom language for sure\r\n      for (let i = 0; i < text.length; i++) {\r\n        if (allowedChars.includes(text[i])) arr[i] = text[i];\r\n        else arr[i] = \" \";\r\n      }\r\n      let aux: string = arr.join(\"\");\r\n      arr = aux.replace(/\\r/g, \" \").split(\" \");\r\n    }\r\n\r\n    arr = arr.map((word: string) => word.toLowerCase());\r\n    setAllWordsCount(arr.length);\r\n\r\n    arr = Object.keys(\r\n      arr.reduce((reducer: any, word: any) => {\r\n        reducer[word] = true;\r\n        return reducer;\r\n      }, {})\r\n    );\r\n\r\n    arr.sort();\r\n\r\n    setScrapedText(arr);\r\n    setUniqueWordsCount(arr.length);\r\n\r\n    var t1 = performance.now();\r\n    setExtractionTime(t1 - t0);\r\n  };\r\n\r\n  const copy = () => {\r\n    window.navigator.clipboard.writeText(scrapedText.join(\"\\n\"));\r\n    notification.open({\r\n      message: language.copied,\r\n      placement: \"bottomRight\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"tools-container\" style={{ position: \"relative\" }}>\r\n      {scrapedText.length > 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            overflowY: \"scroll\",\r\n          }}\r\n        >\r\n          {scrapedText.map((word: string) => {\r\n            return <span style={{ margin: \"2px\" }}>{word}</span>;\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <textarea\r\n          value={text}\r\n          placeholder={language.enterYourTextHere}\r\n          rows={1000}\r\n          id=\"text-area\"\r\n          onChange={(e: any) => setText(e.target.value)}\r\n        ></textarea>\r\n      )}\r\n\r\n      <Button\r\n        id=\"main-action-button\"\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          if (scrapedText.length > 0) copy();\r\n          else {\r\n            scrape();\r\n          }\r\n        }}\r\n      >\r\n        {scrapedText.length > 0 ? language.copyAll : language.extract}\r\n      </Button>\r\n\r\n      <Button\r\n        id=\"clear-button\"\r\n        onClick={() => {\r\n          setText(\"\");\r\n          setScrapedText([]);\r\n        }}\r\n      >\r\n        {language.clear}\r\n      </Button>\r\n\r\n      {/*Allowed characters*/}\r\n\r\n      {controlsCollapsed ? (\r\n        <PlusSquareOutlined\r\n          className=\"fixed-controls-collapse\"\r\n          onClick={() => setControlsCollapsed(false)}\r\n        />\r\n      ) : (\r\n        <MinusSquareOutlined\r\n          className=\"fixed-controls-collapse\"\r\n          onClick={() => setControlsCollapsed(true)}\r\n        />\r\n      )}\r\n      {scrapedText.length > 0 ? (\r\n        <>\r\n          {statisticsCollapsed ? (\r\n            <PlusSquareOutlined\r\n              className=\"fixed-statistics-collapse\"\r\n              onClick={() => setStatisticsCollapsed(false)}\r\n            />\r\n          ) : (\r\n            <MinusSquareOutlined\r\n              className=\"fixed-statistics-collapse\"\r\n              onClick={() => setStatisticsCollapsed(true)}\r\n            />\r\n          )}\r\n        </>\r\n      ) : null}\r\n\r\n      {scrapedText.length > 0 && (\r\n        <div\r\n          id=\"fixed-statistics-container\"\r\n          style={{ display: statisticsCollapsed ? \"none\" : \"\" }}\r\n        >\r\n          <div style={{ margin: \"4px 6px 0px 6px\" }}>\r\n            {language.extractionTime}:\r\n          </div>\r\n          <div style={{ margin: \"0px 6px 2px 6px\", fontWeight: \"bold\" }}>\r\n            <Progress\r\n              strokeColor={{\r\n                \"0%\": \"#00ADB5\",\r\n                \"100%\": \"#00ADB5\",\r\n              }}\r\n              percent={(extractionTime * 100) / 1000}\r\n              size=\"small\"\r\n              width={20}\r\n              format={() => \"\"}\r\n              className=\"white-text\"\r\n            />\r\n            {extractionTime.toFixed(1)} ms\r\n          </div>\r\n\r\n          <div style={{ margin: \"4px 6px 0px 6px\" }}>{language.allWords}:</div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              paddingTop: \"4px\",\r\n            }}\r\n          >\r\n            <Progress\r\n              strokeColor={{\r\n                \"0%\": \"#EEEEEE\",\r\n                \"100%\": \"#EEEEEE\",\r\n              }}\r\n              width={80}\r\n              type=\"circle\"\r\n              percent={100}\r\n              format={() => allWordsCount.toString()}\r\n              className=\"white-text\"\r\n            />\r\n          </div>\r\n\r\n          <div style={{ margin: \"4px 6px 0px 6px\" }}>\r\n            {language.uniqueWords}:\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              paddingTop: \"4px\",\r\n            }}\r\n          >\r\n            <Progress\r\n              strokeColor={{\r\n                \"0%\": \"#00ADB5\",\r\n                \"100%\": \"#00ADB5\",\r\n              }}\r\n              width={80}\r\n              type=\"circle\"\r\n              percent={(uniqueWordsCount * 100) / allWordsCount}\r\n              format={() =>\r\n                uniqueWordsCount.toString() +\r\n                ` (${((uniqueWordsCount * 100) / allWordsCount).toFixed(0)}%)`\r\n              }\r\n              trailColor=\"rgb(100,100,100)\"\r\n              className=\"blue-text\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        id=\"fixed-controls-container\"\r\n        style={{ display: controlsCollapsed ? \"none\" : \"\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            margin: \"6px\",\r\n            borderBottom: \"2px solid lightgrey\",\r\n            paddingBottom: \"6px\",\r\n          }}\r\n        >\r\n          <Checkbox\r\n            checked={allowAll}\r\n            style={{ marginRight: \"4px\" }}\r\n            onClick={() => {\r\n              setAllowAll(!allowAll);\r\n              setCustomCharacters(false);\r\n            }}\r\n          />\r\n          {language.allowAll}\r\n        </div>\r\n        <div\r\n          style={{\r\n            margin: \"0px 6px 6px 6px\",\r\n            borderBottom: \"2px solid lightgrey\",\r\n            paddingBottom: \"6px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Checkbox\r\n              checked={customCharacters}\r\n              style={{ marginRight: \"4px\" }}\r\n              onClick={() => {\r\n                setCustomCharacters(!customCharacters);\r\n                setAllowAll(false);\r\n              }}\r\n            />\r\n            {language.customCharacters}\r\n          </div>\r\n\r\n          {customCharacters && (\r\n            <TextArea\r\n              rows={2}\r\n              style={{ marginTop: \"4px\" }}\r\n              onChange={(e: any) => {\r\n                setCustomCharactersString(e.target.value);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            margin: \"0px 6px 0px 6px\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {language.textLanguage}:\r\n        </div>\r\n\r\n        <Select\r\n          disabled={allowAll || customCharacters}\r\n          value={selectValue}\r\n          style={{\r\n            borderRadius: \"4px\",\r\n            margin: \"6px 6px 10px 6px\",\r\n          }}\r\n          onChange={(e: any) => {\r\n            setSelectValue(e);\r\n            console.log(e);\r\n            switch (e) {\r\n              case \"Romanian\":\r\n                setAllowedChars(\r\n                  \"aăâbcdefghiîjklmnopqrsștțuvwxyzAĂÂBCDEFGHIÎJKLMNOPQRSȘTȚUVWXYZ\"\r\n                );\r\n                break;\r\n\r\n              case \"English\":\r\n                setAllowedChars(\r\n                  \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n                );\r\n                break;\r\n\r\n              case \"German\":\r\n                setAllowedChars(\r\n                  \"abcdefghijklmnopqrstuvwxyzäöüßABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜß\"\r\n                );\r\n                break;\r\n              case \"Dutch\":\r\n                setAllowedChars(\r\n                  \"abcdefghiĳjklmnopqrstuvwxyzABCDEFGHIĲJKLMNOPQRSTUVWXYZ\"\r\n                );\r\n                break;\r\n              case \"Ukrainian\":\r\n                setAllowedChars(\r\n                  \"АаБбВвГгҐґДдЕеЄєЖжЗзИиІіЇїЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЬьЮюЯя\"\r\n                );\r\n                break;\r\n            }\r\n          }}\r\n        >\r\n          <Select.Option value=\"Dutch\">{language.dutch}</Select.Option>\r\n          <Select.Option value=\"English\">{language.english}</Select.Option>\r\n          <Select.Option value=\"German\">{language.german}</Select.Option>\r\n          <Select.Option value=\"Romanian\">{language.romanian}</Select.Option>\r\n          <Select.Option value=\"Ukrainian\">{language.ukrainian}</Select.Option>\r\n        </Select>\r\n\r\n        {!allowAll && !customCharacters && (\r\n          <div id=\"characters-count\">\r\n            {language.characters} ({allowedChars.length}):{\" \"}\r\n          </div>\r\n        )}\r\n\r\n        {!allowAll && !customCharacters && (\r\n          <div id=\"allowed-chars-container\">\r\n            {allowedChars.split(\"\").map((char: string) => {\r\n              return <span id=\"allowed-chars\">{char}</span>;\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tools;\r\n","import LanguageBlendPage from \"./components/pages/LanguageBlendPage/index\";\nimport { Route, Routes, HashRouter, Link } from \"react-router-dom\";\nimport Resources from \"./components/pages/Resources/Resources\";\nimport ChangeLog from \"./components/pages/changelog/ChangeLog\";\nimport NotFound from \"./components/pages/NotFound/NotFound\";\nimport useLanguageBlend from \"./useLanguageBlend\";\nimport { About } from \"./components/pages/about\";\nimport Tools from \"./components/pages/Tools\";\nimport { useLanguage } from \"./useLanguage\";\nimport {\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  ToolOutlined,\n  HistoryOutlined,\n  SwapOutlined,\n  DatabaseOutlined,\n  InfoCircleOutlined,\n  DownOutlined,\n} from \"@ant-design/icons\";\nimport { Layout, Menu, Select } from \"antd\";\nimport React, { useState } from \"react\";\n\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\n//env\nimport \"dotenv/config\";\n\nexport const LanguageContext = React.createContext<any>(null);\nexport const BlendContext = React.createContext<any>(null);\n\nconst { Header, Sider, Content } = Layout;\n\nfunction App() {\n  const blend = useLanguageBlend();\n  const language = useLanguage();\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  return (\n    <LanguageContext.Provider value={language}>\n      <BlendContext.Provider value={blend}>\n        <HashRouter>\n          <Layout>\n            <Sider\n              trigger={null}\n              collapsible\n              collapsed={collapsed}\n              className=\"sider\"\n              collapsedWidth={0}\n            >\n              <Menu\n                style={{\n                  paddingTop: \"60px\",\n                  minHeight: \"100vh\",\n                  height: \"100%\",\n                  backgroundColor: \"#393E46\",\n                }}\n                theme=\"dark\"\n                mode=\"inline\"\n                defaultSelectedKeys={[\"1\"]}\n              >\n                <Menu.Item key=\"1\">\n                  <Link to=\"/language-blend\">\n                    <SwapOutlined /> <span>{language.compareLanguages}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                  <Link to=\"/resources\">\n                    <DatabaseOutlined /> <span>{language.resources}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\">\n                  <Link to=\"/tools\">\n                    <ToolOutlined /> <span>{language.extractUniqueWords}</span>\n                  </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"4\">\n                  <Link to=\"/about\">\n                    <InfoCircleOutlined /> <span>{language.about}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"5\">\n                  <Link to=\"/changelog\">\n                    <HistoryOutlined /> <span>{language.changelog}</span>\n                  </Link>\n                </Menu.Item>\n              </Menu>\n            </Sider>\n            <Layout className=\"site-layout\" style={{ minWidth: 320 }}>\n              <Header\n                className=\"site-layout-background\"\n                style={{\n                  color: \"white\",\n                  backgroundColor: \"#393E46\",\n                  padding: 0,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div className=\"trigger-container\">\n                  {collapsed ? (\n                    <MenuUnfoldOutlined\n                      className=\"trigger\"\n                      onClick={() => setCollapsed(!collapsed)}\n                    />\n                  ) : (\n                    <MenuFoldOutlined\n                      className=\"trigger\"\n                      onClick={() => setCollapsed(!collapsed)}\n                    />\n                  )}\n                </div>\n\n                <div id=\"title\">\n                  <Link\n                    to=\"/\"\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"white\",\n                    }}\n                  >\n                    {language.commonWords}\n                  </Link>\n                  <span\n                    style={{\n                      fontSize: \"15px\",\n                      marginLeft: \"2px\",\n                      color: \"white\",\n                    }}\n                    className=\"version\"\n                  >\n                    V1.0.0\n                  </span>\n                </div>\n\n                <Select\n                  suffixIcon={<DownOutlined style={{ color: \"white\" }} />}\n                  style={{ marginRight: \"24px\", color: \"white\" }}\n                  defaultValue=\"english\"\n                  bordered={false}\n                  value={\n                    language.language === \"romanian\" ? \"Română\" : \"English\"\n                  }\n                  onChange={(lng: string) => language.setLanguage(lng)}\n                >\n                  <Select.Option value=\"english\">\n                    {language.english}\n                  </Select.Option>\n                  <Select.Option value=\"romanian\">\n                    {language.romanian}\n                  </Select.Option>\n                </Select>\n              </Header>\n              <Content\n                style={{\n                  padding: \"12px\",\n                  color: \"white\",\n                  minHeight: 280,\n                  minWidth: 320,\n                  backgroundColor: \"#222831\",\n                }}\n              >\n                <Routes>\n                  <Route\n                    path=\"/language-blend\"\n                    element={<LanguageBlendPage />}\n                  />\n                  <Route path=\"/resources\" element={<Resources />} />\n                  <Route path=\"/changelog\" element={<ChangeLog />} />\n                  <Route path=\"/about\" element={<About />} />\n                  <Route path=\"*\" element={<NotFound />} />\n                  <Route path=\"/tools\" element={<Tools />} />\n                  <Route path=\"/\" element={<LanguageBlendPage />} />\n                </Routes>\n              </Content>\n            </Layout>\n          </Layout>\n        </HashRouter>\n      </BlendContext.Provider>\n    </LanguageContext.Provider>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useLanguage = () => {\r\n  const [language, setLanguage] = useState(\"english\");\r\n\r\n  const [compareLanguages, setCompareLanguages] = useState(\"Compare languages\");\r\n  const [viewList, setViewList] = useState(\"Download list (.txt)\");\r\n\r\n  const [commonWords, setCommonWords] = useState<string>(\"COMMON WORDS\");\r\n  const [resources, setResources] = useState(\"Resources\");\r\n  const [about, setAbout] = useState(\"About\");\r\n  const [changelog, setChangelog] = useState(\"Changelog\");\r\n\r\n  //tools page\r\n  const [copied, setCopied] = useState(\"Copied!\");\r\n  const [extractUniqueWords, setExtractUniqueWords] = useState(\r\n    \"Extract unique words\"\r\n  );\r\n  const [copyAll, setCopyAll] = useState(\"Copy all\");\r\n  const [extract, setExtract] = useState(\"Extract\");\r\n  const [textLanguage, setTextLanguage] = useState(\"Text language\");\r\n  const [customCharacters, setCustomCharacters] = useState(\"Custom characters\");\r\n  const [allowAll, setAllowAll] = useState(\"Allow all\");\r\n  const [enterYourTextHere, setEnterYourTextHere] = useState(\r\n    \"Enter your text here...\"\r\n  );\r\n  const [extractionTime, setExtractionTime] = useState(\"Extraction time\");\r\n  const [allWords, setAllWords] = useState(\"All words\");\r\n  const [characters, setCharacters] = useState(\"Characters\");\r\n  const [tools, setTools] = useState(\"tools\");\r\n  const [clear, setClear] = useState(\"Clear\");\r\n  const [initialWords, setInitialWords] = useState(\"Initial words\");\r\n  const [uniqueWords, setUniqueWords] = useState(\"Unique words\");\r\n  //blend page\r\n  const [resetAllFilters, setResetAllFilters] = useState(\"Reset all filters\");\r\n  const [samePrefixLength, setSamePrefixLength] =\r\n    useState(\"Same prefix length\");\r\n  const [selectTwoLanguages, setSelectTwoLanguages] = useState(\r\n    \"Select two languages!\"\r\n  );\r\n  const [wordsPerPage, setWordsPerPage] = useState(\"Words per page\");\r\n  const [words, setWords] = useState(\"Words\");\r\n  const [minWordLength, setMinWordLength] = useState(\"Min. word length\");\r\n  const [maxWordLength, setMaxWordLength] = useState(\"Max. word length\");\r\n  const [wordMatch, setWordMatch] = useState(\"Word match (different letters)\");\r\n  //about page\r\n  const [findTheCommonWordsOfLanguages, setFindTheCommonWordsOfLanguages] =\r\n    useState(\"FIND THE COMMON WORDS OF LANGUAGES\");\r\n  const [developerAndCommunity, setDeveloperAndCommunity] = useState(\r\n    \"DEVELOPER & COMMUNITY\"\r\n  );\r\n  const [getInvolved, setGetInvolved] = useState(\"GET INVOLVED!\");\r\n  const [contribuitors, setContribuitors] = useState(\"CONTRIBUTORS:\");\r\n  const [appBuiltUsingMERN, setAppBuiltUsingMERN] = useState(\r\n    \"THIS WEB APP WAS BUILT USING THE MERN STACK\"\r\n  );\r\n  //resources\r\n  const [languageWordList, setLanguageWordList] = useState(\r\n    \"Language word lists (all words)\"\r\n  );\r\n  //languages\r\n  const [english, setEnglish] = useState(\"English\");\r\n  const [mandarinChinese, setMandarinChinese] = useState(\"Mandarin Chinese\");\r\n  const [hindi, setHindi] = useState(\"Hindi\");\r\n  const [spanish, setSpanish] = useState(\"Spanish\");\r\n  const [french, setFrench] = useState(\"French\");\r\n  const [standardArabic, setStandardArabic] = useState(\"Standard Arabic\");\r\n  const [bengali, setBengali] = useState(\"Bengali\");\r\n  const [dutch, setDutch] = useState(\"Dutch\");\r\n  const [ukrainian, setUkrainian] = useState(\"Ukrainian\");\r\n\r\n  const [finnish, setFinnish] = useState(\"Finnish\");\r\n  const [german, setGerman] = useState(\"German\");\r\n  const [hungarian, setHungarian] = useState(\"Hungarian\");\r\n  const [italian, setItalian] = useState(\"Italian\");\r\n  const [polish, setPolish] = useState(\"Polish\");\r\n  const [romanian, setRomanian] = useState(\"Romanian\");\r\n  const [turkish, setTurkish] = useState(\"Turkish\");\r\n\r\n  //                 const[Russian – 258M\r\n  //           const[Portuguese – 252.2M\r\n  //             const[Indonesian – 199M\r\n  //               const[Urdu – 170.6M\r\n  //                 const[Standard German – 131.6M\r\n  //                   const[Japanese – 126.4M\r\n  //                     const[Swahili – 98.5M\r\n  //                       const[Marathi – 95.3M\r\n  //                         const[Telugu – 93M\r\n  //                           const[Turkish – 85.2M\r\n  //                             const[Yue Chinese – 84.9M\r\n  //                               const[Tamil – 83.8M\r\n  //                                 const[Western Punjabi – 82.8M\r\n  //                                   const[Wu Chinese – 81.8M\r\n  //                                     const[Korean – 79.4M\r\n  //                                       const[Vietnamese -77M\r\n  //                                         const[Hausa – 72.7M\r\n  //                                           const[Javanese – 68.3M\r\n  //                                             const[Egyptian Arabic – 67.8M\r\n  //                                               const[Italian – 67.7M\r\n  //                                                 const[Thai – 60.7M\r\n  //                                                   const[Gujarati – 60.7M\r\n  //                                                     const[Kannada – 56.5M\r\n  //                                                       const[Persian – 55M\r\n  //                                                         const[Bhojpuri – 52.4M\r\n  //                                                           const[Polish – 50M\r\n  //                                                             const[Southern Min – 48.5M\r\n  //                                                               const[Hakka – 47.8M\r\n  //                                                                 const[Filipino – 45M\r\n  //                                                                   const[Pashto – 40M\r\n  //                                                                     const[Ukranian – 40M\r\n  //                                                                       const[Yoruba – 40M\r\n  //                                                                         const[Malayalam – 37.7M\r\n  //                                                                           const[Xiang Chinese – 36M\r\n  //                                                                             const[Odia – 35M\r\n  //                                                                               const[Maithili – 35M\r\n  //                                                                                 const[Sudanese Arabic– 33M\r\n  //                                                                                   const[Burmese – 32M\r\n  //                                                                                     const[Oromo – 30M\r\n  //                                                                                       const[Uzbek – 27M\r\n  //                                                                                         const[Romanian – 26M\r\n  //                                                                                           const[Sindhi – 25M\r\n  //                                                                                             const[Tagalog – 23.8M\r\n  // //ChangeLog\r\n  const [update1, setUpdate1] = useState(\"Project created\");\r\n  const [update2, setUpdate2] = useState(\"Added basic language blending\");\r\n  const [update3, setUpdate3] = useState(\r\n    `Added Italian,French,Finnish languages.Enhanced results page..added ${\"changelog\"} section..added country flags..added dark/light theme switch`\r\n  );\r\n  const [update4, setUpdate4] = useState(\r\n    `Removed language lists from frontend side.Added about section.Removed light/dark theme switch.Enhanced landing page UI.Updated versioning system to match web standards`\r\n  );\r\n  const [update5, setUpdate5] = useState(\r\n    `Connected to Backend App.Now retreiving languages list from database.Added not-yet-functional table to \"blend-page\".added Romanian word list to \"Resources\" page`\r\n  );\r\n  const [update6, setUpdate6] = useState(\r\n    \"Added language switch RO/EN.Added more languages.Added language comparing functionality.Added tools section, with unique word extraction tool.Added languages list from database to resources page.Improved general UI\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (language) {\r\n      case \"english\":\r\n        setCommonWords(\"COMMON WORDS\");\r\n        setCompareLanguages(\"Compare languages\");\r\n        setViewList(\"Download list (.txt)\");\r\n        setResources(\"Resources\");\r\n        setAbout(\"About\");\r\n        setChangelog(\"Changelog\");\r\n        //tools\r\n        setCopied(\"Copied!\");\r\n        setCopyAll(\"Copy all\");\r\n        setExtractUniqueWords(\"Extract unique words\");\r\n        setExtract(\"Extract\");\r\n        setTextLanguage(\"Text language\");\r\n        setCustomCharacters(\"Custom characters\");\r\n        setAllowAll(\"Allow all\");\r\n        setEnterYourTextHere(\"Enter your text here...\");\r\n        setExtractionTime(\"Extraction time\");\r\n        setAllWords(\"All words\");\r\n        setCharacters(\"Characters\");\r\n        setTools(\"Tools\");\r\n        setClear(\"Clear\");\r\n        setInitialWords(\"Initial words\");\r\n        setUniqueWords(\"Unique words\");\r\n        //blend page\r\n        setResetAllFilters(\"Reset all filters\");\r\n        setSamePrefixLength(\"Same prefix length\");\r\n        setSelectTwoLanguages(\"Select two languages!\");\r\n        setWordsPerPage(\"Words per page\");\r\n        setWords(\"Words\");\r\n        setMinWordLength(\"Min. word length\");\r\n        setMaxWordLength(\"Max. word length\");\r\n        setWordMatch(\"Word Match (different letters)\");\r\n        //about page\r\n        setFindTheCommonWordsOfLanguages(\"FIND THE COMMON WORDS OF LANGUAGES\");\r\n        setDeveloperAndCommunity(\"DEVELOPER & COMMUNITY\");\r\n        setGetInvolved(\"GET INVOLVED!\");\r\n        setContribuitors(\"CONTRIBUITORS:\");\r\n        setAppBuiltUsingMERN(\"THIS WEB APP WAS BUILT USING THE MERN STACK\");\r\n        //resources\r\n        setLanguageWordList(\"Language word lists (all words)\");\r\n        //languages\r\n        setUkrainian(\"Ukrainian\");\r\n        setDutch(\"Dutch\");\r\n        setEnglish(\"English\");\r\n        setFinnish(\"Finnish\");\r\n        setFrench(\"French\");\r\n        setGerman(\"German\");\r\n        setHungarian(\"Hungarian\");\r\n        setItalian(\"Italian\");\r\n        setPolish(\"Polish\");\r\n        setRomanian(\"Romanian\");\r\n        setSpanish(\"Spanish\");\r\n        setTurkish(\"Turkish\");\r\n        //ChangeLog\r\n        setUpdate1(\"Project created\");\r\n        setUpdate2(\"Added basic language blending\");\r\n        setUpdate3(\r\n          `Added Italian,French,Finnish languages.Enhanced results page..added ${\"changelog\"} section..added country flags..added dark/light theme switch`\r\n        );\r\n        setUpdate4(\r\n          `Removed language lists from frontend side.Added about section.Removed light/dark theme switch.Enhanced landing page UI.Updated versioning system to match web standards`\r\n        );\r\n        setUpdate5(\r\n          `Connected to Backend App.Now retreiving languages list from database.Added not-yet-functional table to \"blend-page\".added Romanian word list to \"Resources\" page`\r\n        );\r\n        setUpdate6(\r\n          \"Added language switch RO/EN.Added more languages.Added language comparing functionality.Added tools section, with unique word extraction tool.Added languages list from database to resources page.Improved general UI\"\r\n        );\r\n\r\n        break;\r\n\r\n      case \"romanian\":\r\n        setCommonWords(\"CUVINTE COMUNE\");\r\n        setCompareLanguages(\"Compară\");\r\n        setViewList(\"Descarcă lista (.txt)\");\r\n        setResources(\"Resurse\");\r\n        setAbout(\"Despre\");\r\n        setChangelog(\"Istoric schimbari\");\r\n        //tools\r\n        setCopied(\"Copiat!\");\r\n        setCopyAll(\"Copiază tot\");\r\n        setExtractUniqueWords(\"Extrage cuvinte unice\");\r\n        setExtract(\"Extrage\");\r\n        setTextLanguage(\"Limba textului\");\r\n        setCustomCharacters(\"Permite doar caracterele următoare\");\r\n        setAllowAll(\"Permite tot\");\r\n        setEnterYourTextHere(\"Introdu textul aici...\");\r\n        setExtractionTime(\"Durată extragere\");\r\n        setAllWords(\"Cuvinte totale\");\r\n        setCharacters(\"Caractere\");\r\n        setTools(\"Unelte\");\r\n        setClear(\"Șterge\");\r\n        setInitialWords(\"Cuvinte inițiale\");\r\n        setUniqueWords(\"Cuvinte unice\");\r\n        //blend page\r\n        setResetAllFilters(\"Resetează toate filtrele\");\r\n        setSamePrefixLength(\"Același prefix\");\r\n        setSelectTwoLanguages(\"Selectează două limbi diferite!\");\r\n        setWordsPerPage(\"Cuvinte pe pagină\");\r\n        setWords(\"Cuvinte\");\r\n        setMinWordLength(\"Lungime minimă\");\r\n        setMaxWordLength(\"Lungime maximă\");\r\n        setWordMatch(\"Potrivire cuvinte (litere diferite)\");\r\n        //about page\r\n        setFindTheCommonWordsOfLanguages(\r\n          \"GĂSEȘTE CUVINTELE COMUNE ALE LIMBILOR\"\r\n        );\r\n        setDeveloperAndCommunity(\"DEZVOLTATOR & COMUNITATE\");\r\n        setGetInvolved(\"IMPLICĂ-TE!\");\r\n        setContribuitors(\"CONTRIBUITORI:\");\r\n        setAppBuiltUsingMERN(\r\n          \"ACEASTĂ APLICAȚIE WEB A FOST DEZVOLTATĂ FOLOSIND STACK-UL MERN\"\r\n        );\r\n        //resources\r\n        setLanguageWordList(\r\n          \"Listele de cuvinte ale limbilor (toate cuvintele)\"\r\n        );\r\n        //languages\r\n        setUkrainian(\"Ucraineană\");\r\n        setDutch(\"Neerlandeză\");\r\n        setEnglish(\"Engleză\");\r\n        setFinnish(\"Finlandeză\");\r\n        setFrench(\"Franceză\");\r\n        setGerman(\"Germană\");\r\n        setHungarian(\"Maghiară\");\r\n        setItalian(\"Italiană\");\r\n        setPolish(\"Poloneză\");\r\n        setRomanian(\"Română\");\r\n        setSpanish(\"Spaniolă\");\r\n        setTurkish(\"Turcă\");\r\n        //changelog\r\n        setUpdate1(\"Început proiect\");\r\n        setUpdate2(\"Adăugat algoritm de combinare a limbilor\");\r\n        setUpdate3(\r\n          `Adăugat Italiană, Franceză, Finlandeză.Îmbunătățit pagina de rezultate.Adăugat secțiune de \"istoric schimbări\".Adăugat steaguri pentru țări.Adăugat buton pentru temă light/dark`\r\n        );\r\n        setUpdate4(\r\n          `Înlăturat listele de cuvinte din Frontend.Adăugat secțiunea \"despre\".Înlăturat butonul pentru temă light/dark.Îmbunătățit UI-ul paginii de pornire.Updatat sistemul de versionare cu standardul web`\r\n        );\r\n        setUpdate5(\r\n          `Conectat aplicația web la Backend.Listele de limbi acum sunt preluate dintr-o bază de date.Adăugat tabel de cuvinte, încă nefuncțional.Adăugat lista cuvintelor din limba română la pagina de resurse `\r\n        );\r\n        setUpdate6(\r\n          `Adăugat funcția de schimbare de limbă.Adăugat mai multe limbi.Adăugat funcția de comparare a limbilor.Adăugat secțiunea de unelte.Adăugat unealta de extragere a cuvintelor unice.Adăugat liste de limbi la pagina de resurse.Îmbunătățit UI general`\r\n        );\r\n\r\n        break;\r\n    }\r\n  }, [language]);\r\n\r\n  return {\r\n    language,\r\n    compareLanguages,\r\n    viewList,\r\n    setLanguage,\r\n    commonWords,\r\n    resources,\r\n    about,\r\n    changelog,\r\n    //tools\r\n    copied,\r\n    copyAll,\r\n    allWords,\r\n    extractionTime,\r\n    extract,\r\n    textLanguage,\r\n    customCharacters,\r\n    allowAll,\r\n    enterYourTextHere,\r\n    extractUniqueWords,\r\n    characters,\r\n    clear,\r\n    initialWords,\r\n    uniqueWords,\r\n    tools,\r\n    //blend page\r\n    samePrefixLength,\r\n    selectTwoLanguages,\r\n    wordsPerPage,\r\n    words,\r\n    minWordLength,\r\n    maxWordLength,\r\n    //about page\r\n    resetAllFilters,\r\n    findTheCommonWordsOfLanguages,\r\n    developerAndCommunity,\r\n    getInvolved,\r\n    contribuitors,\r\n    appBuiltUsingMERN,\r\n    wordMatch,\r\n    //resources\r\n    languageWordList,\r\n    //languages\r\n    ukrainian,\r\n    dutch,\r\n    english,\r\n    finnish,\r\n    french,\r\n    german,\r\n    hungarian,\r\n    italian,\r\n    polish,\r\n    romanian,\r\n    spanish,\r\n    turkish,\r\n    //ChangeLog\r\n    update1,\r\n    update2,\r\n    update3,\r\n    update4,\r\n    update5,\r\n    update6,\r\n  };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}