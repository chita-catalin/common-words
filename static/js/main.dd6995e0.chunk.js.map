{"version":3,"sources":["components/pages/LanguageBlendPage/components/wordsTable.tsx","components/pages/LanguageBlendPage/index.tsx","components/pages/Resources/LanguageList.tsx","components/pages/Resources/Resources.tsx","components/pages/changelog/ChangeLog.tsx","components/pages/Tools/TextScraper/components/useTextScraper.tsx","components/pages/Tools/TextScraper/components/TextInput.tsx","components/pages/Tools/TextScraper/index.tsx","components/pages/NotFound/NotFound.tsx","components/pages/LandingPage/index.tsx","useLanguageBlend.ts","components/pages/about/index.tsx","components/pages/Tools/index.tsx","App.tsx","useLanguage.tsx","index.tsx"],"names":["WordsTable","blend","useContext","BlendContext","LanguageContext","wordsPerPage","words","minWordLength","maxWordLength","wordMatch","useState","page","setPage","itemsPerPage","setItemsPerPage","modalVisible","setModalVisible","selectedWordsArray","setSelectedWordsArray","blendedList","map","el","word","length","style","display","alignItems","flexDirection","paddingTop","current","pageSize","defaultCurrent","total","pageSizeOptions","flexGrow","onChange","flexWrap","marginTop","prefixLetters","nested","index1","index2","maxLength","minLength","join","indexOf","className","cursor","backgroundColor","onClick","substr","split","letter","index","fontWeight","textDecoration","title","visible","onCancel","footer","color","marginRight","languageCode1","marginLeft","languageCode2","prefixLetetrs1","loading","justifyContent","LanguageBlendContext","React","createContext","LanguageBlendPage","Provider","value","id","getFirstLanguage","placeholder","width","defaultValue","languages","language","Option","name","_id","SwapOutlined","getSecondLanguage","sort","a","b","margin","size","min","max","nr","setMinLength","type","setMaxLength","setPrefixLetters","LanguageList","useParams","setLoading","wordList","setWordList","getLanguage","axios","get","process","response","status","data","list","console","log","useEffect","whiteSpace","Resources","english","languageWordList","finnish","french","german","hungarian","italian","polish","romanian","spanish","turkish","to","marginBottom","ChangeLog","update1","update2","update3","update4","update5","update6","useTextScraper","text","setText","wordsArray","setWordsArray","UTF8Array","setUTF8Array","goodCharacters","setGoodCharacters","badCharacters","setBadCharacters","textRef","useRef","TextInput","TextScraperContext","optimizedFn","useCallback","func","timer","args","clearTimeout","setTimeout","apply","debounce","boxSizing","rows","e","target","ref","TextScraper","textScraper","alignSelf","arr","replace","toLowerCase","Object","keys","reduce","reducer","readOnly","NotFound","fontSize","LandingPage","startExploring","landingPageText","selectedLanguage1","selectedLanguage2","maxWidth","height","useLanguageBlend","setSelectedLanguage1","setSelectedLanguage2","setLanguageCode1","setLanguageCode2","setLanguages","setBlendedList","alert","setAlert","getLanguages","o","v","key","substring","undefined","filteredArray","String","filter","count","duplicate","k","About","findTheCommonWordsOfLanguages","appBuiltUsingMERN","developerAndCommunity","getInvolved","contribuitors","border","padding","ArrowRightOutlined","href","DatabaseOutlined","CloudServerOutlined","ToolOutlined","AntDesignOutlined","MailOutlined","GithubOutlined","Tools","Header","Layout","Sider","Content","App","setLanguage","commonWords","setCommonWords","resources","setResources","about","setAbout","changelog","setChangelog","setStartExploring","setLandingPageText","tools","setTools","selectTwoLanguages","setSelectTwoLanguages","setWordsPerPage","setWords","setMinWordLength","setMaxWordLength","setWordMatch","setFindTheCommonWordsOfLanguages","setDeveloperAndCommunity","setGetInvolved","setContribuitors","setAppBuiltUsingMERN","setLanguageWordList","setEnglish","setFinnish","setFrench","setGerman","setHungarian","setItalian","setPolish","setRomanian","setSpanish","setTurkish","setUpdate1","setUpdate2","setUpdate3","setUpdate4","setUpdate5","setUpdate6","useLanguage","collapsed","setCollapsed","trigger","collapsible","minHeight","theme","mode","defaultSelectedKeys","Item","HomeOutlined","InfoCircleOutlined","HistoryOutlined","MenuUnfoldOutlined","MenuFoldOutlined","bordered","lng","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd6995e0.chunk.js","sourcesContent":["import { BlendContext, LanguageContext } from \"../../../../App\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport \"../style.css\";\r\nimport { Badge, Modal, Pagination, Spin, Table, Tag, Tooltip } from \"antd\";\r\n\r\nexport const WordsTable = () => {\r\n  const blend = useContext(BlendContext);\r\n\r\n  const { wordsPerPage, words, minWordLength, maxWordLength, wordMatch } =\r\n    useContext(LanguageContext);\r\n\r\n  const [page, setPage] = useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = useState<number>(200);\r\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\r\n  const [selectedWordsArray, setSelectedWordsArray] = useState<string[]>([]);\r\n\r\n  const data: any = blend.blendedList.map((el: string) => {\r\n    return { word: el };\r\n  });\r\n\r\n  const columns: any = [\r\n    {\r\n      title: \"word\",\r\n      dataIndex: \"word\",\r\n      key: \"word\",\r\n      render: (text: string) => <a>{text}</a>,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {blend.blendedList.length > 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            paddingTop: \"12px\",\r\n          }}\r\n        >\r\n          <Pagination\r\n            current={page}\r\n            pageSize={itemsPerPage}\r\n            defaultCurrent={1}\r\n            total={blend.blendedList.length}\r\n            pageSizeOptions={[50, 100, 200, 500, 1000, 2000, 5000, 10000]}\r\n            style={{ flexGrow: 1 }}\r\n            onChange={(page, pageSize: number) => {\r\n              setItemsPerPage(pageSize);\r\n              setPage(page);\r\n            }}\r\n          />\r\n          <div style={{ display: \"flex\", flexWrap: \"wrap\", marginTop: \"6px\" }}>\r\n            {blend.prefixLetters > 0 &&\r\n              typeof blend.blendedList[0] === \"object\" &&\r\n              //map(nested => nested.map(element => element * 2));\r\n\r\n              blend.blendedList.map((nested: any, index1: number) =>\r\n                nested?.map((el: string, index2: number) => {\r\n                  if (\r\n                    index1 * index2 >= itemsPerPage * page &&\r\n                    index1 * index2 <= itemsPerPage * (page + 1) - 1 &&\r\n                    el.length <= blend.maxLength &&\r\n                    el.length >= blend.minLength &&\r\n                    //and both languages are present\r\n                    nested.join().indexOf(\"1\") !== -1 &&\r\n                    nested.join().indexOf(\"2\") !== -1\r\n                  ) {\r\n                    return (\r\n                      <Tag\r\n                        className=\"word-tag\"\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          flexGrow: 1,\r\n                          marginTop: \"6px\",\r\n                          backgroundColor:\r\n                            el.length <= 5\r\n                              ? \"#e6f7ff\"\r\n                              : el.length <= 10\r\n                              ? \"#bae7ff\"\r\n                              : el.length <= 15\r\n                              ? \"#91d5ff\"\r\n                              : \"#69c0ff\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setSelectedWordsArray(nested);\r\n                          setModalVisible(true);\r\n                        }}\r\n                      >\r\n                        {el\r\n                          .substr(0, el.length - 1)\r\n                          .split(\"\")\r\n                          .map((letter: string, index) => (\r\n                            <span\r\n                              style={{\r\n                                fontWeight:\r\n                                  index < blend.prefixLetters &&\r\n                                  blend.prefixLetters !== 0\r\n                                    ? 600\r\n                                    : 100,\r\n                                textDecoration:\r\n                                  index < blend.prefixLetters &&\r\n                                  blend.prefixLetters !== 0\r\n                                    ? \"underline\"\r\n                                    : \"normal\",\r\n                              }}\r\n                            >\r\n                              {letter}\r\n                            </span>\r\n                          ))}\r\n                      </Tag>\r\n                    );\r\n                  }\r\n                })\r\n              )}\r\n\r\n            {/*Modal for Similar words*/}\r\n            <Modal\r\n              title=\"Common words\"\r\n              visible={modalVisible}\r\n              onCancel={() => setModalVisible(false)}\r\n              footer={null}\r\n            >\r\n              <h3>\r\n                <Badge color=\"#096dd9\" style={{ marginRight: \"0px\" }} /> (\r\n                {blend.languageCode1}) |\r\n                <Badge color=\"#cf1322\" style={{ marginLeft: \"10px\" }} />(\r\n                {blend.languageCode2})\r\n              </h3>\r\n              {selectedWordsArray.map((el: string) => {\r\n                return (\r\n                  <>\r\n                    <span\r\n                      style={{\r\n                        color: el.indexOf(\"1\") !== -1 ? \"#096dd9\" : \"#cf1322\",\r\n                      }}\r\n                    >\r\n                      {el\r\n                        .substr(0, el.length - 1)\r\n                        .split(\"\")\r\n                        .map((letter: string, index) => (\r\n                          <span\r\n                            style={{\r\n                              fontWeight:\r\n                                index < blend.prefixLetters &&\r\n                                blend.prefixLetters !== 0\r\n                                  ? 600\r\n                                  : 100,\r\n                              textDecoration:\r\n                                index < blend.prefixLetters &&\r\n                                blend.prefixLetters !== 0\r\n                                  ? \"underline\"\r\n                                  : \"normal\",\r\n                            }}\r\n                          >\r\n                            {letter}\r\n                          </span>\r\n                        ))}\r\n                    </span>{\" \"}\r\n                    |{\" \"}\r\n                  </>\r\n                );\r\n              })}\r\n            </Modal>\r\n\r\n            {blend.prefixLetters === 0 &&\r\n              blend.blendedList.map((word: string, index: number) => {\r\n                if (\r\n                  index >= itemsPerPage * page &&\r\n                  index <= itemsPerPage * (page + 1) - 1 &&\r\n                  word.length <= blend.maxLength &&\r\n                  word.length >= blend.minLength\r\n                ) {\r\n                  return (\r\n                    <Tag\r\n                      style={{\r\n                        flexGrow: 1,\r\n                        marginTop: \"6px\",\r\n                        backgroundColor:\r\n                          word.length <= 5\r\n                            ? \"#e6f7ff\"\r\n                            : word.length <= 10\r\n                            ? \"#bae7ff\"\r\n                            : word.length <= 15\r\n                            ? \"#91d5ff\"\r\n                            : \"#69c0ff\",\r\n                      }}\r\n                    >\r\n                      {word.split(\"\").map((letter: string, index) => (\r\n                        <span\r\n                          style={{\r\n                            color:\r\n                              index < blend.prefixLetters &&\r\n                              blend.prefixLetetrs1 !== 0\r\n                                ? \"#002766\"\r\n                                : \"black\",\r\n                            fontWeight:\r\n                              index < blend.prefixLetters &&\r\n                              blend.prefixLetters !== 0\r\n                                ? 500\r\n                                : 100,\r\n                          }}\r\n                        >\r\n                          {letter}\r\n                        </span>\r\n                      ))}\r\n                    </Tag>\r\n                  );\r\n                }\r\n              })}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {blend.loading && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"48px\",\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Card,\r\n  Divider,\r\n  InputNumber,\r\n  Select,\r\n  Statistic,\r\n  Switch,\r\n} from \"antd\";\r\nimport { WordsTable } from \"./components/wordsTable\";\r\nimport { SwapOutlined } from \"@ant-design/icons\";\r\nimport { BlendContext } from \"../../../App\";\r\nimport { Language } from \"../../../types\";\r\nimport React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport const LanguageBlendContext = React.createContext<any>(null);\r\n\r\nconst LanguageBlendPage = () => {\r\n  const blend = React.useContext(BlendContext);\r\n\r\n  const resetFilters = () => {\r\n    blend.setMinLength(1);\r\n    blend.setMaxLength(99);\r\n  };\r\n\r\n  const handleFirstLanguageChange = (value: string) => {\r\n    blend.getFirstLanguage(value);\r\n  };\r\n\r\n  const handleSecondLanguageChange = (value: string) => {\r\n    blend.getSecondLanguage(value);\r\n  };\r\n\r\n  return (\r\n    <LanguageBlendContext.Provider value={blend}>\r\n      <div id=\"header-container\">\r\n        <Card id=\"inputs-card\">\r\n          <Select\r\n            onChange={handleFirstLanguageChange}\r\n            placeholder=\"select a language\"\r\n            style={{ width: \"160px\" }}\r\n            defaultValue={\"\"}\r\n          >\r\n            {blend.languages.map((language: Language) => {\r\n              return (\r\n                <Select.Option value={language.name} key={language._id}>\r\n                  {language.name}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n          <SwapOutlined style={{ marginLeft: \"10px\", marginRight: \"10px\" }} />\r\n\r\n          <Select\r\n            placeholder=\"select another language\"\r\n            onChange={handleSecondLanguageChange}\r\n            defaultValue={\"\"}\r\n            style={{ width: \"160px\" }}\r\n          >\r\n            {blend.languages\r\n              .sort((a: Language, b: Language) => {\r\n                if (a.name > b.name) return 1;\r\n                return -1;\r\n              })\r\n              .map((language: Language) => {\r\n                return (\r\n                  <Select.Option value={language.name} key={language._id}>\r\n                    {language.name}\r\n                  </Select.Option>\r\n                );\r\n              })}\r\n          </Select>\r\n        </Card>\r\n\r\n        <Card id=\"statistics-card\">\r\n          <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n            <Statistic\r\n              title=\"Common words\"\r\n              value={0}\r\n              style={{ marginRight: \"24px\" }}\r\n            />\r\n            {/* <Statistic\r\n              title=\"Language match\"\r\n              suffix=\"%\"\r\n              value={\r\n                blend.filteredList.length > 0\r\n                  ? (\r\n                      ((blend.filteredList.length * 100) /\r\n                        (blend.selectedLanguage1.length +\r\n                          blend.selectedLanguage2.length)) *\r\n                      2\r\n                    ).toFixed(2)\r\n                  : 0\r\n              }\r\n              style={{ marginRight: \"24px\" }}\r\n            /> */}\r\n          </div>\r\n        </Card>\r\n\r\n        {blend.blendedList.length > 0 && (\r\n          <Card id=\"controls-card\">\r\n            <div id=\"controls-content\">\r\n              <div style={{ margin: \"5px\" }}>\r\n                Min. word length:{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={99}\r\n                  value={blend.minLength}\r\n                  onChange={(nr: number) => {\r\n                    blend.setMinLength(nr);\r\n                  }}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <div style={{ margin: \"5px\" }}>\r\n                Max. word length:{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={99}\r\n                  value={blend.maxLength}\r\n                  onChange={(nr: number) => {\r\n                    blend.setMaxLength(nr);\r\n                  }}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <div style={{ margin: \"5px\" }}>\r\n                Same prefix length:{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={3}\r\n                  max={99}\r\n                  value={blend.prefixLetters}\r\n                  onChange={(nr: number) => {\r\n                    blend.setPrefixLetters(nr);\r\n                  }}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              <Button style={{ marginTop: \"12px\" }} onClick={resetFilters}>\r\n                Reset all filters\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        )}\r\n      </div>\r\n      <WordsTable />\r\n    </LanguageBlendContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LanguageBlendPage;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./style.css\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst LanguageList = () => {\r\n  const { language }: any = useParams();\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [wordList, setWordList] = useState<string[]>([]);\r\n\r\n  const getLanguage = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setWordList(response.data.data[0].list);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLanguage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading === true && <Spin />}\r\n      <p style={{ whiteSpace: \"pre\" }}>{wordList.join(\"\\r\\n\")}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LanguageList;\r\n","import { LanguageContext } from \"../../../App\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\n\r\nimport \"./style.css\";\r\nimport { Divider } from \"antd\";\r\n\r\nconst Resources = () => {\r\n  const {\r\n    languageWordList,\r\n    english,\r\n    finnish,\r\n    french,\r\n    german,\r\n    hungarian,\r\n    italian,\r\n    polish,\r\n    romanian,\r\n    spanish,\r\n    turkish,\r\n  } = useContext(LanguageContext);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(en) {english}</div>\r\n        <Link to=\"/resources/english\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(fi) {finnish}</div>\r\n\r\n        <Link to=\"/resources/finnish\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(fr) {french}</div>\r\n        <Link to=\"/resources/french\">View list</Link>\r\n      </div>\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(de) {german}</div>\r\n\r\n        <Link to=\"/resources/german\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(hu) {hungarian}</div>\r\n\r\n        <Link to=\"/resources/hungarian\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(it) {italian}</div>\r\n\r\n        <Link to=\"/resources/italian\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(pl) {polish}</div>\r\n\r\n        <Link to=\"/resources/polish\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(ro) {romanian}</div>\r\n        <Link to=\"/resources/romanian\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(es) {spanish}</div>\r\n        <Link to=\"/resources/spanish\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(tr) {turkish}</div>\r\n\r\n        <Link to=\"/resources/turkish\">View list</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resources;\r\n","import { LanguageContext } from \"../../../App\";\r\nimport { useContext } from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst ChangeLog = () => {\r\n  const { update1, update2, update3, update4, update5, update6 } =\r\n    useContext(LanguageContext);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"changelog-container\">\r\n        <div id=\"changelog-sub-container\">\r\n          <Card title=\"V1.0.0 / -\" style={{ margin: \"12px\" }}></Card>\r\n          <Card title=\"V0.5.0 / 17.5.2022\" style={{ margin: \"12px\" }}>\r\n            {update6}\r\n          </Card>\r\n          <Card title=\"V0.0.5 / 26.4.2022\" style={{ margin: \"12px\" }}>\r\n            {update5}\r\n          </Card>\r\n          <Card title=\"V0.0.4 / 16.4.2022\" style={{ margin: \"12px\" }}>\r\n            {update4}\r\n          </Card>\r\n          <Card title=\"V0.3 / 29.12.2021\" style={{ margin: \"12px\" }}>\r\n            {update3}\r\n          </Card>\r\n          <Card title=\"V0.2 / 10.12.2021\" style={{ margin: \"12px\" }}>\r\n            {update2}\r\n          </Card>\r\n          <Card title=\"V0.1 / 1.12.2021\" style={{ margin: \"12px\" }}>\r\n            {update1}\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeLog;\r\n","import { useRef, useState } from \"react\";\r\n\r\nconst useTextScraper = () => {\r\n  const [text, setText] = useState<string>(\"\");\r\n  const [wordsArray, setWordsArray] = useState<string[]>([]);\r\n  const [UTF8Array, setUTF8Array] = useState<string[]>([]);\r\n  const [goodCharacters, setGoodCharacters] = useState<string[]>([]);\r\n  const [badCharacters, setBadCharacters] = useState<string[]>([]);\r\n  const textRef = useRef();\r\n\r\n  return {\r\n    text,\r\n    setText,\r\n    wordsArray,\r\n    setWordsArray,\r\n    UTF8Array,\r\n    setUTF8Array,\r\n    textRef,\r\n    goodCharacters,\r\n    setGoodCharacters,\r\n    badCharacters,\r\n    setBadCharacters,\r\n  };\r\n};\r\n\r\nexport default useTextScraper;\r\n","import { TextScraperContext } from \"..\";\r\nimport { useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\nconst TextInput = () => {\r\n  const { setText, textRef } = useContext(TextScraperContext);\r\n\r\n  const debounce = (func: any) => {\r\n    let timer: any;\r\n    return function (...args: any) {\r\n      if (timer) clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        timer = null;\r\n        func.apply(null, args);\r\n      }, 500);\r\n    };\r\n  };\r\n\r\n  const handleChange = (text: string) => {\r\n    setText(text);\r\n    console.log(\"acum se face set state\");\r\n  };\r\n\r\n  const optimizedFn = useCallback(debounce(handleChange), []);\r\n\r\n  return (\r\n    <textarea\r\n      style={{ boxSizing: \"border-box\", width: \"100%\" }}\r\n      rows={15}\r\n      name=\"description\"\r\n      placeholder=\"Extract the unique words from every text!\"\r\n      onChange={(e) => optimizedFn(e.target.value)}\r\n      ref={textRef}\r\n    ></textarea>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import useTextScraper from \"./components/useTextScraper\";\r\nimport TextInput from \"./components/TextInput\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nexport const TextScraperContext = React.createContext<any>(null);\r\n\r\nconst TextScraper = () => {\r\n  const textScraper = useTextScraper();\r\n\r\n  const scrape = () => {\r\n    //split text into words\r\n    let arr = textScraper.text\r\n      .replace(/\\r/g, \" \")\r\n      .split(\r\n        /[ \u001b\u001a\u0019\u0018\u0017\u0015\u0014\u0013\u0012\u0011\u0010\u000f\u000e\f\b\u0006\u0003\u0002\u0005\u0001\u0004■+#’‘%$=^†…„♦¬«»•¹²1234567890“*”.·:;?!~,`\"&|()<>{}\\[\\]\\r\\n/\\\\]+/\r\n      );\r\n    //lowercase?\r\n    arr = arr.map((word: string) => word.toLowerCase());\r\n\r\n    //remove duplicates\r\n    arr = Object.keys(\r\n      arr.reduce((reducer: any, word: any) => {\r\n        reducer[word] = true;\r\n        return reducer;\r\n      }, {})\r\n    );\r\n    //sorting?\r\n    arr.sort();\r\n\r\n    textScraper.setWordsArray(arr);\r\n    console.log(arr);\r\n  };\r\n\r\n  const clear = () => {\r\n    console.log(\"wa\", textScraper.textRef);\r\n    //@ts-ignore\r\n    textScraper.textRef.current.value = \"\";\r\n    textScraper.setText(\"\");\r\n    textScraper.setWordsArray([]);\r\n  };\r\n\r\n  return (\r\n    <TextScraperContext.Provider value={textScraper}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"100%\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Link\r\n            to=\"/tools\"\r\n            style={{ alignSelf: \"flex-start\", textDecoration: \"none\" }}\r\n          >\r\n            <Button style={{ marginBottom: \"10px\" }}>{\"< Go back\"}</Button>\r\n          </Link>\r\n          <TextInput />\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Button style={{ margin: \"10px 0 10px 0\" }} onClick={clear}>\r\n              CLEAR\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ margin: \"10px 0 10px 0\" }}\r\n              onClick={scrape}\r\n            >\r\n              EXTRACT UNIQUE WORDS\r\n            </Button>\r\n          </div>\r\n          <textarea\r\n            style={{ boxSizing: \"border-box\", width: \"100%\" }}\r\n            rows={15}\r\n            name=\"description\"\r\n            placeholder=\"Unique words will appear here\"\r\n            value={textScraper.wordsArray.join(\"\\n\")}\r\n            readOnly\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </TextScraperContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TextScraper;\r\n","const NotFound = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        color: \"#fff\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexGrow: 1,\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <span style={{ fontSize: \"6rem\", marginTop: \"100px\" }}>404</span>\r\n        <p style={{ marginTop: \"-15px\", marginBottom: \"30px\" }}>\r\n          Nothing to see here\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { BlendContext, LanguageContext } from \"../../../App\";\r\nimport { useRef } from \"react\";\r\nimport { Card, Statistic, Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst LandingPage = () => {\r\n  const myRef = useRef(null);\r\n  const blend = React.useContext(BlendContext);\r\n  const { startExploring, landingPageText } = React.useContext(LanguageContext);\r\n\r\n  React.useEffect(() => {\r\n    //clear blending history\r\n    blend.selectedLanguage1 = [];\r\n    blend.selectedLanguage2 = [];\r\n    blend.blendedList = [];\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"landing-page-container\">\r\n      <Card\r\n        style={{\r\n          margin: \"12px\",\r\n          flexGrow: 1,\r\n          maxWidth: \"40%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          height: \"100%\",\r\n          backgroundColor: \"#fafafa\",\r\n        }}\r\n      >\r\n        <div style={{ marginBottom: \"10px\" }}>{landingPageText}</div>\r\n        <Button type=\"primary\">{startExploring}</Button>\r\n      </Card>\r\n      <Card style={{ margin: \"12px\", flexGrow: 1, backgroundColor: \"#f5f5f5\" }}>\r\n        <Statistic title=\"Languages\" value={10} />\r\n      </Card>\r\n      <Card style={{ margin: \"12px\", flexGrow: 1, backgroundColor: \"#f0f0f0\" }}>\r\n        wow\r\n      </Card>\r\n      <Card style={{ margin: \"12px\", flexGrow: 1, backgroundColor: \"#d9d9d9\" }}>\r\n        wow\r\n      </Card>\r\n\r\n      {/* <div id=\"left-section-container\">\r\n        <p\r\n          style={{\r\n            fontFamily: \"consolas\",\r\n            color: \"#222831\",\r\n            width: \"370px\",\r\n            marginBottom: \"30px\",\r\n          }}\r\n        >\r\n          \r\n        </p>\r\n        <Link\r\n          to=\"/language-blend\"\r\n          style={{ textDecoration: \"none\", color: \"#F84284\" }}\r\n        >\r\n          \r\n        </Link>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useLanguageBlend = () => {\r\n  const [selectedLanguage1, setSelectedLanguage1] = useState<any>([]);\r\n  const [selectedLanguage2, setSelectedLanguage2] = useState<any>([]);\r\n  const [languageCode1, setLanguageCode1] = useState<string>(\"\");\r\n  const [languageCode2, setLanguageCode2] = useState<string>(\"\");\r\n  const [languages, setLanguages] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [blendedList, setBlendedList] = useState<any>([]);\r\n  const [alert, setAlert] = useState<string>(\"\");\r\n\r\n  //word restrictions\r\n  const [prefixLetters, setPrefixLetters] = useState<number>(3);\r\n\r\n  //controls\r\n  const [minLength, setMinLength] = useState<number>(1);\r\n  const [maxLength, setMaxLength] = useState<number>(99);\r\n\r\n  //Levenstein Distance\r\n  const levenshteinDistance = (str1: string, str2: string) => {\r\n    const track = Array(str2.length + 1)\r\n      .fill(null)\r\n      .map(() => Array(str1.length + 1).fill(null));\r\n    for (let i = 0; i <= str1.length; i += 1) {\r\n      track[0][i] = i;\r\n    }\r\n    for (let j = 0; j <= str2.length; j += 1) {\r\n      track[j][0] = j;\r\n    }\r\n    for (let j = 1; j <= str2.length; j += 1) {\r\n      for (let i = 1; i <= str1.length; i += 1) {\r\n        const indicator = str1[i - 1] === str2[j - 1] ? 0 : 1;\r\n        track[j][i] = Math.min(\r\n          track[j][i - 1] + 1, // deletion\r\n          track[j - 1][i] + 1, // insertion\r\n          track[j - 1][i - 1] + indicator // substitution\r\n        );\r\n      }\r\n    }\r\n    return track[str2.length][str1.length];\r\n  };\r\n\r\n  const getLanguages = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguages`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setLanguages(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getFirstLanguage = async (language: string) => {\r\n    setLoading(true);\r\n\r\n    //update language code for language1\r\n    switch (language) {\r\n      case \"english\":\r\n        setLanguageCode1(\"en\");\r\n        break;\r\n      case \"finnish\":\r\n        setLanguageCode1(\"fi\");\r\n        break;\r\n      case \"french\":\r\n        setLanguageCode1(\"fr\");\r\n        break;\r\n      case \"german\":\r\n        setLanguageCode1(\"de\");\r\n        break;\r\n      case \"hungarian\":\r\n        setLanguageCode1(\"hu\");\r\n        break;\r\n      case \"italian\":\r\n        setLanguageCode1(\"it\");\r\n        break;\r\n      case \"polish\":\r\n        setLanguageCode1(\"pl\");\r\n        break;\r\n      case \"romanian\":\r\n        setLanguageCode1(\"ro\");\r\n        break;\r\n      case \"spanish\":\r\n        setLanguageCode1(\"es\");\r\n        break;\r\n      case \"turkish\":\r\n        setLanguageCode1(\"tr\");\r\n        break;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSelectedLanguage1(\r\n          response.data.data[0].list.map((el: string) => el + \"1\")\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getSecondLanguage = async (language: string) => {\r\n    setLoading(true);\r\n\r\n    //update language code for language2\r\n    switch (language) {\r\n      case \"english\":\r\n        setLanguageCode2(\"en\");\r\n        break;\r\n      case \"finnish\":\r\n        setLanguageCode2(\"fi\");\r\n        break;\r\n      case \"french\":\r\n        setLanguageCode2(\"fr\");\r\n        break;\r\n      case \"german\":\r\n        setLanguageCode2(\"de\");\r\n        break;\r\n      case \"hungarian\":\r\n        setLanguageCode2(\"hu\");\r\n        break;\r\n      case \"italian\":\r\n        setLanguageCode2(\"it\");\r\n        break;\r\n      case \"polish\":\r\n        setLanguageCode2(\"pl\");\r\n        break;\r\n      case \"romanian\":\r\n        setLanguageCode2(\"ro\");\r\n        break;\r\n      case \"spanish\":\r\n        setLanguageCode2(\"es\");\r\n        break;\r\n      case \"turkish\":\r\n        setLanguageCode2(\"tr\");\r\n        break;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSelectedLanguage2(\r\n          response.data.data[0].list.map((el: string) => el + \"2\")\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLanguages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //for prefix stuff\r\n    if (prefixLetters !== 0) {\r\n      if (selectedLanguage1.length > 0 && selectedLanguage2.length > 0) {\r\n        var words = [...selectedLanguage1, ...selectedLanguage2].reduce(\r\n          (o, v) => {\r\n            let key = v.substring(0, prefixLetters);\r\n            o[key] = o[key] === undefined ? \"\" : o[key] + \"|\" + v;\r\n            return o;\r\n          },\r\n          {}\r\n        );\r\n\r\n        //count is an object with keys\r\n        console.log(words[Object.keys(words)[28]]);\r\n        //Object.keys(obj).length\r\n        var filteredArray = Object.keys(words)\r\n          .map(String)\r\n          .map((key: string) => {\r\n            //((\"str1,str2,str3,str4\".match(/,/g) || []).length)\r\n            if (words[key].split(\"|\").length >= 3) return words[key].split(\"|\");\r\n          })\r\n          .filter((el: any) => {\r\n            if (el !== undefined) return true;\r\n            return false;\r\n          });\r\n        console.log(filteredArray);\r\n\r\n        setBlendedList(filteredArray);\r\n      }\r\n    } else {\r\n      if (selectedLanguage1.length > 0 && selectedLanguage2.length > 0) {\r\n        var count = [...selectedLanguage1, ...selectedLanguage2].reduce(\r\n          (o, v) => {\r\n            o[v] = o[v] + 1 || 1;\r\n            return o;\r\n          },\r\n          {}\r\n        );\r\n\r\n        //count is an object with keys\r\n        console.log(Object.keys(count)[23]);\r\n\r\n        var duplicate = Object.keys(count)\r\n          .filter((k) => count[k] > 1)\r\n          .map(String);\r\n\r\n        setBlendedList(duplicate);\r\n      }\r\n    }\r\n\r\n    //set language codes\r\n  }, [selectedLanguage1, selectedLanguage2, prefixLetters]);\r\n\r\n  return {\r\n    selectedLanguage1,\r\n    setSelectedLanguage1,\r\n\r\n    selectedLanguage2,\r\n    setSelectedLanguage2,\r\n\r\n    loading,\r\n    setLoading,\r\n\r\n    blendedList,\r\n    setBlendedList,\r\n\r\n    languages,\r\n    setLanguages,\r\n\r\n    alert,\r\n    setAlert,\r\n\r\n    getFirstLanguage,\r\n    getSecondLanguage,\r\n\r\n    languageCode1,\r\n    setLanguageCode1,\r\n    languageCode2,\r\n    setLanguageCode2,\r\n\r\n    minLength,\r\n    setMinLength,\r\n\r\n    maxLength,\r\n    setMaxLength,\r\n\r\n    prefixLetters,\r\n    setPrefixLetters,\r\n  };\r\n};\r\n\r\nexport default useLanguageBlend;\r\n","import { SwapOutlined } from \"@ant-design/icons\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { useContext } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport {\r\n  ArrowRightOutlined,\r\n  GithubOutlined,\r\n  MailOutlined,\r\n  DatabaseOutlined,\r\n  ToolOutlined,\r\n  AntDesignOutlined,\r\n  CloudServerOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport const About = () => {\r\n  const {\r\n    findTheCommonWordsOfLanguages,\r\n    appBuiltUsingMERN,\r\n    developerAndCommunity,\r\n    getInvolved,\r\n    contribuitors,\r\n  } = useContext(LanguageContext);\r\n\r\n  return (\r\n    <div id=\"about-page-container\">\r\n      <Card id=\"project-description-container\">\r\n        <h1>{findTheCommonWordsOfLanguages}</h1>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            color: \"grey\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              color: \"grey\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              border: \"1px solid lightgrey\",\r\n              padding: \"8px\",\r\n            }}\r\n          >\r\n            <span style={{ color: \"#2f54eb\" }}>ABC</span> PVBF AUX{\" \"}\r\n            <span style={{ color: \"#2f54eb\" }}>DEF</span> IQYE\r\n          </div>\r\n\r\n          <SwapOutlined\r\n            style={{ fontSize: \"2rem\", margin: \"0px 10px 0px 10px\" }}\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              color: \"grey\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              border: \"1px solid lightgrey\",\r\n              padding: \"8px\",\r\n            }}\r\n          >\r\n            OQUE <span style={{ color: \"#2f54eb\" }}>ABC</span> KIYW JSU{\" \"}\r\n            <span style={{ color: \"#2f54eb\" }}>DEF</span>\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <ArrowRightOutlined\r\n              style={{ fontSize: \"2rem\", color: \"grey\", marginLeft: \"10px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                color: \"#2f54eb\",\r\n                marginLeft: \"7px\",\r\n                border: \"1px solid lightgrey\",\r\n                padding: \"8px\",\r\n              }}\r\n            >\r\n              <span>ABC</span>\r\n              <span>DEF</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n      {/*App made using mern stack*/}\r\n\r\n      <Card id=\"mern-container\">\r\n        <h1>{appBuiltUsingMERN}</h1>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://www.mongodb.com/\" style={{ color: \"#2f54eb\" }}>\r\n              mongoDB\r\n            </a>\r\n            <DatabaseOutlined\r\n              style={{ fontSize: \"3rem\", color: \"grey\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://nodejs.dev/\" style={{ color: \"#2f54eb\" }}>\r\n              Node\r\n            </a>\r\n            <CloudServerOutlined\r\n              style={{ fontSize: \"3rem\", color: \"grey\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://expressjs.com/\" style={{ color: \"#2f54eb\" }}>\r\n              Express\r\n            </a>\r\n            <ToolOutlined\r\n              style={{ fontSize: \"3rem\", color: \"grey\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://reactjs.org/\" style={{ color: \"#2f54eb\" }}>\r\n              React\r\n            </a>\r\n            <AntDesignOutlined\r\n              style={{ fontSize: \"3rem\", color: \"grey\", marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      <Card id=\"developer-and-community-container\">\r\n        <h1>{developerAndCommunity}</h1>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <MailOutlined\r\n            style={{ fontSize: \"1.5rem\", color: \"grey\", marginRight: \"10px\" }}\r\n          />\r\n          <div style={{ color: \"#2f54eb\" }}>chita.catalin.adrian@gmail.com</div>\r\n        </div>\r\n\r\n        <h2 style={{ fontWeight: 100 }}>{getInvolved}</h2>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <GithubOutlined\r\n            style={{ fontSize: \"1.5rem\", color: \"grey\", marginRight: \"10px\" }}\r\n          />\r\n          <div style={{ color: \"#2f54eb\" }}>\r\n            github.com/chita-catalin/common-words{\" \"}\r\n          </div>\r\n        </div>\r\n\r\n        <h2 style={{ fontWeight: 100 }}>{contribuitors}</h2>\r\n        <a href=\"https://github.com/chita-catalin\" style={{ color: \"#2f54eb\" }}>\r\n          chita-catalin\r\n        </a>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { Button, Divider } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Tools = () => {\r\n  return (\r\n    <div id=\"tools-container\">\r\n      <Link to=\"/tools/text-scraper\" style={{ textDecoration: \"none\" }}>\r\n        <Button type=\"primary\">TEXT SCRAPER</Button>\r\n      </Link>\r\n      <Divider style={{ marginTop: \"10px\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tools;\r\n","import LanguageBlendPage from \"./components/pages/LanguageBlendPage/index\";\nimport LanguageList from \"./components/pages/Resources/LanguageList\";\nimport { Route, Routes, HashRouter, Link } from \"react-router-dom\";\nimport Resources from \"./components/pages/Resources/Resources\";\nimport ChangeLog from \"./components/pages/changelog/ChangeLog\";\nimport TextScraper from \"./components/pages/Tools/TextScraper\";\nimport NotFound from \"./components/pages/NotFound/NotFound\";\nimport LandingPage from \"./components/pages/LandingPage\";\nimport useLanguageBlend from \"./useLanguageBlend\";\nimport { About } from \"./components/pages/about\";\nimport Tools from \"./components/pages/Tools\";\nimport { useLanguage } from \"./useLanguage\";\nimport {\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  ToolOutlined,\n  HistoryOutlined,\n  HomeOutlined,\n  SwapOutlined,\n  DatabaseOutlined,\n  InfoCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Layout, Menu, Select } from \"antd\";\nimport React, { useState } from \"react\";\n\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\n//env\nimport \"dotenv/config\";\n\nexport const LanguageContext = React.createContext<any>(null);\nexport const BlendContext = React.createContext<any>(null);\n\nconst { Header, Sider, Content } = Layout;\n\nfunction App() {\n  const blend = useLanguageBlend();\n  const language = useLanguage();\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  return (\n    <LanguageContext.Provider value={language}>\n      <BlendContext.Provider value={blend}>\n        <HashRouter>\n          <Layout>\n            <Sider trigger={null} collapsible collapsed={collapsed}>\n              <Menu\n                style={{\n                  paddingTop: \"60px\",\n                  minHeight: \"100vh\",\n                  height: \"100%\",\n                }}\n                theme=\"light\"\n                mode=\"inline\"\n                defaultSelectedKeys={[\"0\"]}\n              >\n                <Menu.Item key=\"0\">\n                  <Link to=\"/\">\n                    <HomeOutlined />\n                    <span>Explore</span>\n                  </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"1\">\n                  <Link to=\"/language-blend\">\n                    <SwapOutlined /> <span>Compare languages</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                  <Link to=\"/tools\">\n                    <ToolOutlined /> <span>{language.tools}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\">\n                  <Link to=\"/resources\">\n                    <DatabaseOutlined /> <span>{language.resources}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"4\">\n                  <Link to=\"/about\">\n                    <InfoCircleOutlined /> <span>{language.about}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"5\">\n                  <Link to=\"/changelog\">\n                    <HistoryOutlined /> <span>{language.changelog}</span>\n                  </Link>\n                </Menu.Item>\n              </Menu>\n            </Sider>\n            <Layout className=\"site-layout\">\n              <Header\n                className=\"site-layout-background\"\n                style={{\n                  padding: 0,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                {collapsed ? (\n                  <MenuUnfoldOutlined\n                    className=\"trigger\"\n                    onClick={() => setCollapsed(!collapsed)}\n                  />\n                ) : (\n                  <MenuFoldOutlined\n                    className=\"trigger\"\n                    onClick={() => setCollapsed(!collapsed)}\n                  />\n                )}\n\n                <div id=\"title\">\n                  <Link\n                    to=\"/\"\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"black\",\n                    }}\n                  >\n                    {language.commonWords}\n                  </Link>\n                  <span style={{ fontSize: \"15px\", marginLeft: \"2px\" }}>\n                    V1.0.0\n                  </span>\n                </div>\n\n                <Select\n                  style={{ marginRight: \"24px\" }}\n                  defaultValue=\"english\"\n                  bordered={false}\n                  onChange={(lng: string) => language.setLanguage(lng)}\n                >\n                  <Select.Option value=\"english\">\n                    {language.english}\n                  </Select.Option>\n                  <Select.Option value=\"romanian\">\n                    {language.romanian}\n                  </Select.Option>\n                </Select>\n              </Header>\n              <Content\n                className=\"site-layout-background\"\n                style={{\n                  margin: \"24px 16px\",\n                  padding: 12,\n                  minHeight: 280,\n                }}\n              >\n                <Routes>\n                  <Route\n                    path=\"/language-blend\"\n                    element={<LanguageBlendPage />}\n                  />\n                  <Route path=\"/resources\" element={<Resources />} />\n                  <Route\n                    path=\"/resources/:language\"\n                    element={<LanguageList />}\n                  />\n                  <Route path=\"/changelog\" element={<ChangeLog />} />\n                  <Route path=\"/about\" element={<About />} />\n                  <Route path=\"/\" element={<LandingPage />} />\n                  <Route path=\"*\" element={<NotFound />} />\n                  <Route path=\"/tools\" element={<Tools />} />\n                  <Route path=\"/tools/text-scraper\" element={<TextScraper />} />\n                </Routes>\n              </Content>\n            </Layout>\n          </Layout>\n        </HashRouter>\n      </BlendContext.Provider>\n    </LanguageContext.Provider>\n  );\n}\n\nexport default App;\n\n/*\n\n <Link to=\"/tools\" className=\"first-small-nav\">\n            <u>{tools}</u>\n          </Link>\n          <Link to=\"/resources\" className=\"small-nav\">\n            <u>{resources}</u>\n          </Link>\n          <Link to=\"/about\" className=\"small-nav\">\n            <u>{about}</u>\n          </Link>\n          <Link to=\"/changelog\" className=\"small-nav\">\n            <u>{changelog}</u>\n          </Link>\n\nexport default App;*/\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useLanguage = () => {\r\n  const [language, setLanguage] = useState(\"english\");\r\n\r\n  const [commonWords, setCommonWords] = useState<string>(\"COMMON WORDS\");\r\n  const [resources, setResources] = useState(\"resources\");\r\n  const [about, setAbout] = useState(\"about\");\r\n  const [changelog, setChangelog] = useState(\"changelog\");\r\n  const [startExploring, setStartExploring] = useState(\"START EXPLORING\");\r\n  const [landingPageText, setLandingPageText] = useState(\r\n    \"Compare your language with another! Find the common words, and more fun statistics about languages, completely free!\"\r\n  );\r\n\r\n  const [tools, setTools] = useState(\"tools\");\r\n  //blend page\r\n  const [selectTwoLanguages, setSelectTwoLanguages] = useState(\r\n    \"Select two languages!\"\r\n  );\r\n  const [wordsPerPage, setWordsPerPage] = useState(\"Words per page\");\r\n  const [words, setWords] = useState(\"Words\");\r\n  const [minWordLength, setMinWordLength] = useState(\"Min. word length\");\r\n  const [maxWordLength, setMaxWordLength] = useState(\"Max. word length\");\r\n  const [wordMatch, setWordMatch] = useState(\"Word match (different letters)\");\r\n  //about page\r\n  const [findTheCommonWordsOfLanguages, setFindTheCommonWordsOfLanguages] =\r\n    useState(\"FIND THE COMMON WORDS OF LANGUAGES\");\r\n  const [developerAndCommunity, setDeveloperAndCommunity] = useState(\r\n    \"DEVELOPER & COMMUNITY\"\r\n  );\r\n  const [getInvolved, setGetInvolved] = useState(\"GET INVOLVED!\");\r\n  const [contribuitors, setContribuitors] = useState(\"CONTRIBUTORS:\");\r\n  const [appBuiltUsingMERN, setAppBuiltUsingMERN] = useState(\r\n    \"THIS WEB APP WAS BUILT USING THE MERN STACK\"\r\n  );\r\n  //resources\r\n  const [languageWordList, setLanguageWordList] = useState(\r\n    \"Language word lists (all words)\"\r\n  );\r\n  //languages\r\n  const [english, setEnglish] = useState(\"English\");\r\n  const [finnish, setFinnish] = useState(\"Finnish\");\r\n  const [french, setFrench] = useState(\"French\");\r\n  const [german, setGerman] = useState(\"German\");\r\n  const [hungarian, setHungarian] = useState(\"Hungarian\");\r\n  const [italian, setItalian] = useState(\"Italian\");\r\n  const [polish, setPolish] = useState(\"Polish\");\r\n  const [romanian, setRomanian] = useState(\"Romanian\");\r\n  const [spanish, setSpanish] = useState(\"Spanish\");\r\n  const [turkish, setTurkish] = useState(\"Turkish\");\r\n  //ChangeLog\r\n  const [update1, setUpdate1] = useState(\"Project created\");\r\n  const [update2, setUpdate2] = useState(\"Added basic language blending\");\r\n  const [update3, setUpdate3] = useState(\r\n    `Added Italian,French,Finnish languages\\nEnhanced results page.\\nadded ${\"changelog\"} section.\\nadded country flags.\\nadded dark/light theme switch`\r\n  );\r\n  const [update4, setUpdate4] = useState(\r\n    `Removed language lists from frontend side\\nAdded about section\\nRemoved light/dark theme switch\\nEnhanced landing page UI\\nUpdated versioning system to match web standards`\r\n  );\r\n  const [update5, setUpdate5] = useState(\r\n    `Connected to Backend App\\nNow retreiving languages list from database\\nAdded not-yet-functional table to \"blend-page\"\\nadded Romanian word list to \"Resources\" page`\r\n  );\r\n  const [update6, setUpdate6] = useState(\r\n    \"Added language switch RO/EN\\nAdded more languages\\nAdded language comparing functionality\\nAdded tools section, with unique word extraction tool\\nAdded languages list from database to resources page\\nImproved general UI\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (language) {\r\n      case \"english\":\r\n        setCommonWords(\"COMMON WORDS\");\r\n        setResources(\"resources\");\r\n        setAbout(\"about\");\r\n        setChangelog(\"changelog\");\r\n        setStartExploring(\"START EXPLORING\");\r\n        setLandingPageText(\r\n          \"Compare your language with another! Find the common words, and more fun statistics about languages, completely free!\"\r\n        );\r\n        setTools(\"tools\");\r\n        //blend page\r\n        setSelectTwoLanguages(\"Select two languages!\");\r\n        setWordsPerPage(\"Words per page\");\r\n        setWords(\"Words\");\r\n        setMinWordLength(\"Min. word length\");\r\n        setMaxWordLength(\"Max. word length\");\r\n        setWordMatch(\"Word Match (different letters)\");\r\n        //about page\r\n        setFindTheCommonWordsOfLanguages(\"FIND THE COMMON WORDS OF LANGUAGES\");\r\n        setDeveloperAndCommunity(\"DEVELOPER & COMMUNITY\");\r\n        setGetInvolved(\"GET INVOLVED!\");\r\n        setContribuitors(\"CONTRIBUITORS:\");\r\n        setAppBuiltUsingMERN(\"THIS WEB APP WAS BUILT USING THE MERN STACK\");\r\n        //resources\r\n        setLanguageWordList(\"Language word lists (all words)\");\r\n        //languages\r\n        setEnglish(\"English\");\r\n        setFinnish(\"Finnish\");\r\n        setFrench(\"French\");\r\n        setGerman(\"German\");\r\n        setHungarian(\"Hungarian\");\r\n        setItalian(\"Italian\");\r\n        setPolish(\"Polish\");\r\n        setRomanian(\"Romanian\");\r\n        setSpanish(\"Spanish\");\r\n        setTurkish(\"Turkish\");\r\n        //ChangeLog\r\n        setUpdate1(\"Project created\");\r\n        setUpdate2(\"Added basic language blending\");\r\n        setUpdate3(\r\n          `Added Italian,French,Finnish languages\\nEnhanced results page.\\nadded ${\"changelog\"} section.\\nadded country flags.\\nadded dark/light theme switch`\r\n        );\r\n        setUpdate4(\r\n          `Removed language lists from frontend side\\nAdded about section\\nRemoved light/dark theme switch\\nEnhanced landing page UI\\nUpdated versioning system to match web standards`\r\n        );\r\n        setUpdate5(\r\n          `Connected to Backend App\\nNow retreiving languages list from database\\nAdded not-yet-functional table to \"blend-page\"\\nadded Romanian word list to \"Resources\" page`\r\n        );\r\n        setUpdate6(\r\n          \"Added language switch RO/EN\\nAdded more languages\\nAdded language comparing functionality\\nAdded tools section, with unique word extraction tool\\nAdded languages list from database to resources page\\nImproved general UI\"\r\n        );\r\n\r\n        break;\r\n\r\n      case \"romanian\":\r\n        setCommonWords(\"CUVINTE COMUNE\");\r\n        setResources(\"resurse\");\r\n        setAbout(\"despre\");\r\n        setChangelog(\"istoric schimbari\");\r\n        setStartExploring(\"EXPLOREAZĂ\");\r\n        setLandingPageText(\r\n          \"Compară limba ta cu altă limbă! Găsește cuvintele comune, și alte statistici interesante despre limbi, complet gratuit!\"\r\n        );\r\n        setTools(\"unelte\");\r\n        //blend page\r\n        setSelectTwoLanguages(\"Selectează două limbi diferite!\");\r\n        setWordsPerPage(\"Cuvinte pe pagină\");\r\n        setWords(\"Cuvinte\");\r\n        setMinWordLength(\"Lungime minimă\");\r\n        setMaxWordLength(\"Lungime maximă\");\r\n        setWordMatch(\"Potrivire cuvinte (litere diferite)\");\r\n        //about page\r\n        setFindTheCommonWordsOfLanguages(\r\n          \"GĂSEȘTE CUVINTELE COMUNE ALE LIMBILOR\"\r\n        );\r\n        setDeveloperAndCommunity(\"DEZVOLTATOR & COMUNITATE\");\r\n        setGetInvolved(\"IMPLICĂ-TE!\");\r\n        setContribuitors(\"CONTRIBUITORI:\");\r\n        setAppBuiltUsingMERN(\r\n          \"ACEASTĂ APLICAȚIE WEB A FOST DEZVOLTATĂ FOLOSIND STACK-UL MERN\"\r\n        );\r\n        //resources\r\n        setLanguageWordList(\r\n          \"Listele de cuvinte ale limbilor (toate cuvintele)\"\r\n        );\r\n        //languages\r\n        setEnglish(\"Engleză\");\r\n        setFinnish(\"Finlandeză\");\r\n        setFrench(\"Franceză\");\r\n        setGerman(\"Germană\");\r\n        setHungarian(\"Maghiară\");\r\n        setItalian(\"Italiană\");\r\n        setPolish(\"Poloneză\");\r\n        setRomanian(\"Română\");\r\n        setSpanish(\"Spaniolă\");\r\n        setTurkish(\"Turcă\");\r\n        //changelog\r\n        setUpdate1(\"Început proiect\");\r\n        setUpdate2(\"Adăugat algoritm de combinare a limbilor\");\r\n        setUpdate3(\r\n          `Adăugat Italiană, Franceză, Finlandeză\\nÎmbunătățit pagina de rezultate\\nAdăugat secțiune de \"istoric schimbări\"\\nAdăugat steaguri pentru țări\\nAdăugat buton pentru temă light/dark`\r\n        );\r\n        setUpdate4(\r\n          `Înlăturat listele de cuvinte din Frontend\\nAdăugat secțiunea \"despre\"\\nÎnlăturat butonul pentru temă light/dark\\nÎmbunătățit UI-ul paginii de pornire\\nUpdatat sistemul de versionare cu standardul web`\r\n        );\r\n        setUpdate5(\r\n          `Conectat aplicația web la Backend\\nListele de limbi acum sunt preluate dintr-o bază de date\\nAdăugat tabel de cuvinte, încă nefuncțional\\nAdăugat lista cuvintelor din limba română la pagina de resurse `\r\n        );\r\n        setUpdate6(\r\n          `Adăugat funcția de schimbare de limbă\\nAdăugat mai multe limbi\\nAdăugat funcția de comparare a limbilor\\nAdăugat secțiunea de unelte\\nAdăugat unealta de extragere a cuvintelor unice\\nAdăugat liste de limbi la pagina de resurse\\nÎmbunătățit UI general`\r\n        );\r\n\r\n        break;\r\n    }\r\n  }, [language]);\r\n\r\n  return {\r\n    language,\r\n    setLanguage,\r\n    commonWords,\r\n    resources,\r\n    about,\r\n    changelog,\r\n    startExploring,\r\n    landingPageText,\r\n    tools,\r\n    //blend page\r\n    selectTwoLanguages,\r\n    wordsPerPage,\r\n    words,\r\n    minWordLength,\r\n    maxWordLength,\r\n    //about page\r\n    findTheCommonWordsOfLanguages,\r\n    developerAndCommunity,\r\n    getInvolved,\r\n    contribuitors,\r\n    appBuiltUsingMERN,\r\n    wordMatch,\r\n    //resources\r\n    languageWordList,\r\n    //languages\r\n    english,\r\n    finnish,\r\n    french,\r\n    german,\r\n    hungarian,\r\n    italian,\r\n    polish,\r\n    romanian,\r\n    spanish,\r\n    turkish,\r\n    //ChangeLog\r\n    update1,\r\n    update2,\r\n    update3,\r\n    update4,\r\n    update5,\r\n    update6,\r\n  };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}