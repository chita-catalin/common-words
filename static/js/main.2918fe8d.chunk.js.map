{"version":3,"sources":["components/pages/LanguageBlendPage/components/wordsTable.tsx","components/pages/LanguageBlendPage/index.tsx","components/pages/Resources/LanguageList.tsx","components/pages/MoreStatistics/index.tsx","components/pages/Resources/Resources.tsx","components/pages/changelog/ChangeLog.tsx","components/pages/Tools/TextScraper/components/useTextScraper.tsx","components/pages/Tools/TextScraper/components/TextInput.tsx","components/pages/Tools/TextScraper/index.tsx","components/pages/NotFound/NotFound.tsx","components/pages/MoreDetails/index.tsx","components/pages/LandingPage/index.tsx","useLanguageBlend.ts","components/pages/about/index.tsx","components/pages/Tools/index.tsx","App.tsx","useLanguage.tsx","index.tsx"],"names":["WordsTable","blend","useContext","BlendContext","LanguageContext","wordsPerPage","words","minWordLength","maxWordLength","wordMatch","useState","page","setPage","itemsPerPage","setItemsPerPage","useEffect","setFilteredList","blendedList","filter","word","length","minLength","maxLength","data","filteredList","map","el","columns","title","dataIndex","key","render","text","tableView","dataSource","style","marginTop","bordered","loading","size","pagination","pageSize","position","display","alignItems","flexDirection","paddingTop","current","defaultCurrent","total","pageSizeOptions","flexGrow","onChange","flexWrap","index","backgroundColor","justifyContent","LanguageBlendContext","React","createContext","LanguageBlendPage","Provider","value","id","getFirstLanguage","placeholder","width","defaultValue","languages","language","Option","name","_id","SwapOutlined","marginLeft","marginRight","getSecondLanguage","sort","a","b","suffix","selectedLanguage1","selectedLanguage2","toFixed","setTableView","margin","checkedChildren","unCheckedChildren","checked","type","defaultChecked","min","max","nr","setMinLength","setMaxLength","LanguageList","useParams","setLoading","wordList","setWordList","getLanguage","axios","get","process","response","status","list","console","log","CircularProgress","whiteSpace","join","MoreStatistics","className","Typography","fontSize","fontWeight","Button","to","textDecoration","Resources","english","languageWordList","finnish","french","german","hungarian","italian","polish","romanian","spanish","turkish","marginBottom","ChangeLog","update1","update2","update3","update4","update5","update6","useTextScraper","setText","wordsArray","setWordsArray","UTF8Array","setUTF8Array","goodCharacters","setGoodCharacters","badCharacters","setBadCharacters","textRef","useRef","TextInput","TextScraperContext","optimizedFn","useCallback","func","timer","args","clearTimeout","setTimeout","apply","debounce","rows","cols","e","target","ref","ChartJS","register","ArcElement","Tooltip","Legend","TextScraper","textScraper","initialNrOfWords","setInitialNrOfWords","statisticsRef","pieData","labels","datasets","label","borderColor","borderWidth","padding","alignSelf","color","variant","onClick","scrollIntoView","arr","replace","split","toLowerCase","Object","keys","reduce","reducer","readOnly","Paper","minHeight","NotFound","MoreDetails","fontFamily","setBlendedList","setSelectedLanguage2","setSelectedLanguage1","cursor","TextField","InputLabelProps","shrink","borderRadius","Number","LandingPage","startExploring","landingPageText","maxWidth","height","useLanguageBlend","lettersToIgnore","setLettersToIgnore","languageCode1","setLanguageCode1","languageCode2","setLanguageCode2","setLanguages","alert","setAlert","getLanguages","count","o","v","duplicate","k","String","About","findTheCommonWordsOfLanguages","appBuiltUsingMERN","developerAndCommunity","getInvolved","contribuitors","border","href","Tools","Header","Layout","Sider","Content","App","setLanguage","commonWords","setCommonWords","resources","setResources","about","setAbout","changelog","setChangelog","setStartExploring","setLandingPageText","tools","setTools","selectTwoLanguages","setSelectTwoLanguages","setWordsPerPage","setWords","setMinWordLength","setMaxWordLength","setWordMatch","setFindTheCommonWordsOfLanguages","setDeveloperAndCommunity","setGetInvolved","setContribuitors","setAppBuiltUsingMERN","setLanguageWordList","setEnglish","setFinnish","setFrench","setGerman","setHungarian","setItalian","setPolish","setRomanian","setSpanish","setTurkish","setUpdate1","setUpdate2","setUpdate3","setUpdate4","setUpdate5","setUpdate6","useLanguage","collapsed","setCollapsed","trigger","collapsible","theme","mode","defaultSelectedKeys","Item","HomeOutlined","ToolOutlined","DatabaseOutlined","InfoCircleOutlined","HistoryOutlined","MenuUnfoldOutlined","MenuFoldOutlined","lng","path","element","ReactDOM","StrictMode","document","getElementById"],"mappings":"kfAMaA,EAAa,WACxB,IAAMC,EAAQC,qBAAWC,IAEzB,EACED,qBAAWE,IAEb,GAHA,EAAQC,aAAR,EAAsBC,MAAtB,EAA6BC,cAA7B,EAA4CC,cAA5C,EAA2DC,UAGnCC,mBAAiB,IAAzC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,mBAAiB,KAAzD,mBAAOG,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRd,EAAMe,gBACJf,EAAMgB,YAAYC,QAAO,SAACC,GACxB,OAAIA,EAAKC,QAAUnB,EAAMoB,WAAaF,EAAKC,QAAUnB,EAAMqB,gBAK9D,CAACrB,EAAMoB,UAAWpB,EAAMqB,UAAWrB,EAAMgB,cAE5C,IAAMM,EAAYtB,EAAMuB,aAAaC,KAAI,SAACC,GACxC,MAAO,CAAEP,KAAMO,MAGXC,EAAe,CACnB,CACEC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACC,GAAD,OAAkB,4BAAIA,OAIlC,OACE,qCACG/B,EAAMgC,WAAahC,EAAMgB,YAAYG,OAAS,EAC7C,cAAC,IAAD,CACEO,QAASA,EACTO,WAAYX,EACZY,MAAO,CAAEC,UAAW,OACpBC,UAAQ,EACRC,QAASrC,EAAMqC,QACfC,KAAK,QACLC,WAAY,CACVC,SAAU5B,EACV6B,SAAU,CAAC,YAAa,mBAG1BzC,EAAMgB,YAAYG,OAAS,EAC7B,sBACEe,MAAO,CACLQ,QAAS,OACTC,WAAY,SACZC,cAAe,SACfC,WAAY,QALhB,UAQE,cAAC,IAAD,CACEC,QAASpC,EACT8B,SAAU5B,EACVmC,eAAgB,EAChBC,MAAOhD,EAAMuB,aAAaJ,OAC1B8B,gBAAiB,CAAC,GAAI,IAAK,IAAK,IAAK,IAAM,IAAM,IAAM,KACvDf,MAAO,CAAEgB,SAAU,GACnBC,SAAU,SAACzC,EAAM8B,GACf3B,EAAgB2B,GAChB7B,EAAQD,MAGZ,qBAAKwB,MAAO,CAAEQ,QAAS,OAAQU,SAAU,OAAQjB,UAAW,OAA5D,SACGnC,EAAMuB,aAAaC,KAAI,SAACN,EAAcmC,GACrC,GACEA,GAASzC,EAAeF,GACxB2C,GAASzC,GAAgBF,EAAO,GAAK,EAErC,OACE,cAAC,IAAD,CACEwB,MAAO,CACLgB,SAAU,EACVf,UAAW,MACXmB,gBACEpC,EAAKC,QAAU,EACX,UACAD,EAAKC,QAAU,GACf,UACAD,EAAKC,QAAU,GACf,UACA,WAXV,SAcGD,YAOX,KAEHlB,EAAMqC,SACL,qBACEH,MAAO,CACLQ,QAAS,OACTa,eAAgB,SAChBpB,UAAW,QAJf,SAOE,cAAC,IAAD,U,SCvGGqB,EAAuBC,IAAMC,cAAmB,MA+K9CC,EA7KW,WACxB,IAAM3D,EAAQyD,IAAMxD,WAAWC,IAU/B,OACE,eAACsD,EAAqBI,SAAtB,CAA+BC,MAAO7D,EAAtC,UACE,sBAAK8D,GAAG,mBAAR,UACE,eAAC,IAAD,CAAMA,GAAG,cAAT,UACE,cAAC,IAAD,CACEX,SAbwB,SAACU,GACjC7D,EAAM+D,iBAAiBF,IAafG,YAAY,oBACZ9B,MAAO,CAAE+B,MAAO,SAChBC,aAAc,GAJhB,SAMGlE,EAAMmE,UAAU3C,KAAI,SAAC4C,GACpB,OACE,cAAC,IAAOC,OAAR,CAAeR,MAAOO,EAASE,KAA/B,SACGF,EAASE,MAD8BF,EAASG,UAMzD,cAACC,EAAA,EAAD,CAActC,MAAO,CAAEuC,WAAY,OAAQC,YAAa,UAExD,cAAC,IAAD,CACEV,YAAY,0BACZb,SA1ByB,SAACU,GAClC7D,EAAM2E,kBAAkBd,IA0BhBK,aAAc,GACdhC,MAAO,CAAE+B,MAAO,SAJlB,SAMGjE,EAAMmE,UACJS,MAAK,SAACC,EAAaC,GAClB,OAAID,EAAEP,KAAOQ,EAAER,KAAa,GACpB,KAET9C,KAAI,SAAC4C,GACJ,OACE,cAAC,IAAOC,OAAR,CAAeR,MAAOO,EAASE,KAA/B,SACGF,EAASE,MAD8BF,EAASG,aAQ7D,cAAC,IAAD,CAAMT,GAAG,kBAAT,SACE,sBAAK5B,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,gBAA/C,UACE,cAAC,IAAD,CACE5B,MAAM,eACNkC,MAAO7D,EAAMuB,aAAaJ,OAC1Be,MAAO,CAAEwC,YAAa,UAExB,cAAC,IAAD,CACE/C,MAAM,iBACNoD,OAAO,IACPlB,MACE7D,EAAMuB,aAAaJ,OAAS,GAEO,IAA5BnB,EAAMuB,aAAaJ,QACnBnB,EAAMgF,kBAAkB7D,OACvBnB,EAAMiF,kBAAkB9D,SAC1B+D,QAAQ,GACV,EAENhD,MAAO,CAAEwC,YAAa,eAK3B1E,EAAMgB,YAAYG,OAAS,GAC1B,cAAC,IAAD,CAAM2C,GAAG,gBAAT,SACE,sBAAKA,GAAG,mBAAR,UACE,cAAC,IAAD,CACEX,SAAU,SAACU,GACT7D,EAAMmF,aAAatB,IAErB3B,MAAO,CAAEkD,OAAQ,OACjBC,gBAAgB,aAChBC,kBAAkB,aAClBC,QAASvF,EAAMgC,YAEjB,cAAC,IAAD,CAASwD,KAAK,aACd,cAAC,IAAD,CACEtD,MAAO,CAAEkD,OAAQ,OACjBC,gBAAgB,wBAChBC,kBAAkB,6BAClBG,gBAAc,IAEhB,cAAC,IAAD,CAASD,KAAK,aAEd,sBAAKtD,MAAO,CAAEkD,OAAQ,OAAtB,iCACuB,IACrB,cAAC,IAAD,CACE9C,KAAK,QACLoD,IAAK,EACLC,IAAK,GACLzB,aAAclE,EAAMoB,UACpB+B,SAAU,SAACyC,GACT5F,EAAM6F,aAAaD,IAErB1D,MAAO,CAAEuC,WAAY,MAAOR,MAAO,aAGvC,cAAC,IAAD,CAASuB,KAAK,aAEd,sBAAKtD,MAAO,CAAEkD,OAAQ,OAAtB,iCACuB,IACrB,cAAC,IAAD,CACE9C,KAAK,QACLoD,IAAK,EACLC,IAAK,GACLzB,aAAclE,EAAMqB,UACpB8B,SAAU,SAACyC,GACT5F,EAAM8F,aAAaF,IAErB1D,MAAO,CAAEuC,WAAY,MAAOR,MAAO,aAGvC,cAAC,IAAD,CAASuB,KAAK,aAEd,sBAAKtD,MAAO,CAAEkD,OAAQ,OAAtB,gCACsB,IACpB,cAAC,IAAD,CACE9C,KAAK,QACLoD,IAAK,EACLC,IAAK,GACLzB,aAAc,EACdf,SAAU,aACVjB,MAAO,CAAEuC,WAAY,MAAOR,MAAO,aAGvC,cAAC,IAAD,CAASuB,KAAK,aAEd,sBAAKtD,MAAO,CAAEkD,OAAQ,OAAtB,gCACsB,IACpB,cAAC,IAAD,CACE9C,KAAK,QACLoD,IAAK,EACLC,IAAK,GACLzB,aAAc,EACdf,SAAU,aACVjB,MAAO,CAAEuC,WAAY,MAAOR,MAAO,aAGvC,cAAC,IAAD,CAASuB,KAAK,aAEd,sBAAKtD,MAAO,CAAEkD,OAAQ,OAAtB,uDAC6C,IAC3C,cAAC,IAAD,CACE9C,KAAK,QACLoD,IAAK,EACLC,IAAK,GACLzB,aAAc,EACdf,SAAU,aACVjB,MAAO,CAAEuC,WAAY,MAAOR,MAAO,qBAO/C,cAAC,EAAD,Q,6DCxIS8B,G,OApCM,WACnB,IAAQ3B,EAAkB4B,cAAlB5B,SAER,EAA8B3D,oBAAkB,GAAhD,mBAAO4B,EAAP,KAAgB4D,EAAhB,KACA,EAAgCxF,mBAAmB,IAAnD,mBAAOyF,EAAP,KAAiBC,EAAjB,KAEMC,EAAW,uCAAG,4BAAAvB,EAAA,6DAClBoB,GAAW,GADO,kBAIOI,IAAMC,IAAN,UAClBC,qCADkB,iCACqCnC,IAL5C,OAQQ,OAJlBoC,EAJU,QAQHC,QACXN,EAAYK,EAASlF,KAAKA,KAAK,GAAGoF,MATpB,gDAYhBC,QAAQC,IAAR,MAZgB,QAelBX,GAAW,GAfO,yDAAH,qDAsBjB,OAJAnF,qBAAU,WACRsF,MACC,IAGD,sCACe,IAAZ/D,GAAoB,cAACwE,EAAA,EAAD,CAAkB/C,GAAG,qBAC1C,mBAAG5B,MAAO,CAAE4E,WAAY,OAAxB,SAAkCZ,EAASa,KAAK,e,0BClCzCC,G,OAAiB,WAC5B,OACE,sBAAKC,UAAU,4BAAf,UACE,cAACC,EAAA,EAAD,CAAYhF,MAAO,CAAEiF,SAAU,UAAWC,WAAY,KAAtD,yBAGA,cAACC,EAAA,EAAD,UACE,eAAC,IAAD,CAAMC,GAAG,IAAIpF,MAAO,CAAEqF,eAAgB,QAAtC,UACE,4CADF,8BCyFOC,EA7FG,WAChB,MAYIvH,qBAAWE,IAVbsH,GAFF,EACEC,iBADF,EAEED,SACAE,EAHF,EAGEA,QACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,OACAC,EANF,EAMEA,UACAC,EAPF,EAOEA,QACAC,EARF,EAQEA,OACAC,EATF,EASEA,SACAC,EAVF,EAUEA,QACAC,EAXF,EAWEA,QAGF,OACE,sBAAKjG,MAAO,CAAEQ,QAAS,OAAQE,cAAe,UAA9C,UACE,sBAAKV,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,iBAA/C,UACE,wCAAWkE,KACX,cAAC,IAAD,CAAMH,GAAG,qBAAT,0BAGF,cAAC,IAAD,CAASpF,MAAO,CAAEC,UAAW,MAAOiG,aAAc,SAElD,sBAAKlG,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,iBAA/C,UACE,wCAAWoE,KAEX,cAAC,IAAD,CAAML,GAAG,qBAAT,0BAGF,cAAC,IAAD,CAASpF,MAAO,CAAEC,UAAW,MAAOiG,aAAc,SAElD,sBAAKlG,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,iBAA/C,UACE,wCAAWqE,KACX,cAAC,IAAD,CAAMN,GAAG,oBAAT,0BAEF,cAAC,IAAD,CAASpF,MAAO,CAAEC,UAAW,MAAOiG,aAAc,SAElD,sBAAKlG,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,iBAA/C,UACE,wCAAWsE,KAEX,cAAC,IAAD,CAAMP,GAAG,oBAAT,0BAGF,cAAC,IAAD,CAASpF,MAAO,CAAEC,UAAW,MAAOiG,aAAc,SAElD,sBAAKlG,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,iBAA/C,UACE,wCAAWuE,KAEX,cAAC,IAAD,CAAMR,GAAG,uBAAT,0BAGF,cAAC,IAAD,CAASpF,MAAO,CAAEC,UAAW,MAAOiG,aAAc,SAElD,sBAAKlG,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,iBAA/C,UACE,wCAAWwE,KAEX,cAAC,IAAD,CAAMT,GAAG,qBAAT,0BAGF,cAAC,IAAD,CAASpF,MAAO,CAAEC,UAAW,MAAOiG,aAAc,SAElD,sBAAKlG,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,iBAA/C,UACE,wCAAWyE,KAEX,cAAC,IAAD,CAAMV,GAAG,oBAAT,0BAGF,cAAC,IAAD,CAASpF,MAAO,CAAEC,UAAW,MAAOiG,aAAc,SAElD,sBAAKlG,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,iBAA/C,UACE,wCAAW0E,KACX,cAAC,IAAD,CAAMX,GAAG,sBAAT,0BAGF,cAAC,IAAD,CAASpF,MAAO,CAAEC,UAAW,MAAOiG,aAAc,SAElD,sBAAKlG,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,iBAA/C,UACE,wCAAW2E,KACX,cAAC,IAAD,CAAMZ,GAAG,qBAAT,0BAGF,cAAC,IAAD,CAASpF,MAAO,CAAEC,UAAW,MAAOiG,aAAc,SAElD,sBAAKlG,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,iBAA/C,UACE,wCAAW4E,KAEX,cAAC,IAAD,CAAMb,GAAG,qBAAT,8BCvDOe,G,OAjCG,WAChB,MACEpI,qBAAWE,IADLmI,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,QAASC,EAA5C,EAA4CA,QAASC,EAArD,EAAqDA,QAGrD,OACE,8BACE,qBAAK7E,GAAG,sBAAR,SACE,sBAAKA,GAAG,0BAAR,UACE,cAAC,IAAD,CAAMnC,MAAM,aAAaO,MAAO,CAAEkD,OAAQ,UAC1C,cAAC,IAAD,CAAMzD,MAAM,qBAAqBO,MAAO,CAAEkD,OAAQ,QAAlD,SACGuD,IAEH,cAAC,IAAD,CAAMhH,MAAM,qBAAqBO,MAAO,CAAEkD,OAAQ,QAAlD,SACGsD,IAEH,cAAC,IAAD,CAAM/G,MAAM,qBAAqBO,MAAO,CAAEkD,OAAQ,QAAlD,SACGqD,IAEH,cAAC,IAAD,CAAM9G,MAAM,oBAAoBO,MAAO,CAAEkD,OAAQ,QAAjD,SACGoD,IAEH,cAAC,IAAD,CAAM7G,MAAM,oBAAoBO,MAAO,CAAEkD,OAAQ,QAAjD,SACGmD,IAEH,cAAC,IAAD,CAAM5G,MAAM,mBAAmBO,MAAO,CAAEkD,OAAQ,QAAhD,SACGkD,a,kBCNEM,EAvBQ,WACrB,MAAwBnI,mBAAiB,IAAzC,mBAAOsB,EAAP,KAAa8G,EAAb,KACA,EAAoCpI,mBAAmB,IAAvD,mBAAOqI,EAAP,KAAmBC,EAAnB,KACA,EAAkCtI,mBAAmB,IAArD,mBAAOuI,EAAP,KAAkBC,EAAlB,KACA,EAA4CxI,mBAAmB,IAA/D,mBAAOyI,EAAP,KAAuBC,EAAvB,KACA,EAA0C1I,mBAAmB,IAA7D,mBAAO2I,EAAP,KAAsBC,EAAtB,KAGA,MAAO,CACLtH,OACA8G,UACAC,aACAC,gBACAC,YACAC,eACAK,QATcC,mBAUdL,iBACAC,oBACAC,gBACAC,qBCeWG,EAjCG,WAChB,MAA6BvJ,qBAAWwJ,GAAhCZ,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,QAkBXI,EAAcC,sBAhBH,SAACC,GAChB,IAAIC,EACJ,OAAO,WAAyB,IAAD,uBAAXC,EAAW,yBAAXA,EAAW,gBACzBD,GAAOE,aAAaF,GACxBA,EAAQG,YAAW,WACjBH,EAAQ,KACRD,EAAKK,MAAM,KAAMH,KAChB,MASyBI,EALX,SAACnI,GACpB8G,EAAQ9G,GACR4E,QAAQC,IAAI,6BAG0C,IAExD,OACE,0BACEuD,KAAM,GACNC,KAAM,IACN9F,KAAK,cACLN,YAAY,4CACZb,SAAU,SAACkH,GAAD,OAAOX,EAAYW,EAAEC,OAAOzG,QACtC0G,IAAKjB,K,0BCrBXkB,IAAQC,SAASC,IAAYC,IAASC,KAE/B,IAAMnB,EAAqBhG,IAAMC,cAAmB,MA6J5CmH,EA3JK,WAClB,IAAMC,EAAclC,IACpB,EAA8CnI,mBAAS,IAAvD,mBACA,GADA,UACgDA,mBAAiB,IAAjE,mBAAOsK,EAAP,KAAyBC,EAAzB,KAEMC,EAAqB1B,iBAAO,MAqC5B2B,EAAU,CACdC,OAAQ,CAAC,GAAD,OACHJ,EADG,iCAEHD,EAAYhC,WAAW3H,OAFpB,2BAG6B,IAAhC2J,EAAYhC,WAAW3H,OACxB4J,GACA7F,QAAQ,GALJ,OAORkG,SAAU,CACR,CACEC,MAAO,aACP/J,KAAM,CAACyJ,EAAkBD,EAAYhC,WAAW3H,QAChDmC,gBAAiB,CAAC,0BAA2B,2BAC7CgI,YAAa,CAAC,wBAAyB,yBACvCC,YAAa,KAKnB,OACE,cAAC9B,EAAmB7F,SAApB,CAA6BC,MAAOiH,EAApC,SACE,qBACE5I,MAAO,CACLQ,QAAS,OACTE,cAAe,SACfD,WAAY,SACZ6I,QAAS,uBALb,SAQE,sBACEtJ,MAAO,CACLQ,QAAS,OACTE,cAAe,SACfD,WAAY,UAJhB,UAOE,cAAC,IAAD,CACE2E,GAAG,SACHpF,MAAO,CAAEuJ,UAAW,aAAclE,eAAgB,QAFpD,SAIE,cAACF,EAAA,EAAD,CACEnF,MAAO,CACLwJ,MAAO,UACPtD,aAAc,QAHlB,SAMG,gBAGL,cAAC,EAAD,IAEA,sBACElG,MAAO,CACLQ,QAAS,OACTa,eAAgB,gBAChBU,MAAO,QAJX,UAOE,cAACoD,EAAA,EAAD,CACEsE,QAAQ,YACRzJ,MAAO,CAAEkD,OAAQ,gBAAiB9B,gBAAiB,QACnDsI,QArEE,WACZjF,QAAQC,IAAI,KAAMkE,EAAYxB,SAE9BwB,EAAYxB,QAAQxG,QAAQe,MAAQ,GACpCiH,EAAYjC,QAAQ,IACpBiC,EAAY/B,cAAc,KA6DlB,mBAQC+B,EAAYhC,WAAW3H,OAAS,GAC/B,eAACkG,EAAA,EAAD,CACEsE,QAAQ,YACRzJ,MAAO,CACLkD,OAAQ,gBACR9B,gBAAiB,WAEnBsI,QA7GQ,kBAAMX,EAAcnI,QAAQ+I,kBAuGtC,6BAQkB,cAAC,IAAD,OAIpB,cAACxE,EAAA,EAAD,CACEsE,QAAQ,YACRzJ,MAAO,CAAEkD,OAAQ,gBAAiB9B,gBAAiB,WACnDsI,QApHG,WAEb,IAAIE,EAAMhB,EAAY/I,KACnBgK,QAAQ,MAAO,KACfC,MACC,mOAGJF,EAAMA,EAAItK,KAAI,SAACN,GAAD,OAAkBA,EAAK+K,iBAErCjB,EAAoBc,EAAI3K,SAGxB2K,EAAMI,OAAOC,KACXL,EAAIM,QAAO,SAACC,EAAcnL,GAExB,OADAmL,EAAQnL,IAAQ,EACTmL,IACN,MAGDzH,OAEJkG,EAAY/B,cAAc+C,GAC1BnF,QAAQC,IAAIkF,IA0FJ,qCAQF,0BACE3B,KAAM,GACNC,KAAM,IACN9F,KAAK,cACLN,YAAY,gCACZH,MAAOiH,EAAYhC,WAAW/B,KAAK,MACnCuF,UAAQ,IAGTxB,EAAYhC,WAAW3H,OAAS,GAC/B,cAACoL,EAAA,EAAD,CACEhC,IAAKU,EACL/I,MAAO,CAAE+B,MAAO,OAAQ9B,UAAW,OAAQqK,UAAW,SAFxD,SAIE,sBAAKtK,MAAO,CAAE+B,MAAO,MAAOmB,OAAQ,QAApC,UACG,IACD,cAAC,IAAD,CAAK9D,KAAM4J,iBCpIZuB,EA3BE,WACf,OACE,qBACEvK,MAAO,CACLQ,QAAS,OACTE,cAAe,SACf8I,MAAO,QAJX,SAOE,sBACExJ,MAAO,CACLQ,QAAS,OACTQ,SAAU,EACVN,cAAe,SACfW,eAAgB,SAChBZ,WAAY,UANhB,UASE,sBAAMT,MAAO,CAAEiF,SAAU,OAAQhF,UAAW,SAA5C,iBACA,mBAAGD,MAAO,CAAEC,UAAW,QAASiG,aAAc,QAA9C,uC,SC2FOsE,EAzGK,WAClB,IAAM1M,EAAQyD,IAAMxD,WAAWC,IACzBgG,EAAWlG,EAAMgB,YAEvB,EAAkCyC,IAAMhD,SAAS,GAAjD,mBAAOW,EAAP,KAAkByE,EAAlB,KACA,EAAkCpC,IAAMhD,SAAS,IAAjD,mBAAOY,EAAP,KAAkByE,EAAlB,KAEA,OACE,sBACE5D,MAAO,CACLQ,QAAS,OACTE,cAAe,UAHnB,UAME,qBAAKV,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,UAA/C,SACE,qBACErB,MAAO,CAAEyK,WAAY,WAAYjB,MAAO,QAASvJ,UAAW,QAD9D,UAGE,sBACEyJ,QAAS,WACP5L,EAAM4M,eAAe,IACrB5M,EAAM6M,qBAAqB,IAC3B7M,EAAM8M,qBAAqB,KAE7B5K,MAAO,CAAE6K,OAAQ,WANnB,6BAUC,IAAK,IACN,cAAC,IAAD,CACEzF,GAAG,kBACHpF,MAAO,CAAEwJ,MAAO,QAASnE,eAAgB,QAF3C,qBAMC,IApBH,IAoBQ,kDAGV,sBACErF,MAAO,CACLsJ,QAAS,OACTpG,OAAQ,gBACR1C,QAAS,QAJb,UAQE,sBACER,MAAO,CAAEQ,QAAS,OAAQE,cAAe,SAAUwC,OAAQ,OAD7D,UAGE,sBAAMlD,MAAO,CAAEwJ,MAAO,QAAStD,aAAc,OAA7C,iCAGA,cAAC4E,EAAA,EAAD,CACEhJ,YAAY,GACZwB,KAAK,SACLyH,gBAAiB,CACfC,QAAQ,GAEVrJ,MAAOzC,EACPc,MAAO,CAAEoB,gBAAiB,QAAS6J,aAAc,OACjDhK,SAAU,SAACkH,GAAD,OAAYxE,EAAauH,OAAO/C,EAAEC,OAAOzG,cAIvD,sBACE3B,MAAO,CAAEQ,QAAS,OAAQE,cAAe,SAAUwC,OAAQ,OAD7D,UAGE,sBAAMlD,MAAO,CAAEwJ,MAAO,QAAStD,aAAc,OAA7C,iCAGA,cAAC4E,EAAA,EAAD,CACEhJ,YAAY,GACZwB,KAAK,SACLyH,gBAAiB,CACfC,QAAQ,GAEVrJ,MAAOxC,EACPa,MAAO,CAAEoB,gBAAiB,QAAS6J,aAAc,OACjDhK,SAAU,SAACkH,GAAD,OAAYvE,EAAasH,OAAO/C,EAAEC,OAAOzG,iBAIzD,qBAAK3B,MAAO,CAAEQ,QAAS,OAAQE,cAAe,MAAOQ,SAAU,QAA/D,SACG8C,EAAS1E,KAAI,SAACC,GAAD,OACZA,EAAGP,MACHO,EAAGP,KAAKC,QAAUC,GAClBK,EAAGP,KAAKC,QAAUE,EAChB,qBACEa,MAAO,CACLkD,OAAQ,OACRoG,QAAS,OACT2B,aAAc,OACd7J,gBAAiB,0BACjBoI,MAAO,SANX,SASGjK,EAAGP,OAEJ,c,0BC9BCmM,G,OAjEK,WACJ9D,iBAAO,MAArB,IACMvJ,EAAQyD,IAAMxD,WAAWC,IAC/B,EAA4CuD,IAAMxD,WAAWE,IAArDmN,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,gBASxB,OAPA9J,IAAM3C,WAAU,WAEdd,EAAMgF,kBAAoB,GAC1BhF,EAAMiF,kBAAoB,GAC1BjF,EAAMgB,YAAc,KACnB,IAGD,sBAAK8C,GAAG,yBAAR,UACE,eAAC,IAAD,CACE5B,MAAO,CACLkD,OAAQ,OACRlC,SAAU,EACVsK,SAAU,MACV9K,QAAS,OACTE,cAAe,SACf6K,OAAQ,OACRnK,gBAAiB,WARrB,UAWE,qBAAKpB,MAAO,CAAEkG,aAAc,QAA5B,SAAuCmF,IACvC,eAAC,IAAD,CAAQ/H,KAAK,UAAb,UACG8H,EACD,cAAC,IAAD,CACEpL,MAAO,CAAEiF,SAAU,OAAQuE,MAAO,mBAIxC,cAAC,IAAD,CAAMxJ,MAAO,CAAEkD,OAAQ,OAAQlC,SAAU,EAAGI,gBAAiB,WAA7D,SACE,cAAC,IAAD,CAAW3B,MAAM,YAAYkC,MAAO,OAEtC,cAAC,IAAD,CAAM3B,MAAO,CAAEkD,OAAQ,OAAQlC,SAAU,EAAGI,gBAAiB,WAA7D,iBAGA,cAAC,IAAD,CAAMpB,MAAO,CAAEkD,OAAQ,OAAQlC,SAAU,EAAGI,gBAAiB,WAA7D,sB,QCqKSoK,GAjNU,WACvB,MAAkDjN,mBAAc,IAAhE,mBAAOuE,EAAP,KAA0B8H,EAA1B,KACA,EAAkDrM,mBAAc,IAAhE,mBAAOwE,EAAP,KAA0B4H,EAA1B,KACA,EAA8CpM,mBAAiB,GAA/D,mBAAOkN,EAAP,KAAwBC,EAAxB,KACA,EAA0CnN,mBAAiB,IAA3D,mBAAOoN,EAAP,KAAsBC,EAAtB,KACA,EAA0CrN,mBAAiB,IAA3D,mBAAOsN,EAAP,KAAsBC,EAAtB,KACA,EAAkCvN,mBAAmB,IAArD,mBAAO0D,EAAP,KAAkB8J,EAAlB,KACA,EAA8BxN,oBAAkB,GAAhD,mBAAO4B,EAAP,KAAgB4D,EAAhB,KACA,EAAsCxF,mBAAc,IAApD,mBAAOO,EAAP,KAAoB4L,EAApB,KACA,EAA0BnM,mBAAiB,IAA3C,mBAAOyN,EAAP,KAAcC,EAAd,KACA,EAAkC1N,oBAAkB,GAApD,mBAAOuB,EAAP,KAAkBmD,EAAlB,KAGA,EAAwC1E,mBAAmB,IAA3D,mBAAOc,EAAP,KAAqBR,EAArB,KAGA,EAAkCN,mBAAiB,GAAnD,mBAAOW,EAAP,KAAkByE,EAAlB,KACA,GAAkCpF,mBAAiB,IAAnD,qBAAOY,GAAP,MAAkByE,GAAlB,MAEMsI,GAAY,uCAAG,4BAAAvJ,EAAA,6DACnBoB,GAAW,GADQ,kBAIMI,IAAMC,IAAN,UAClBC,qCADkB,kBAJN,OAQO,OAJlBC,EAJW,QAQJC,QACXwH,EAAazH,EAASlF,KAAKA,MATZ,gDAYjBqF,QAAQC,IAAR,MAZiB,QAenBX,GAAW,GAfQ,yDAAH,qDAkBZlC,GAAgB,uCAAG,WAAOK,GAAP,eAAAS,EAAA,sDACvBoB,GAAW,GADY,KAIf7B,EAJe,OAKhB,YALgB,OAQhB,YARgB,OAWhB,WAXgB,OAchB,WAdgB,QAiBhB,cAjBgB,QAoBhB,YApBgB,QAuBhB,WAvBgB,QA0BhB,aA1BgB,QA6BhB,YA7BgB,QAgChB,YAhCgB,+BAMnB0J,EAAiB,MANE,mCASnBA,EAAiB,MATE,mCAYnBA,EAAiB,MAZE,oCAenBA,EAAiB,MAfE,oCAkBnBA,EAAiB,MAlBE,oCAqBnBA,EAAiB,MArBE,oCAwBnBA,EAAiB,MAxBE,oCA2BnBA,EAAiB,MA3BE,oCA8BnBA,EAAiB,MA9BE,oCAiCnBA,EAAiB,MAjCE,wDAsCEzH,IAAMC,IAAN,UAClBC,qCADkB,iCACqCnC,IAvCvC,QA0CG,OAJlBoC,EAtCe,QA0CRC,QACXqG,EAAqBtG,EAASlF,KAAKA,KAAK,GAAGoF,MA3CxB,mDA8CrBC,QAAQC,IAAR,MA9CqB,QAiDvBX,GAAW,GAjDY,2DAAH,sDAoDhBtB,GAAiB,uCAAG,WAAOP,GAAP,eAAAS,EAAA,sDACxBoB,GAAW,GADa,KAIhB7B,EAJgB,OAKjB,YALiB,OAQjB,YARiB,OAWjB,WAXiB,OAcjB,WAdiB,QAiBjB,cAjBiB,QAoBjB,YApBiB,QAuBjB,WAvBiB,QA0BjB,aA1BiB,QA6BjB,YA7BiB,QAgCjB,YAhCiB,+BAMpB4J,EAAiB,MANG,mCASpBA,EAAiB,MATG,mCAYpBA,EAAiB,MAZG,oCAepBA,EAAiB,MAfG,oCAkBpBA,EAAiB,MAlBG,oCAqBpBA,EAAiB,MArBG,oCAwBpBA,EAAiB,MAxBG,oCA2BpBA,EAAiB,MA3BG,oCA8BpBA,EAAiB,MA9BG,oCAiCpBA,EAAiB,MAjCG,wDAsCC3H,IAAMC,IAAN,UAClBC,qCADkB,iCACqCnC,IAvCtC,QA0CE,OAJlBoC,EAtCgB,QA0CTC,QACXoG,EAAqBrG,EAASlF,KAAKA,KAAK,GAAGoF,MA3CvB,mDA8CtBC,QAAQC,IAAR,MA9CsB,QAiDxBX,GAAW,GAjDa,2DAAH,sDA4EvB,OAxBAnF,qBAAU,WACRsN,OACC,IAEHtN,qBAAU,WACR,GAAIkE,EAAkB7D,OAAS,GAAK8D,EAAkB9D,OAAS,EAAG,CAChE,IAAIkN,EAAQ,sBAAIrJ,GAAJ,YAA0BC,IAAmBmH,QACvD,SAACkC,EAAGC,GAEF,OADAD,EAAEC,GAAKD,EAAEC,GAAK,GAAK,EACZD,IAET,IAGEE,EAAYtC,OAAOC,KAAKkC,GACzBpN,QAAO,SAACwN,GAAD,OAAOJ,EAAMI,GAAK,KACzBjN,IAAIkN,QAEP9B,EAAe4B,MAIhB,CAACxJ,EAAmBC,IAEhB,CACLD,oBACA8H,uBAEA7H,oBACA4H,uBAEAxK,UACA4D,aAEAjF,cACA4L,iBAEAzI,YACA8J,eAEAC,QACAC,WAEApK,oBACAY,qBAEAkJ,gBACAC,mBACAC,gBACAC,mBAEAL,kBACAC,qBAEA5L,YACAmD,eAEA/D,YACAyE,eAEAxE,aACAyE,gBAEAvE,eACAR,oB,mJClMS4N,I,OAAQ,WACnB,MAMI1O,qBAAWE,IALbyO,EADF,EACEA,8BACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,sBACAC,EAJF,EAIEA,YACAC,EALF,EAKEA,cAGF,OACE,sBAAKlL,GAAG,uBAAR,UACE,eAAC,IAAD,CAAMA,GAAG,gCAAT,UACE,6BAAK8K,IACL,sBACE1M,MAAO,CACLQ,QAAS,OACTgJ,MAAO,OACP/I,WAAY,SACZY,eAAgB,UALpB,UAQE,sBACErB,MAAO,CACLwJ,MAAO,OACPhJ,QAAS,OACTE,cAAe,SACfqM,OAAQ,sBACRzD,QAAS,OANb,UASE,sBAAMtJ,MAAO,CAAEwJ,MAAO,UAAWtE,WAAY,UAA7C,iBAAoE,IATtE,WAUW,IACT,sBAAMlF,MAAO,CAAEwJ,MAAO,UAAWtE,WAAY,UAA7C,iBAAoE,IAXtE,UAeA,cAAC5C,EAAA,EAAD,CACEtC,MAAO,CAAEiF,SAAU,OAAQ/B,OAAQ,uBAGrC,sBACElD,MAAO,CACLwJ,MAAO,OACPhJ,QAAS,OACTE,cAAe,SACfqM,OAAQ,sBACRzD,QAAS,OANb,iBASO,IACL,sBAAMtJ,MAAO,CAAEwJ,MAAO,UAAWtE,WAAY,UAA7C,iBAAoE,IAVtE,WAWW,IACT,sBAAMlF,MAAO,CAAEwJ,MAAO,UAAWtE,WAAY,UAA7C,uBAGJ,qBAAKlF,MAAO,CAAEQ,QAAS,OAAQa,eAAgB,UAA/C,SACE,cAAC,KAAD,CAAmBrB,MAAO,CAAEiF,SAAU,OAAQuE,MAAO,YAGvD,qBACExJ,MAAO,CACLQ,QAAS,OACTa,eAAgB,UAHpB,SAME,sBACErB,MAAO,CACLQ,QAAS,OACTE,cAAe,SACf8I,MAAO,UACPjH,WAAY,MACZ2C,WAAY,SACZ6H,OAAQ,sBACRzD,QAAS,OARb,UAWE,uCACA,+CAMN,eAAC,IAAD,CAAM1H,GAAG,iBAAT,UACE,6BAAK+K,IACL,sBAAK3M,MAAO,CAAEQ,QAAS,OAAQU,SAAU,QAAzC,UACE,sBAAK6D,UAAU,uBAAf,UACE,mBAAGiI,KAAK,2BAA2BhN,MAAO,CAAEwJ,MAAO,WAAnD,qBAGA,cAAC,KAAD,CAAaxJ,MAAO,CAAEiF,SAAU,OAAQuE,MAAO,aAGjD,sBAAKzE,UAAU,uBAAf,UACE,mBAAGiI,KAAK,sBAAsBhN,MAAO,CAAEwJ,MAAO,WAA9C,kBAGA,cAAC,KAAD,CAASxJ,MAAO,CAAEiF,SAAU,OAAQuE,MAAO,aAG7C,sBAAKzE,UAAU,uBAAf,UACE,mBAAGiI,KAAK,yBAAyBhN,MAAO,CAAEwJ,MAAO,WAAjD,qBAGA,cAAC,KAAD,CAAkBxJ,MAAO,CAAEiF,SAAU,OAAQuE,MAAO,aAGtD,sBAAKzE,UAAU,uBAAf,UACE,mBAAGiI,KAAK,uBAAuBhN,MAAO,CAAEwJ,MAAO,WAA/C,mBAGA,cAAC,KAAD,CAAexJ,MAAO,CAAEiF,SAAU,OAAQuE,MAAO,mBAKvD,eAAC,IAAD,CAAM5H,GAAG,oCAAT,UACE,6BAAKgL,IAEL,sBAAK5M,MAAO,CAAEQ,QAAS,OAAQC,WAAY,UAA3C,UACE,cAAC,KAAD,CACET,MAAO,CAAEiF,SAAU,SAAUuE,MAAO,OAAQhH,YAAa,UAE3D,qBAAKxC,MAAO,CAAEwJ,MAAO,WAArB,+CAGF,oBAAIxJ,MAAO,CAAEkF,WAAY,KAAzB,SAAiC2H,IAEjC,sBAAK7M,MAAO,CAAEQ,QAAS,OAAQC,WAAY,UAA3C,UACE,cAAC,KAAD,CACET,MAAO,CAAEiF,SAAU,SAAUuE,MAAO,OAAQhH,YAAa,UAE3D,sBAAKxC,MAAO,CAAEwJ,MAAO,WAArB,kDACwC,UAI1C,oBAAIxJ,MAAO,CAAEkF,WAAY,KAAzB,SAAiC4H,IACjC,mBAAGE,KAAK,mCAAmChN,MAAO,CAAEwJ,MAAO,WAA3D,mCChIOyD,I,OAlBD,WACZ,OACE,qBAAKrL,GAAG,kBAAR,SACE,cAAC,IAAD,CAAMwD,GAAG,sBAAsBpF,MAAO,CAAEqF,eAAgB,QAAxD,SACE,eAACF,EAAA,EAAD,CACEsE,QAAQ,YACRzJ,MAAO,CAAEiF,SAAU,OAAQ7D,gBAAiB,WAF9C,yBAKE,cAAC,IAAD,CACEpB,MAAO,CAAEiF,SAAU,OAAQ1C,WAAY,kB,0FCiBtCtE,I,qBAAkBsD,IAAMC,cAAmB,OAC3CxD,GAAeuD,IAAMC,cAAmB,MAE7C0L,GAA2BC,KAA3BD,OAAQE,GAAmBD,KAAnBC,MAAOC,GAAYF,KAAZE,QAiJRC,OA/If,WACE,IAAMxP,EAAQ0N,KACRtJ,ECtCmB,WACzB,MAAgC3D,mBAAS,WAAzC,mBAAO2D,EAAP,KAAiBqL,EAAjB,KAEA,EAAsChP,mBAAiB,gBAAvD,mBAAOiP,EAAP,KAAoBC,EAApB,KACA,EAAkClP,mBAAS,aAA3C,mBAAOmP,EAAP,KAAkBC,EAAlB,KACA,EAA0BpP,mBAAS,SAAnC,mBAAOqP,EAAP,KAAcC,EAAd,KACA,EAAkCtP,mBAAS,aAA3C,mBAAOuP,EAAP,KAAkBC,EAAlB,KACA,EAA4CxP,mBAAS,mBAArD,mBAAO6M,EAAP,KAAuB4C,EAAvB,KACA,EAA8CzP,mBAC5C,wHADF,mBAAO8M,EAAP,KAAwB4C,EAAxB,KAIA,EAA0B1P,mBAAS,SAAnC,mBAAO2P,EAAP,KAAcC,EAAd,KAEA,EAAoD5P,mBAClD,yBADF,mBAAO6P,EAAP,KAA2BC,EAA3B,KAGA,EAAwC9P,mBAAS,kBAAjD,mBAAOL,EAAP,KAAqBoQ,EAArB,KACA,EAA0B/P,mBAAS,SAAnC,mBAAOJ,EAAP,KAAcoQ,EAAd,KACA,EAA0ChQ,mBAAS,oBAAnD,mBAAOH,EAAP,KAAsBoQ,EAAtB,KACA,EAA0CjQ,mBAAS,oBAAnD,mBAAOF,EAAP,KAAsBoQ,EAAtB,KACA,GAAkClQ,mBAAS,kCAA3C,qBAAOD,GAAP,MAAkBoQ,GAAlB,MAEA,GACEnQ,mBAAS,sCADX,qBAAOmO,GAAP,MAAsCiC,GAAtC,MAEA,GAA0DpQ,mBACxD,yBADF,qBAAOqO,GAAP,MAA8BgC,GAA9B,MAGA,GAAsCrQ,mBAAS,iBAA/C,qBAAOsO,GAAP,MAAoBgC,GAApB,MACA,GAA0CtQ,mBAAS,iBAAnD,qBAAOuO,GAAP,MAAsBgC,GAAtB,MACA,GAAkDvQ,mBAChD,+CADF,qBAAOoO,GAAP,MAA0BoC,GAA1B,MAIA,GAAgDxQ,mBAC9C,mCADF,qBAAOiH,GAAP,MAAyBwJ,GAAzB,MAIA,GAA8BzQ,mBAAS,WAAvC,qBAAOgH,GAAP,MAAgB0J,GAAhB,MACA,GAA8B1Q,mBAAS,WAAvC,qBAAOkH,GAAP,MAAgByJ,GAAhB,MACA,GAA4B3Q,mBAAS,UAArC,qBAAOmH,GAAP,MAAeyJ,GAAf,MACA,GAA4B5Q,mBAAS,UAArC,qBAAOoH,GAAP,MAAeyJ,GAAf,MACA,GAAkC7Q,mBAAS,aAA3C,qBAAOqH,GAAP,MAAkByJ,GAAlB,MACA,GAA8B9Q,mBAAS,WAAvC,qBAAOsH,GAAP,MAAgByJ,GAAhB,MACA,GAA4B/Q,mBAAS,UAArC,qBAAOuH,GAAP,MAAeyJ,GAAf,MACA,GAAgChR,mBAAS,YAAzC,qBAAOwH,GAAP,MAAiByJ,GAAjB,MACA,GAA8BjR,mBAAS,WAAvC,qBAAOyH,GAAP,MAAgByJ,GAAhB,MACA,GAA8BlR,mBAAS,WAAvC,qBAAO0H,GAAP,MAAgByJ,GAAhB,MAEA,GAA8BnR,mBAAS,mBAAvC,qBAAO6H,GAAP,MAAgBuJ,GAAhB,MACA,GAA8BpR,mBAAS,iCAAvC,qBAAO8H,GAAP,MAAgBuJ,GAAhB,MACA,GAA8BrR,mBAAS,yEAAD,OACqC,YADrC,mEAAtC,qBAAO+H,GAAP,MAAgBuJ,GAAhB,MAGA,GAA8BtR,mBAAS,+KAAvC,qBAAOgI,GAAP,MAAgBuJ,GAAhB,MAGA,GAA8BvR,mBAAS,uKAAvC,qBAAOiI,GAAP,MAAgBuJ,GAAhB,MAGA,GAA8BxR,mBAC5B,+NADF,qBAAOkI,GAAP,MAAgBuJ,GAAhB,MA0HA,OAtHApR,qBAAU,WACR,OAAQsD,GACN,IAAK,UACHuL,EAAe,gBACfE,EAAa,aACbE,EAAS,SACTE,EAAa,aACbC,EAAkB,mBAClBC,EACE,wHAEFE,EAAS,SAETE,EAAsB,yBACtBC,EAAgB,kBAChBC,EAAS,SACTC,EAAiB,oBACjBC,EAAiB,oBACjBC,GAAa,kCAEbC,GAAiC,sCACjCC,GAAyB,yBACzBC,GAAe,iBACfC,GAAiB,kBACjBC,GAAqB,+CAErBC,GAAoB,mCAEpBC,GAAW,WACXC,GAAW,WACXC,GAAU,UACVC,GAAU,UACVC,GAAa,aACbC,GAAW,WACXC,GAAU,UACVC,GAAY,YACZC,GAAW,WACXC,GAAW,WAEXC,GAAW,mBACXC,GAAW,iCACXC,GAAW,yEAAD,OACiE,YADjE,mEAGVC,GAAW,+KAGXC,GAAW,uKAGXC,GACE,+NAGF,MAEF,IAAK,WACHvC,EAAe,kBACfE,EAAa,WACbE,EAAS,UACTE,EAAa,qBACbC,EAAkB,mBAClBC,EACE,yJAEFE,EAAS,UAETE,EAAsB,6CACtBC,EAAgB,0BAChBC,EAAS,WACTC,EAAiB,uBACjBC,EAAiB,uBACjBC,GAAa,uCAEbC,GACE,mDAEFC,GAAyB,4BACzBC,GAAe,oBACfC,GAAiB,kBACjBC,GACE,iFAGFC,GACE,qDAGFC,GAAW,gBACXC,GAAW,mBACXC,GAAU,iBACVC,GAAU,gBACVC,GAAa,iBACbC,GAAW,iBACXC,GAAU,iBACVC,GAAY,kBACZC,GAAW,iBACXC,GAAW,cAEXC,GAAW,sBACXC,GAAW,iDACXC,GAAW,sQAGXC,GAAW,4PAGXC,GAAW,sPAGXC,GAAW,qUAMd,CAAC9N,IAEG,CACLA,WACAqL,cACAC,cACAE,YACAE,QACAE,YACA1C,iBACAC,kBACA6C,QAEAE,qBACAlQ,eACAC,QACAC,gBACAC,gBAEAqO,iCACAE,yBACAC,eACAC,iBACAH,qBACArO,aAEAkH,oBAEAD,WACAE,WACAC,UACAC,UACAC,aACAC,WACAC,UACAC,YACAC,WACAC,WAEAG,WACAC,WACAC,WACAC,WACAC,WACAC,YD1LewJ,GAEjB,EAAkC1R,oBAAS,GAA3C,mBAAO2R,EAAP,KAAkBC,EAAlB,KAEA,OACE,cAAClS,GAAgByD,SAAjB,CAA0BC,MAAOO,EAAjC,SACE,cAAClE,GAAa0D,SAAd,CAAuBC,MAAO7D,EAA9B,SACE,cAAC,IAAD,UACE,eAAC,KAAD,WACE,cAACsP,GAAD,CAAOgD,QAAS,KAAMC,aAAW,EAACH,UAAWA,EAA7C,SACE,eAAC,KAAD,CACElQ,MAAO,CACLW,WAAY,OACZ2J,UAAW,QACXiB,OAAQ,QAEV+E,MAAM,QACNC,KAAK,SACLC,oBAAqB,CAAC,KARxB,UAUE,cAAC,KAAKC,KAAN,UACE,eAAC,IAAD,CAAMrL,GAAG,IAAT,UACE,cAACsL,GAAA,EAAD,IACA,+CAHW,KAOf,cAAC,KAAKD,KAAN,UACE,eAAC,IAAD,CAAMrL,GAAG,kBAAT,UACE,cAAC9C,EAAA,EAAD,IADF,IACmB,yDAFN,KAKf,cAAC,KAAKmO,KAAN,UACE,eAAC,IAAD,CAAMrL,GAAG,SAAT,UACE,cAACuL,GAAA,EAAD,IADF,IACmB,+BAAOzO,EAASgM,YAFtB,KAKf,cAAC,KAAKuC,KAAN,UACE,eAAC,IAAD,CAAMrL,GAAG,aAAT,UACE,cAACwL,GAAA,EAAD,IADF,IACuB,+BAAO1O,EAASwL,gBAF1B,KAKf,cAAC,KAAK+C,KAAN,UACE,eAAC,IAAD,CAAMrL,GAAG,SAAT,UACE,cAACyL,GAAA,EAAD,IADF,IACyB,+BAAO3O,EAAS0L,YAF5B,KAKf,cAAC,KAAK6C,KAAN,UACE,eAAC,IAAD,CAAMrL,GAAG,aAAT,UACE,cAAC0L,GAAA,EAAD,IADF,IACsB,+BAAO5O,EAAS4L,gBAFzB,UAOnB,eAAC,KAAD,CAAQ/I,UAAU,cAAlB,UACE,eAACmI,GAAD,CACEnI,UAAU,yBACV/E,MAAO,CACLsJ,QAAS,EACT9I,QAAS,OACTC,WAAY,SACZY,eAAgB,iBANpB,UASG6O,EACC,cAACa,GAAA,EAAD,CACEhM,UAAU,UACV2E,QAAS,kBAAMyG,GAAcD,MAG/B,cAACc,GAAA,EAAD,CACEjM,UAAU,UACV2E,QAAS,kBAAMyG,GAAcD,MAIjC,sBAAKtO,GAAG,QAAR,UACE,cAAC,IAAD,CACEwD,GAAG,IACHpF,MAAO,CACLqF,eAAgB,OAChBmE,MAAO,SAJX,SAOGtH,EAASsL,cAEZ,sBAAMxN,MAAO,CAAEiF,SAAU,OAAQ1C,WAAY,OAA7C,uBAKF,eAAC,IAAD,CACEvC,MAAO,CAAEwC,YAAa,QACtBR,aAAa,UACb9B,UAAU,EACVe,SAAU,SAACgQ,GAAD,OAAiB/O,EAASqL,YAAY0D,IAJlD,UAME,cAAC,IAAO9O,OAAR,CAAeR,MAAM,UAArB,SACGO,EAASqD,UAEZ,cAAC,IAAOpD,OAAR,CAAeR,MAAM,WAArB,SACGO,EAAS6D,iBAIhB,cAACsH,GAAD,CACEtI,UAAU,yBACV/E,MAAO,CACLkD,OAAQ,YACRoG,QAAS,GACTgB,UAAW,KALf,SAQE,eAAC,IAAD,WACE,cAAC,IAAD,CACE4G,KAAK,kBACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CACED,KAAK,uBACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,sBAAsBC,QAAS,cAAC,EAAD,wBErK7DC,IAASxR,OACP,cAAC,IAAMyR,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2918fe8d.chunk.js","sourcesContent":["import { BlendContext, LanguageContext } from \"../../../../App\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport \"../style.css\";\r\nimport { Pagination, Spin, Table, Tag } from \"antd\";\r\n\r\nexport const WordsTable = () => {\r\n  const blend = useContext(BlendContext);\r\n\r\n  const { wordsPerPage, words, minWordLength, maxWordLength, wordMatch } =\r\n    useContext(LanguageContext);\r\n\r\n  const [page, setPage] = useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = useState<number>(200);\r\n\r\n  useEffect(() => {\r\n    blend.setFilteredList(\r\n      blend.blendedList.filter((word: string) => {\r\n        if (word.length >= blend.minLength && word.length <= blend.maxLength)\r\n          return true;\r\n        else return false;\r\n      })\r\n    );\r\n  }, [blend.minLength, blend.maxLength, blend.blendedList]);\r\n\r\n  const data: any = blend.filteredList.map((el: string) => {\r\n    return { word: el };\r\n  });\r\n\r\n  const columns: any = [\r\n    {\r\n      title: \"word\",\r\n      dataIndex: \"word\",\r\n      key: \"word\",\r\n      render: (text: string) => <a>{text}</a>,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {blend.tableView && blend.blendedList.length > 0 ? (\r\n        <Table\r\n          columns={columns}\r\n          dataSource={data}\r\n          style={{ marginTop: \"6px\" }}\r\n          bordered\r\n          loading={blend.loading}\r\n          size=\"small\"\r\n          pagination={{\r\n            pageSize: itemsPerPage,\r\n            position: [\"topCenter\", \"bottomCenter\"],\r\n          }}\r\n        />\r\n      ) : blend.blendedList.length > 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            paddingTop: \"12px\",\r\n          }}\r\n        >\r\n          <Pagination\r\n            current={page}\r\n            pageSize={itemsPerPage}\r\n            defaultCurrent={1}\r\n            total={blend.filteredList.length}\r\n            pageSizeOptions={[50, 100, 200, 500, 1000, 2000, 5000, 10000]}\r\n            style={{ flexGrow: 1 }}\r\n            onChange={(page, pageSize: number) => {\r\n              setItemsPerPage(pageSize);\r\n              setPage(page);\r\n            }}\r\n          />\r\n          <div style={{ display: \"flex\", flexWrap: \"wrap\", marginTop: \"6px\" }}>\r\n            {blend.filteredList.map((word: string, index: number) => {\r\n              if (\r\n                index >= itemsPerPage * page &&\r\n                index <= itemsPerPage * (page + 1) - 1\r\n              ) {\r\n                return (\r\n                  <Tag\r\n                    style={{\r\n                      flexGrow: 1,\r\n                      marginTop: \"6px\",\r\n                      backgroundColor:\r\n                        word.length <= 5\r\n                          ? \"#e6f7ff\"\r\n                          : word.length <= 10\r\n                          ? \"#bae7ff\"\r\n                          : word.length <= 15\r\n                          ? \"#91d5ff\"\r\n                          : \"#69c0ff\",\r\n                    }}\r\n                  >\r\n                    {word}\r\n                  </Tag>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {blend.loading && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"48px\",\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Card, Divider, InputNumber, Select, Statistic, Switch } from \"antd\";\r\nimport { WordsTable } from \"./components/wordsTable\";\r\nimport { SwapOutlined } from \"@ant-design/icons\";\r\nimport { BlendContext } from \"../../../App\";\r\nimport { Language } from \"../../../types\";\r\nimport React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport const LanguageBlendContext = React.createContext<any>(null);\r\n\r\nconst LanguageBlendPage = () => {\r\n  const blend = React.useContext(BlendContext);\r\n\r\n  const handleFirstLanguageChange = (value: string) => {\r\n    blend.getFirstLanguage(value);\r\n  };\r\n\r\n  const handleSecondLanguageChange = (value: string) => {\r\n    blend.getSecondLanguage(value);\r\n  };\r\n\r\n  return (\r\n    <LanguageBlendContext.Provider value={blend}>\r\n      <div id=\"header-container\">\r\n        <Card id=\"inputs-card\">\r\n          <Select\r\n            onChange={handleFirstLanguageChange}\r\n            placeholder=\"select a language\"\r\n            style={{ width: \"160px\" }}\r\n            defaultValue={\"\"}\r\n          >\r\n            {blend.languages.map((language: Language) => {\r\n              return (\r\n                <Select.Option value={language.name} key={language._id}>\r\n                  {language.name}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n          <SwapOutlined style={{ marginLeft: \"10px\", marginRight: \"10px\" }} />\r\n\r\n          <Select\r\n            placeholder=\"select another language\"\r\n            onChange={handleSecondLanguageChange}\r\n            defaultValue={\"\"}\r\n            style={{ width: \"160px\" }}\r\n          >\r\n            {blend.languages\r\n              .sort((a: Language, b: Language) => {\r\n                if (a.name > b.name) return 1;\r\n                return -1;\r\n              })\r\n              .map((language: Language) => {\r\n                return (\r\n                  <Select.Option value={language.name} key={language._id}>\r\n                    {language.name}\r\n                  </Select.Option>\r\n                );\r\n              })}\r\n          </Select>\r\n        </Card>\r\n\r\n        <Card id=\"statistics-card\">\r\n          <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n            <Statistic\r\n              title=\"Common words\"\r\n              value={blend.filteredList.length}\r\n              style={{ marginRight: \"24px\" }}\r\n            />\r\n            <Statistic\r\n              title=\"Language match\"\r\n              suffix=\"%\"\r\n              value={\r\n                blend.filteredList.length > 0\r\n                  ? (\r\n                      (blend.filteredList.length * 100) /\r\n                      (blend.selectedLanguage1.length +\r\n                        blend.selectedLanguage2.length)\r\n                    ).toFixed(2)\r\n                  : 0\r\n              }\r\n              style={{ marginRight: \"24px\" }}\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {blend.blendedList.length > 0 && (\r\n          <Card id=\"controls-card\">\r\n            <div id=\"controls-content\">\r\n              <Switch\r\n                onChange={(value: boolean) => {\r\n                  blend.setTableView(value);\r\n                }}\r\n                style={{ margin: \"5px\" }}\r\n                checkedChildren=\"Table view\"\r\n                unCheckedChildren=\"Words view\"\r\n                checked={blend.tableView}\r\n              />\r\n              <Divider type=\"vertical\" />\r\n              <Switch\r\n                style={{ margin: \"5px\" }}\r\n                checkedChildren=\"Accent marks (a=ä)\"\r\n                unCheckedChildren=\"Accent marks (a≠ä)\"\r\n                defaultChecked\r\n              />\r\n              <Divider type=\"vertical\" />\r\n\r\n              <div style={{ margin: \"5px\" }}>\r\n                Minimum word length:{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={99}\r\n                  defaultValue={blend.minLength}\r\n                  onChange={(nr: number) => {\r\n                    blend.setMinLength(nr);\r\n                  }}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <div style={{ margin: \"5px\" }}>\r\n                Maximum word length:{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={99}\r\n                  defaultValue={blend.maxLength}\r\n                  onChange={(nr: number) => {\r\n                    blend.setMaxLength(nr);\r\n                  }}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <div style={{ margin: \"5px\" }}>\r\n                Same prefix length:{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={0}\r\n                  max={99}\r\n                  defaultValue={0}\r\n                  onChange={() => {}}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <div style={{ margin: \"5px\" }}>\r\n                Same suffix length:{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={0}\r\n                  max={99}\r\n                  defaultValue={0}\r\n                  onChange={() => {}}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <div style={{ margin: \"5px\" }}>\r\n                Word match (number of different letters) :{\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={0}\r\n                  max={99}\r\n                  defaultValue={0}\r\n                  onChange={() => {}}\r\n                  style={{ marginLeft: \"2px\", width: \"55px\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        )}\r\n      </div>\r\n      <WordsTable />\r\n    </LanguageBlendContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LanguageBlendPage;\r\n","import { CircularProgress } from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst LanguageList = () => {\r\n  const { language }: any = useParams();\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [wordList, setWordList] = useState<string[]>([]);\r\n\r\n  const getLanguage = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setWordList(response.data.data[0].list);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLanguage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading === true && <CircularProgress id=\"resource-spinner\" />}\r\n      <p style={{ whiteSpace: \"pre\" }}>{wordList.join(\"\\r\\n\")}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LanguageList;\r\n","import { Button, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nexport const MoreStatistics = () => {\r\n  return (\r\n    <div className=\"more-statistics-container\">\r\n      <Typography style={{ fontSize: \"3.58rem\", fontWeight: 100 }}>\r\n        STATISTICS:\r\n      </Typography>\r\n      <Button>\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <b>&larr; &nbsp;</b> back to blending\r\n        </Link>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import { LanguageContext } from \"../../../App\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\n\r\nimport \"./style.css\";\r\nimport { Divider } from \"antd\";\r\n\r\nconst Resources = () => {\r\n  const {\r\n    languageWordList,\r\n    english,\r\n    finnish,\r\n    french,\r\n    german,\r\n    hungarian,\r\n    italian,\r\n    polish,\r\n    romanian,\r\n    spanish,\r\n    turkish,\r\n  } = useContext(LanguageContext);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(en) {english}</div>\r\n        <Link to=\"/resources/english\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(fi) {finnish}</div>\r\n\r\n        <Link to=\"/resources/finnish\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(fr) {french}</div>\r\n        <Link to=\"/resources/french\">View list</Link>\r\n      </div>\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(de) {german}</div>\r\n\r\n        <Link to=\"/resources/german\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(hu) {hungarian}</div>\r\n\r\n        <Link to=\"/resources/hungarian\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(it) {italian}</div>\r\n\r\n        <Link to=\"/resources/italian\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(pl) {polish}</div>\r\n\r\n        <Link to=\"/resources/polish\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(ro) {romanian}</div>\r\n        <Link to=\"/resources/romanian\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(es) {spanish}</div>\r\n        <Link to=\"/resources/spanish\">View list</Link>\r\n      </div>\r\n\r\n      <Divider style={{ marginTop: \"8px\", marginBottom: \"2px\" }} />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div>(tr) {turkish}</div>\r\n\r\n        <Link to=\"/resources/turkish\">View list</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resources;\r\n","import { LanguageContext } from \"../../../App\";\r\nimport { useContext } from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst ChangeLog = () => {\r\n  const { update1, update2, update3, update4, update5, update6 } =\r\n    useContext(LanguageContext);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"changelog-container\">\r\n        <div id=\"changelog-sub-container\">\r\n          <Card title=\"V1.0.0 / -\" style={{ margin: \"12px\" }}></Card>\r\n          <Card title=\"V0.5.0 / 17.5.2022\" style={{ margin: \"12px\" }}>\r\n            {update6}\r\n          </Card>\r\n          <Card title=\"V0.0.5 / 26.4.2022\" style={{ margin: \"12px\" }}>\r\n            {update5}\r\n          </Card>\r\n          <Card title=\"V0.0.4 / 16.4.2022\" style={{ margin: \"12px\" }}>\r\n            {update4}\r\n          </Card>\r\n          <Card title=\"V0.3 / 29.12.2021\" style={{ margin: \"12px\" }}>\r\n            {update3}\r\n          </Card>\r\n          <Card title=\"V0.2 / 10.12.2021\" style={{ margin: \"12px\" }}>\r\n            {update2}\r\n          </Card>\r\n          <Card title=\"V0.1 / 1.12.2021\" style={{ margin: \"12px\" }}>\r\n            {update1}\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeLog;\r\n","import { useRef, useState } from \"react\";\r\n\r\nconst useTextScraper = () => {\r\n  const [text, setText] = useState<string>(\"\");\r\n  const [wordsArray, setWordsArray] = useState<string[]>([]);\r\n  const [UTF8Array, setUTF8Array] = useState<string[]>([]);\r\n  const [goodCharacters, setGoodCharacters] = useState<string[]>([]);\r\n  const [badCharacters, setBadCharacters] = useState<string[]>([]);\r\n  const textRef = useRef();\r\n\r\n  return {\r\n    text,\r\n    setText,\r\n    wordsArray,\r\n    setWordsArray,\r\n    UTF8Array,\r\n    setUTF8Array,\r\n    textRef,\r\n    goodCharacters,\r\n    setGoodCharacters,\r\n    badCharacters,\r\n    setBadCharacters,\r\n  };\r\n};\r\n\r\nexport default useTextScraper;\r\n","import { TextScraperContext } from \"..\";\r\nimport { useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\nconst TextInput = () => {\r\n  const { setText, textRef } = useContext(TextScraperContext);\r\n\r\n  const debounce = (func: any) => {\r\n    let timer: any;\r\n    return function (...args: any) {\r\n      if (timer) clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        timer = null;\r\n        func.apply(null, args);\r\n      }, 500);\r\n    };\r\n  };\r\n\r\n  const handleChange = (text: string) => {\r\n    setText(text);\r\n    console.log(\"acum se face set state\")\r\n  };\r\n\r\n  const optimizedFn = useCallback(debounce(handleChange), []);\r\n\r\n  return (\r\n    <textarea\r\n      rows={15}\r\n      cols={100}\r\n      name=\"description\"\r\n      placeholder=\"Extract the unique words from every text!\"\r\n      onChange={(e) => optimizedFn(e.target.value)}\r\n      ref={textRef}\r\n    ></textarea>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import ArrowDownwardOutlinedIcon from \"@mui/icons-material/ArrowDownwardOutlined\";\r\nimport useTextScraper from \"./components/useTextScraper\";\r\nimport TextInput from \"./components/TextInput\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Button, Paper } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport const TextScraperContext = React.createContext<any>(null);\r\n\r\nconst TextScraper = () => {\r\n  const textScraper = useTextScraper();\r\n  const [extraSeparators, setExtraSeparators] = useState([]);\r\n  const [initialNrOfWords, setInitialNrOfWords] = useState<number>(0);\r\n\r\n  const statisticsRef: any = useRef(null);\r\n  const executeScroll = () => statisticsRef.current.scrollIntoView();\r\n\r\n  const scrape = () => {\r\n    //split text into words\r\n    let arr = textScraper.text\r\n      .replace(/\\r/g, \" \")\r\n      .split(\r\n        /[ \u001b\u001a\u0019\u0018\u0017\u0015\u0014\u0013\u0012\u0011\u0010\u000f\u000e\f\b\u0006\u0003\u0002\u0005\u0001\u0004■+#’‘%$=^†…„♦¬«»•¹²1234567890“*”.·:;?!~,`\"&|()<>{}\\[\\]\\r\\n/\\\\]+/\r\n      );\r\n    //lowercase?\r\n    arr = arr.map((word: string) => word.toLowerCase());\r\n\r\n    setInitialNrOfWords(arr.length);\r\n\r\n    //remove duplicates\r\n    arr = Object.keys(\r\n      arr.reduce((reducer: any, word: any) => {\r\n        reducer[word] = true;\r\n        return reducer;\r\n      }, {})\r\n    );\r\n    //sorting?\r\n    arr.sort();\r\n\r\n    textScraper.setWordsArray(arr);\r\n    console.log(arr);\r\n  };\r\n\r\n  const clear = () => {\r\n    console.log(\"wa\", textScraper.textRef);\r\n    //@ts-ignore\r\n    textScraper.textRef.current.value = \"\";\r\n    textScraper.setText(\"\");\r\n    textScraper.setWordsArray([]);\r\n  };\r\n\r\n  const pieData = {\r\n    labels: [\r\n      `${initialNrOfWords} total words (100%)`,\r\n      `${textScraper.wordsArray.length} unique words (${(\r\n        (textScraper.wordsArray.length * 100) /\r\n        initialNrOfWords\r\n      ).toFixed(2)}%)`,\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [initialNrOfWords, textScraper.wordsArray.length],\r\n        backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\"],\r\n        borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <TextScraperContext.Provider value={textScraper}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          padding: \"20px 10px 50px 10px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Link\r\n            to=\"/tools\"\r\n            style={{ alignSelf: \"flex-start\", textDecoration: \"none\" }}\r\n          >\r\n            <Button\r\n              style={{\r\n                color: \"#00adb5\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              {\"< Go back\"}\r\n            </Button>\r\n          </Link>\r\n          <TextInput />\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ margin: \"10px 0 10px 0\", backgroundColor: \"grey\" }}\r\n              onClick={clear}\r\n            >\r\n              CLEAR\r\n            </Button>\r\n\r\n            {textScraper.wordsArray.length > 0 && (\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{\r\n                  margin: \"10px 0 10px 0\",\r\n                  backgroundColor: \"#FF2E63\",\r\n                }}\r\n                onClick={executeScroll}\r\n              >\r\n                VIEW STATISTICS <ArrowDownwardOutlinedIcon />\r\n              </Button>\r\n            )}\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ margin: \"10px 0 10px 0\", backgroundColor: \"#00adb5\" }}\r\n              onClick={scrape}\r\n            >\r\n              EXTRACT UNIQUE WORDS\r\n            </Button>\r\n          </div>\r\n          <textarea\r\n            rows={15}\r\n            cols={100}\r\n            name=\"description\"\r\n            placeholder=\"Unique words will appear here\"\r\n            value={textScraper.wordsArray.join(\"\\n\")}\r\n            readOnly\r\n          ></textarea>\r\n\r\n          {textScraper.wordsArray.length > 0 && (\r\n            <Paper\r\n              ref={statisticsRef}\r\n              style={{ width: \"100%\", marginTop: \"30px\", minHeight: \"100px\" }}\r\n            >\r\n              <div style={{ width: \"45%\", margin: \"20px\" }}>\r\n                {\" \"}\r\n                <Pie data={pieData} />\r\n              </div>\r\n            </Paper>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </TextScraperContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TextScraper;\r\n","const NotFound = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        color: \"#fff\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexGrow: 1,\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <span style={{ fontSize: \"6rem\", marginTop: \"100px\" }}>404</span>\r\n        <p style={{ marginTop: \"-15px\", marginBottom: \"30px\" }}>\r\n          Nothing to see here\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BlendContext } from \"../../../App\";\r\n\r\nconst MoreDetails = () => {\r\n  const blend = React.useContext(BlendContext);\r\n  const wordList = blend.blendedList;\r\n\r\n  const [minLength, setMinLength] = React.useState(1);\r\n  const [maxLength, setMaxLength] = React.useState(10);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <h1\r\n          style={{ fontFamily: \"consolas\", color: \"white\", marginTop: \"30px\" }}\r\n        >\r\n          <span\r\n            onClick={() => {\r\n              blend.setBlendedList([]);\r\n              blend.setSelectedLanguage2(\"\");\r\n              blend.setSelectedLanguage1(\"\");\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            BLEND LANGUAGES\r\n          </span>\r\n          {\">\"}{\" \"}\r\n          <Link\r\n            to=\"/language-blend\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            RESULTS\r\n          </Link>\r\n          {\">\"} <u>MORE DETAILS</u>\r\n        </h1>\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: \"10px\",\r\n          margin: \"30px 0 30px 0\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        {/*minimum word length*/}\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", margin: \"5px\" }}\r\n        >\r\n          <span style={{ color: \"white\", marginBottom: \"5px\" }}>\r\n            minimum word length\r\n          </span>\r\n          <TextField\r\n            placeholder=\"\"\r\n            type=\"number\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={minLength}\r\n            style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}\r\n            onChange={(e: any) => setMinLength(Number(e.target.value))}\r\n          />\r\n        </div>\r\n        {/*maximum word length*/}\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", margin: \"5px\" }}\r\n        >\r\n          <span style={{ color: \"white\", marginBottom: \"5px\" }}>\r\n            maximum word length\r\n          </span>\r\n          <TextField\r\n            placeholder=\"\"\r\n            type=\"number\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={maxLength}\r\n            style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}\r\n            onChange={(e: any) => setMaxLength(Number(e.target.value))}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\r\n        {wordList.map((el: any) =>\r\n          el.word &&\r\n          el.word.length >= minLength &&\r\n          el.word.length <= maxLength ? (\r\n            <div\r\n              style={{\r\n                margin: \"10px\",\r\n                padding: \"10px\",\r\n                borderRadius: \"20px\",\r\n                backgroundColor: \"rgba(255, 255, 255,0.1)\",\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              {el.word}\r\n            </div>\r\n          ) : null\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoreDetails;\r\n","import ArrowForwardIosRoundedIcon from \"@mui/icons-material/ArrowForwardIosRounded\";\r\nimport { BlendContext, LanguageContext } from \"../../../App\";\r\nimport { useRef } from \"react\";\r\nimport { Card, Statistic, Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst LandingPage = () => {\r\n  const myRef = useRef(null);\r\n  const blend = React.useContext(BlendContext);\r\n  const { startExploring, landingPageText } = React.useContext(LanguageContext);\r\n\r\n  React.useEffect(() => {\r\n    //clear blending history\r\n    blend.selectedLanguage1 = [];\r\n    blend.selectedLanguage2 = [];\r\n    blend.blendedList = [];\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"landing-page-container\">\r\n      <Card\r\n        style={{\r\n          margin: \"12px\",\r\n          flexGrow: 1,\r\n          maxWidth: \"40%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          height: \"100%\",\r\n          backgroundColor: \"#fafafa\",\r\n        }}\r\n      >\r\n        <div style={{ marginBottom: \"10px\" }}>{landingPageText}</div>\r\n        <Button type=\"primary\">\r\n          {startExploring}\r\n          <ArrowForwardIosRoundedIcon\r\n            style={{ fontSize: \"16px\", color: \"#EEEEEE\" }}\r\n          />\r\n        </Button>\r\n      </Card>\r\n      <Card style={{ margin: \"12px\", flexGrow: 1, backgroundColor: \"#f5f5f5\" }}>\r\n        <Statistic title=\"Languages\" value={10} />\r\n      </Card>\r\n      <Card style={{ margin: \"12px\", flexGrow: 1, backgroundColor: \"#f0f0f0\" }}>\r\n        wow\r\n      </Card>\r\n      <Card style={{ margin: \"12px\", flexGrow: 1, backgroundColor: \"#d9d9d9\" }}>\r\n        wow\r\n      </Card>\r\n\r\n      {/* <div id=\"left-section-container\">\r\n        <p\r\n          style={{\r\n            fontFamily: \"consolas\",\r\n            color: \"#222831\",\r\n            width: \"370px\",\r\n            marginBottom: \"30px\",\r\n          }}\r\n        >\r\n          \r\n        </p>\r\n        <Link\r\n          to=\"/language-blend\"\r\n          style={{ textDecoration: \"none\", color: \"#F84284\" }}\r\n        >\r\n          \r\n        </Link>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useLanguageBlend = () => {\r\n  const [selectedLanguage1, setSelectedLanguage1] = useState<any>([]);\r\n  const [selectedLanguage2, setSelectedLanguage2] = useState<any>([]);\r\n  const [lettersToIgnore, setLettersToIgnore] = useState<number>(0);\r\n  const [languageCode1, setLanguageCode1] = useState<string>(\"\");\r\n  const [languageCode2, setLanguageCode2] = useState<string>(\"\");\r\n  const [languages, setLanguages] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [blendedList, setBlendedList] = useState<any>([]);\r\n  const [alert, setAlert] = useState<string>(\"\");\r\n  const [tableView, setTableView] = useState<boolean>(true);\r\n\r\n  //filtered list\r\n  const [filteredList, setFilteredList] = useState<string[]>([]);\r\n\r\n  //controls\r\n  const [minLength, setMinLength] = useState<number>(0);\r\n  const [maxLength, setMaxLength] = useState<number>(99);\r\n\r\n  const getLanguages = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguages`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setLanguages(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getFirstLanguage = async (language: string) => {\r\n    setLoading(true);\r\n\r\n    //update language code for language1\r\n    switch (language) {\r\n      case \"english\":\r\n        setLanguageCode1(\"en\");\r\n        break;\r\n      case \"finnish\":\r\n        setLanguageCode1(\"fi\");\r\n        break;\r\n      case \"french\":\r\n        setLanguageCode1(\"fr\");\r\n        break;\r\n      case \"german\":\r\n        setLanguageCode1(\"de\");\r\n        break;\r\n      case \"hungarian\":\r\n        setLanguageCode1(\"hu\");\r\n        break;\r\n      case \"italian\":\r\n        setLanguageCode1(\"it\");\r\n        break;\r\n      case \"polish\":\r\n        setLanguageCode1(\"pl\");\r\n        break;\r\n      case \"romanian\":\r\n        setLanguageCode1(\"ro\");\r\n        break;\r\n      case \"spanish\":\r\n        setLanguageCode1(\"es\");\r\n        break;\r\n      case \"turkish\":\r\n        setLanguageCode1(\"tr\");\r\n        break;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSelectedLanguage1(response.data.data[0].list);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getSecondLanguage = async (language: string) => {\r\n    setLoading(true);\r\n\r\n    //update language code for language2\r\n    switch (language) {\r\n      case \"english\":\r\n        setLanguageCode2(\"en\");\r\n        break;\r\n      case \"finnish\":\r\n        setLanguageCode2(\"fi\");\r\n        break;\r\n      case \"french\":\r\n        setLanguageCode2(\"fr\");\r\n        break;\r\n      case \"german\":\r\n        setLanguageCode2(\"de\");\r\n        break;\r\n      case \"hungarian\":\r\n        setLanguageCode2(\"hu\");\r\n        break;\r\n      case \"italian\":\r\n        setLanguageCode2(\"it\");\r\n        break;\r\n      case \"polish\":\r\n        setLanguageCode2(\"pl\");\r\n        break;\r\n      case \"romanian\":\r\n        setLanguageCode2(\"ro\");\r\n        break;\r\n      case \"spanish\":\r\n        setLanguageCode2(\"es\");\r\n        break;\r\n      case \"turkish\":\r\n        setLanguageCode2(\"tr\");\r\n        break;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSelectedLanguage2(response.data.data[0].list);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLanguages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage1.length > 0 && selectedLanguage2.length > 0) {\r\n      var count = [...selectedLanguage1, ...selectedLanguage2].reduce(\r\n        (o, v) => {\r\n          o[v] = o[v] + 1 || 1;\r\n          return o;\r\n        },\r\n        {}\r\n      );\r\n\r\n      var duplicate = Object.keys(count)\r\n        .filter((k) => count[k] > 1)\r\n        .map(String);\r\n\r\n      setBlendedList(duplicate);\r\n    }\r\n\r\n    //set language codes\r\n  }, [selectedLanguage1, selectedLanguage2]);\r\n\r\n  return {\r\n    selectedLanguage1,\r\n    setSelectedLanguage1,\r\n\r\n    selectedLanguage2,\r\n    setSelectedLanguage2,\r\n\r\n    loading,\r\n    setLoading,\r\n\r\n    blendedList,\r\n    setBlendedList,\r\n\r\n    languages,\r\n    setLanguages,\r\n\r\n    alert,\r\n    setAlert,\r\n\r\n    getFirstLanguage,\r\n    getSecondLanguage,\r\n\r\n    languageCode1,\r\n    setLanguageCode1,\r\n    languageCode2,\r\n    setLanguageCode2,\r\n\r\n    lettersToIgnore,\r\n    setLettersToIgnore,\r\n\r\n    tableView,\r\n    setTableView,\r\n\r\n    minLength,\r\n    setMinLength,\r\n\r\n    maxLength,\r\n    setMaxLength,\r\n\r\n    filteredList,\r\n    setFilteredList,\r\n  };\r\n};\r\n\r\nexport default useLanguageBlend;\r\n","import CompareArrowsIcon from \"@mui/icons-material/CompareArrows\";\r\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\r\nimport ConstructionIcon from \"@mui/icons-material/Construction\";\r\nimport ContactMailIcon from \"@mui/icons-material/ContactMail\";\r\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\r\nimport StorageIcon from \"@mui/icons-material/Storage\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport ApiIcon from \"@mui/icons-material/Api\";\r\nimport { SwapOutlined } from \"@ant-design/icons\";\r\nimport \"./style.css\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { useContext } from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nexport const About = () => {\r\n  const {\r\n    findTheCommonWordsOfLanguages,\r\n    appBuiltUsingMERN,\r\n    developerAndCommunity,\r\n    getInvolved,\r\n    contribuitors,\r\n  } = useContext(LanguageContext);\r\n\r\n  return (\r\n    <div id=\"about-page-container\">\r\n      <Card id=\"project-description-container\">\r\n        <h1>{findTheCommonWordsOfLanguages}</h1>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            color: \"grey\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              color: \"grey\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              border: \"1px solid lightgrey\",\r\n              padding: \"8px\",\r\n            }}\r\n          >\r\n            <span style={{ color: \"#2f54eb\", fontWeight: \"bolder\" }}>ABC</span>{\" \"}\r\n            PVBF AUX{\" \"}\r\n            <span style={{ color: \"#2f54eb\", fontWeight: \"bolder\" }}>DEF</span>{\" \"}\r\n            IQYE\r\n          </div>\r\n\r\n          <SwapOutlined\r\n            style={{ fontSize: \"2rem\", margin: \"0px 10px 0px 10px\" }}\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              color: \"grey\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              border: \"1px solid lightgrey\",\r\n              padding: \"8px\",\r\n            }}\r\n          >\r\n            OQUE{\" \"}\r\n            <span style={{ color: \"#2f54eb\", fontWeight: \"bolder\" }}>ABC</span>{\" \"}\r\n            KIYW JSU{\" \"}\r\n            <span style={{ color: \"#2f54eb\", fontWeight: \"bolder\" }}>DEF</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <ArrowDownwardIcon style={{ fontSize: \"2rem\", color: \"grey\" }} />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              color: \"#2f54eb\",\r\n              marginLeft: \"7px\",\r\n              fontWeight: \"bolder\",\r\n              border: \"1px solid lightgrey\",\r\n              padding: \"8px\",\r\n            }}\r\n          >\r\n            <span>ABC</span>\r\n            <span>DEF</span>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n      {/*App made using mern stack*/}\r\n\r\n      <Card id=\"mern-container\">\r\n        <h1>{appBuiltUsingMERN}</h1>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://www.mongodb.com/\" style={{ color: \"#2f54eb\" }}>\r\n              mongoDB\r\n            </a>\r\n            <StorageIcon style={{ fontSize: \"3rem\", color: \"grey\" }} />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://nodejs.dev/\" style={{ color: \"#2f54eb\" }}>\r\n              Node\r\n            </a>\r\n            <ApiIcon style={{ fontSize: \"3rem\", color: \"grey\" }} />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://expressjs.com/\" style={{ color: \"#2f54eb\" }}>\r\n              Express\r\n            </a>\r\n            <ConstructionIcon style={{ fontSize: \"3rem\", color: \"grey\" }} />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://reactjs.org/\" style={{ color: \"#2f54eb\" }}>\r\n              React\r\n            </a>\r\n            <DashboardIcon style={{ fontSize: \"3rem\", color: \"grey\" }} />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      <Card id=\"developer-and-community-container\">\r\n        <h1>{developerAndCommunity}</h1>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <ContactMailIcon\r\n            style={{ fontSize: \"1.5rem\", color: \"grey\", marginRight: \"10px\" }}\r\n          />\r\n          <div style={{ color: \"#2f54eb\" }}>chita.catalin.adrian@gmail.com</div>\r\n        </div>\r\n\r\n        <h2 style={{ fontWeight: 100 }}>{getInvolved}</h2>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <GitHubIcon\r\n            style={{ fontSize: \"1.5rem\", color: \"grey\", marginRight: \"10px\" }}\r\n          />\r\n          <div style={{ color: \"#2f54eb\" }}>\r\n            github.com/chita-catalin/common-words{\" \"}\r\n          </div>\r\n        </div>\r\n\r\n        <h2 style={{ fontWeight: 100 }}>{contribuitors}</h2>\r\n        <a href=\"https://github.com/chita-catalin\" style={{ color: \"#2f54eb\" }}>\r\n          chita-catalin\r\n        </a>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import ArrowForwardIosRoundedIcon from \"@mui/icons-material/ArrowForwardIosRounded\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Tools = () => {\r\n  return (\r\n    <div id=\"tools-container\">\r\n      <Link to=\"/tools/text-scraper\" style={{ textDecoration: \"none\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{ fontSize: \"16px\", backgroundColor: \"#393E46\" }}\r\n        >\r\n          TEXT SCRAPER\r\n          <ArrowForwardIosRoundedIcon\r\n            style={{ fontSize: \"18px\", marginLeft: \"2px\" }}\r\n          />\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tools;\r\n","import LanguageBlendPage from \"./components/pages/LanguageBlendPage/index\";\nimport LanguageList from \"./components/pages/Resources/LanguageList\";\nimport { MoreStatistics } from \"./components/pages/MoreStatistics\";\nimport Resources from \"./components/pages/Resources/Resources\";\nimport ChangeLog from \"./components/pages/changelog/ChangeLog\";\nimport TextScraper from \"./components/pages/Tools/TextScraper\";\nimport { Route, Routes, HashRouter, Link } from \"react-router-dom\";\nimport NotFound from \"./components/pages/NotFound/NotFound\";\nimport MoreDetails from \"./components/pages/MoreDetails\";\nimport LandingPage from \"./components/pages/LandingPage\";\nimport useLanguageBlend from \"./useLanguageBlend\";\nimport { About } from \"./components/pages/about\";\nimport Tools from \"./components/pages/Tools\";\nimport { useLanguage } from \"./useLanguage\";\nimport {\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  ToolOutlined,\n  HistoryOutlined,\n  HomeOutlined,\n  SwapOutlined,\n  DatabaseOutlined,\n  InfoCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Layout, Menu, Select } from \"antd\";\nimport React, { useState } from \"react\";\n\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\n//env\nimport \"dotenv/config\";\n\nexport const LanguageContext = React.createContext<any>(null);\nexport const BlendContext = React.createContext<any>(null);\n\nconst { Header, Sider, Content } = Layout;\n\nfunction App() {\n  const blend = useLanguageBlend();\n  const language = useLanguage();\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  return (\n    <LanguageContext.Provider value={language}>\n      <BlendContext.Provider value={blend}>\n        <HashRouter>\n          <Layout>\n            <Sider trigger={null} collapsible collapsed={collapsed}>\n              <Menu\n                style={{\n                  paddingTop: \"60px\",\n                  minHeight: \"100vh\",\n                  height: \"100%\",\n                }}\n                theme=\"light\"\n                mode=\"inline\"\n                defaultSelectedKeys={[\"0\"]}\n              >\n                <Menu.Item key=\"0\">\n                  <Link to=\"/\">\n                    <HomeOutlined />\n                    <span>Explore</span>\n                  </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"1\">\n                  <Link to=\"/language-blend\">\n                    <SwapOutlined /> <span>Compare languages</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                  <Link to=\"/tools\">\n                    <ToolOutlined /> <span>{language.tools}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\">\n                  <Link to=\"/resources\">\n                    <DatabaseOutlined /> <span>{language.resources}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"4\">\n                  <Link to=\"/about\">\n                    <InfoCircleOutlined /> <span>{language.about}</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"5\">\n                  <Link to=\"/changelog\">\n                    <HistoryOutlined /> <span>{language.changelog}</span>\n                  </Link>\n                </Menu.Item>\n              </Menu>\n            </Sider>\n            <Layout className=\"site-layout\">\n              <Header\n                className=\"site-layout-background\"\n                style={{\n                  padding: 0,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                {collapsed ? (\n                  <MenuUnfoldOutlined\n                    className=\"trigger\"\n                    onClick={() => setCollapsed(!collapsed)}\n                  />\n                ) : (\n                  <MenuFoldOutlined\n                    className=\"trigger\"\n                    onClick={() => setCollapsed(!collapsed)}\n                  />\n                )}\n\n                <div id=\"title\">\n                  <Link\n                    to=\"/\"\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"black\",\n                    }}\n                  >\n                    {language.commonWords}\n                  </Link>\n                  <span style={{ fontSize: \"15px\", marginLeft: \"2px\" }}>\n                    V1.0.0\n                  </span>\n                </div>\n\n                <Select\n                  style={{ marginRight: \"24px\" }}\n                  defaultValue=\"english\"\n                  bordered={false}\n                  onChange={(lng: string) => language.setLanguage(lng)}\n                >\n                  <Select.Option value=\"english\">\n                    {language.english}\n                  </Select.Option>\n                  <Select.Option value=\"romanian\">\n                    {language.romanian}\n                  </Select.Option>\n                </Select>\n              </Header>\n              <Content\n                className=\"site-layout-background\"\n                style={{\n                  margin: \"24px 16px\",\n                  padding: 12,\n                  minHeight: 280,\n                }}\n              >\n                <Routes>\n                  <Route\n                    path=\"/language-blend\"\n                    element={<LanguageBlendPage />}\n                  />\n                  <Route path=\"/resources\" element={<Resources />} />\n                  <Route\n                    path=\"/resources/:language\"\n                    element={<LanguageList />}\n                  />\n                  <Route path=\"/changelog\" element={<ChangeLog />} />\n                  <Route path=\"/more-statistics\" element={<MoreStatistics />} />\n                  <Route path=\"/more-details\" element={<MoreDetails />} />\n                  <Route path=\"/about\" element={<About />} />\n                  <Route path=\"/\" element={<LandingPage />} />\n                  <Route path=\"*\" element={<NotFound />} />\n                  <Route path=\"/tools\" element={<Tools />} />\n                  <Route path=\"/tools/text-scraper\" element={<TextScraper />} />\n                </Routes>\n              </Content>\n            </Layout>\n          </Layout>\n        </HashRouter>\n      </BlendContext.Provider>\n    </LanguageContext.Provider>\n  );\n}\n\nexport default App;\n\n/*\n\n <Link to=\"/tools\" className=\"first-small-nav\">\n            <u>{tools}</u>\n          </Link>\n          <Link to=\"/resources\" className=\"small-nav\">\n            <u>{resources}</u>\n          </Link>\n          <Link to=\"/about\" className=\"small-nav\">\n            <u>{about}</u>\n          </Link>\n          <Link to=\"/changelog\" className=\"small-nav\">\n            <u>{changelog}</u>\n          </Link>\n\nexport default App;*/\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useLanguage = () => {\r\n  const [language, setLanguage] = useState(\"english\");\r\n\r\n  const [commonWords, setCommonWords] = useState<string>(\"COMMON WORDS\");\r\n  const [resources, setResources] = useState(\"resources\");\r\n  const [about, setAbout] = useState(\"about\");\r\n  const [changelog, setChangelog] = useState(\"changelog\");\r\n  const [startExploring, setStartExploring] = useState(\"START EXPLORING\");\r\n  const [landingPageText, setLandingPageText] = useState(\r\n    \"Compare your language with another! Find the common words, and more fun statistics about languages, completely free!\"\r\n  );\r\n\r\n  const [tools, setTools] = useState(\"tools\");\r\n  //blend page\r\n  const [selectTwoLanguages, setSelectTwoLanguages] = useState(\r\n    \"Select two languages!\"\r\n  );\r\n  const [wordsPerPage, setWordsPerPage] = useState(\"Words per page\");\r\n  const [words, setWords] = useState(\"Words\");\r\n  const [minWordLength, setMinWordLength] = useState(\"Min. word length\");\r\n  const [maxWordLength, setMaxWordLength] = useState(\"Max. word length\");\r\n  const [wordMatch, setWordMatch] = useState(\"Word match (different letters)\");\r\n  //about page\r\n  const [findTheCommonWordsOfLanguages, setFindTheCommonWordsOfLanguages] =\r\n    useState(\"FIND THE COMMON WORDS OF LANGUAGES\");\r\n  const [developerAndCommunity, setDeveloperAndCommunity] = useState(\r\n    \"DEVELOPER & COMMUNITY\"\r\n  );\r\n  const [getInvolved, setGetInvolved] = useState(\"GET INVOLVED!\");\r\n  const [contribuitors, setContribuitors] = useState(\"CONTRIBUTORS:\");\r\n  const [appBuiltUsingMERN, setAppBuiltUsingMERN] = useState(\r\n    \"THIS WEB APP WAS BUILT USING THE MERN STACK\"\r\n  );\r\n  //resources\r\n  const [languageWordList, setLanguageWordList] = useState(\r\n    \"Language word lists (all words)\"\r\n  );\r\n  //languages\r\n  const [english, setEnglish] = useState(\"English\");\r\n  const [finnish, setFinnish] = useState(\"Finnish\");\r\n  const [french, setFrench] = useState(\"French\");\r\n  const [german, setGerman] = useState(\"German\");\r\n  const [hungarian, setHungarian] = useState(\"Hungarian\");\r\n  const [italian, setItalian] = useState(\"Italian\");\r\n  const [polish, setPolish] = useState(\"Polish\");\r\n  const [romanian, setRomanian] = useState(\"Romanian\");\r\n  const [spanish, setSpanish] = useState(\"Spanish\");\r\n  const [turkish, setTurkish] = useState(\"Turkish\");\r\n  //ChangeLog\r\n  const [update1, setUpdate1] = useState(\"Project created\");\r\n  const [update2, setUpdate2] = useState(\"Added basic language blending\");\r\n  const [update3, setUpdate3] = useState(\r\n    `Added Italian,French,Finnish languages\\nEnhanced results page.\\nadded ${\"changelog\"} section.\\nadded country flags.\\nadded dark/light theme switch`\r\n  );\r\n  const [update4, setUpdate4] = useState(\r\n    `Removed language lists from frontend side\\nAdded about section\\nRemoved light/dark theme switch\\nEnhanced landing page UI\\nUpdated versioning system to match web standards`\r\n  );\r\n  const [update5, setUpdate5] = useState(\r\n    `Connected to Backend App\\nNow retreiving languages list from database\\nAdded not-yet-functional table to \"blend-page\"\\nadded Romanian word list to \"Resources\" page`\r\n  );\r\n  const [update6, setUpdate6] = useState(\r\n    \"Added language switch RO/EN\\nAdded more languages\\nAdded language comparing functionality\\nAdded tools section, with unique word extraction tool\\nAdded languages list from database to resources page\\nImproved general UI\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (language) {\r\n      case \"english\":\r\n        setCommonWords(\"COMMON WORDS\");\r\n        setResources(\"resources\");\r\n        setAbout(\"about\");\r\n        setChangelog(\"changelog\");\r\n        setStartExploring(\"START EXPLORING\");\r\n        setLandingPageText(\r\n          \"Compare your language with another! Find the common words, and more fun statistics about languages, completely free!\"\r\n        );\r\n        setTools(\"tools\");\r\n        //blend page\r\n        setSelectTwoLanguages(\"Select two languages!\");\r\n        setWordsPerPage(\"Words per page\");\r\n        setWords(\"Words\");\r\n        setMinWordLength(\"Min. word length\");\r\n        setMaxWordLength(\"Max. word length\");\r\n        setWordMatch(\"Word Match (different letters)\");\r\n        //about page\r\n        setFindTheCommonWordsOfLanguages(\"FIND THE COMMON WORDS OF LANGUAGES\");\r\n        setDeveloperAndCommunity(\"DEVELOPER & COMMUNITY\");\r\n        setGetInvolved(\"GET INVOLVED!\");\r\n        setContribuitors(\"CONTRIBUITORS:\");\r\n        setAppBuiltUsingMERN(\"THIS WEB APP WAS BUILT USING THE MERN STACK\");\r\n        //resources\r\n        setLanguageWordList(\"Language word lists (all words)\");\r\n        //languages\r\n        setEnglish(\"English\");\r\n        setFinnish(\"Finnish\");\r\n        setFrench(\"French\");\r\n        setGerman(\"German\");\r\n        setHungarian(\"Hungarian\");\r\n        setItalian(\"Italian\");\r\n        setPolish(\"Polish\");\r\n        setRomanian(\"Romanian\");\r\n        setSpanish(\"Spanish\");\r\n        setTurkish(\"Turkish\");\r\n        //ChangeLog\r\n        setUpdate1(\"Project created\");\r\n        setUpdate2(\"Added basic language blending\");\r\n        setUpdate3(\r\n          `Added Italian,French,Finnish languages\\nEnhanced results page.\\nadded ${\"changelog\"} section.\\nadded country flags.\\nadded dark/light theme switch`\r\n        );\r\n        setUpdate4(\r\n          `Removed language lists from frontend side\\nAdded about section\\nRemoved light/dark theme switch\\nEnhanced landing page UI\\nUpdated versioning system to match web standards`\r\n        );\r\n        setUpdate5(\r\n          `Connected to Backend App\\nNow retreiving languages list from database\\nAdded not-yet-functional table to \"blend-page\"\\nadded Romanian word list to \"Resources\" page`\r\n        );\r\n        setUpdate6(\r\n          \"Added language switch RO/EN\\nAdded more languages\\nAdded language comparing functionality\\nAdded tools section, with unique word extraction tool\\nAdded languages list from database to resources page\\nImproved general UI\"\r\n        );\r\n\r\n        break;\r\n\r\n      case \"romanian\":\r\n        setCommonWords(\"CUVINTE COMUNE\");\r\n        setResources(\"resurse\");\r\n        setAbout(\"despre\");\r\n        setChangelog(\"istoric schimbari\");\r\n        setStartExploring(\"EXPLOREAZĂ\");\r\n        setLandingPageText(\r\n          \"Compară limba ta cu altă limbă! Găsește cuvintele comune, și alte statistici interesante despre limbi, complet gratuit!\"\r\n        );\r\n        setTools(\"unelte\");\r\n        //blend page\r\n        setSelectTwoLanguages(\"Selectează două limbi diferite!\");\r\n        setWordsPerPage(\"Cuvinte pe pagină\");\r\n        setWords(\"Cuvinte\");\r\n        setMinWordLength(\"Lungime minimă\");\r\n        setMaxWordLength(\"Lungime maximă\");\r\n        setWordMatch(\"Potrivire cuvinte (litere diferite)\");\r\n        //about page\r\n        setFindTheCommonWordsOfLanguages(\r\n          \"GĂSEȘTE CUVINTELE COMUNE ALE LIMBILOR\"\r\n        );\r\n        setDeveloperAndCommunity(\"DEZVOLTATOR & COMUNITATE\");\r\n        setGetInvolved(\"IMPLICĂ-TE!\");\r\n        setContribuitors(\"CONTRIBUITORI:\");\r\n        setAppBuiltUsingMERN(\r\n          \"ACEASTĂ APLICAȚIE WEB A FOST DEZVOLTATĂ FOLOSIND STACK-UL MERN\"\r\n        );\r\n        //resources\r\n        setLanguageWordList(\r\n          \"Listele de cuvinte ale limbilor (toate cuvintele)\"\r\n        );\r\n        //languages\r\n        setEnglish(\"Engleză\");\r\n        setFinnish(\"Finlandeză\");\r\n        setFrench(\"Franceză\");\r\n        setGerman(\"Germană\");\r\n        setHungarian(\"Maghiară\");\r\n        setItalian(\"Italiană\");\r\n        setPolish(\"Poloneză\");\r\n        setRomanian(\"Română\");\r\n        setSpanish(\"Spaniolă\");\r\n        setTurkish(\"Turcă\");\r\n        //changelog\r\n        setUpdate1(\"Început proiect\");\r\n        setUpdate2(\"Adăugat algoritm de combinare a limbilor\");\r\n        setUpdate3(\r\n          `Adăugat Italiană, Franceză, Finlandeză\\nÎmbunătățit pagina de rezultate\\nAdăugat secțiune de \"istoric schimbări\"\\nAdăugat steaguri pentru țări\\nAdăugat buton pentru temă light/dark`\r\n        );\r\n        setUpdate4(\r\n          `Înlăturat listele de cuvinte din Frontend\\nAdăugat secțiunea \"despre\"\\nÎnlăturat butonul pentru temă light/dark\\nÎmbunătățit UI-ul paginii de pornire\\nUpdatat sistemul de versionare cu standardul web`\r\n        );\r\n        setUpdate5(\r\n          `Conectat aplicația web la Backend\\nListele de limbi acum sunt preluate dintr-o bază de date\\nAdăugat tabel de cuvinte, încă nefuncțional\\nAdăugat lista cuvintelor din limba română la pagina de resurse `\r\n        );\r\n        setUpdate6(\r\n          `Adăugat funcția de schimbare de limbă\\nAdăugat mai multe limbi\\nAdăugat funcția de comparare a limbilor\\nAdăugat secțiunea de unelte\\nAdăugat unealta de extragere a cuvintelor unice\\nAdăugat liste de limbi la pagina de resurse\\nÎmbunătățit UI general`\r\n        );\r\n\r\n        break;\r\n    }\r\n  }, [language]);\r\n\r\n  return {\r\n    language,\r\n    setLanguage,\r\n    commonWords,\r\n    resources,\r\n    about,\r\n    changelog,\r\n    startExploring,\r\n    landingPageText,\r\n    tools,\r\n    //blend page\r\n    selectTwoLanguages,\r\n    wordsPerPage,\r\n    words,\r\n    minWordLength,\r\n    maxWordLength,\r\n    //about page\r\n    findTheCommonWordsOfLanguages,\r\n    developerAndCommunity,\r\n    getInvolved,\r\n    contribuitors,\r\n    appBuiltUsingMERN,\r\n    wordMatch,\r\n    //resources\r\n    languageWordList,\r\n    //languages\r\n    english,\r\n    finnish,\r\n    french,\r\n    german,\r\n    hungarian,\r\n    italian,\r\n    polish,\r\n    romanian,\r\n    spanish,\r\n    turkish,\r\n    //ChangeLog\r\n    update1,\r\n    update2,\r\n    update3,\r\n    update4,\r\n    update5,\r\n    update6,\r\n  };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}