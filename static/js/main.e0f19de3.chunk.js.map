{"version":3,"sources":["components/pages/LanguageBlendPage/components/tableHeader.tsx","components/pages/LanguageBlendPage/reading-side.png","components/pages/LanguageBlendPage/components/wordsTable.tsx","components/Layout/NavBar/NavBar.tsx","components/pages/LanguageBlendPage/index.tsx","components/pages/Resources/LanguageList.tsx","components/pages/MoreStatistics/index.tsx","components/pages/Resources/Resources.tsx","components/pages/changelog/ChangeLog.tsx","components/pages/Tools/TextScraper/components/useTextScraper.tsx","components/pages/Tools/TextScraper/components/TextInput.tsx","components/pages/Tools/TextScraper/index.tsx","components/pages/NotFound/NotFound.tsx","components/pages/MoreDetails/index.tsx","components/pages/LandingPage/index.tsx","useLanguageBlend.ts","components/pages/about/index.tsx","components/pages/Tools/index.tsx","App.tsx","useLanguage.tsx","index.tsx"],"names":["TableHeader","blend","useContext","LanguageBlendContext","id","languages","length","style","flexGrow","Select","onChange","e","getFirstLanguage","target","value","width","placeholder","defaultValue","map","language","MenuItem","name","_id","fontSize","color","getSecondLanguage","sort","a","b","WordsTable","BlendContext","LanguageContext","selectTwoLanguages","wordsPerPage","words","minWordLength","maxWordLength","useState","page","setPage","itemsPerPage","setItemsPerPage","minLength","setMinLength","maxLength","setMaxLength","localFilteredList","setLocalFilteredList","useEffect","blendedList","filter","word","navigate","dataset","testid","parseInt","outerText","loading","src","ReadingImg","marginTop","display","justifyContent","CircularProgress","TextField","label","type","InputLabelProps","shrink","Pagination","count","Math","ceil","shape","Paper","selectedLanguage1","selectedLanguage2","className","index","backgroundColor","href","languageCode1","languageCode2","margin","NavBar","setLanguage","commonWords","resources","about","changelog","tools","alignItems","to","textDecoration","fontFamily","marginLeft","marginRight","height","renderValue","selected","marginBottom","displayEmpty","inputProps","React","createContext","LanguageBlendPage","Provider","LanguageList","useParams","setLoading","wordList","setWordList","getLanguage","axios","get","process","response","status","data","list","console","log","whiteSpace","join","MoreStatistics","Typography","fontWeight","Button","Resources","languageWordList","english","finnish","french","german","hungarian","italian","polish","romanian","spanish","turkish","ChangeLog","update1","update2","update3","update4","update5","update6","Chip","useTextScraper","text","setText","wordsArray","setWordsArray","UTF8Array","setUTF8Array","goodCharacters","setGoodCharacters","badCharacters","setBadCharacters","textRef","useRef","TextInput","TextScraperContext","optimizedFn","useCallback","func","timer","args","clearTimeout","setTimeout","apply","debounce","rows","cols","ref","TextScraper","textScraper","arr","goodArr","i","push","String","fromCharCode","flexDirection","padding","alignSelf","variant","onClick","current","replace","split","toLowerCase","Object","keys","reduce","reducer","readOnly","NotFound","MoreDetails","setBlendedList","setSelectedLanguage2","setSelectedLanguage1","cursor","borderRadius","Number","flexWrap","el","LandingPage","vantaEffect","setVantaEffect","myRef","startExploring","landingPageText","GLOBE","color2","destroy","position","right","bottom","useLanguageBlend","setLanguageCode1","setLanguageCode2","setLanguages","alert","setAlert","getLanguages","o","v","duplicate","k","About","findTheCommonWordsOfLanguages","appBuiltUsingMERN","developerAndCommunity","getInvolved","contribuitors","Tools","elevation","App","setCommonWords","setResources","setAbout","setChangelog","setStartExploring","setLandingPageText","setSelectTwoLanguages","setWordsPerPage","setWords","setMinWordLength","setMaxWordLength","setTools","setFindTheCommonWordsOfLanguages","setDeveloperAndCommunity","setGetInvolved","setContribuitors","setAppBuiltUsingMERN","setLanguageWordList","setEnglish","setFinnish","setFrench","setGerman","setHungarian","setItalian","setPolish","setRomanian","setSpanish","setTurkish","setUpdate1","setUpdate2","setUpdate3","setUpdate4","setUpdate5","setUpdate6","useLanguage","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0f19de3.chunk.js","sourcesContent":["import CompareArrowsIcon from \"@mui/icons-material/CompareArrows\";\r\nimport { MenuItem, Select } from \"@mui/material\";\r\nimport { Language } from \"../../../../types\";\r\nimport { LanguageBlendContext } from \"..\";\r\nimport { useContext } from \"react\";\r\n\r\nimport \"../style.css\";\r\n\r\nexport const TableHeader = () => {\r\n  const blend = useContext(LanguageBlendContext);\r\n\r\n  const handleFirstLanguageChange = (e: any) => {\r\n    blend.getFirstLanguage(e.target.value);\r\n  };\r\n\r\n  const handleSecondLanguageChange = (e: any) => {\r\n    blend.getSecondLanguage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div id=\"table-header-container\">\r\n      {blend.languages.length > 0 && (\r\n        <div id=\"table-header-inputs-container\">\r\n          <div id=\"first-input\" style={{ flexGrow: 1 }}>\r\n            <Select\r\n              onChange={handleFirstLanguageChange}\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"select a language\"\r\n              defaultValue={\"\"}\r\n            >\r\n              {blend.languages.map((language: Language) => {\r\n                return (\r\n                  <MenuItem value={language.name} key={language._id}>\r\n                    {language.name}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </div>\r\n\r\n          <CompareArrowsIcon style={{ fontSize: \"3rem\", color: \"grey\" }} />\r\n\r\n          <div id=\"second-input\" style={{ flexGrow: 1 }}>\r\n            <Select\r\n              placeholder=\"select another language\"\r\n              onChange={handleSecondLanguageChange}\r\n              style={{ width: \"100%\" }}\r\n              defaultValue={\"\"}\r\n            >\r\n              {blend.languages\r\n                .sort((a: Language, b: Language) => {\r\n                  if (a.name > b.name) return 1;\r\n                  return -1;\r\n                })\r\n                .map((language: Language) => {\r\n                  return (\r\n                    <MenuItem value={language.name} key={language._id}>\r\n                      {language.name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/reading-side.c87e5c06.png\";","import { BlendContext, LanguageContext } from \"../../../../App\";\r\nimport { CircularProgress, TextField } from \"@mui/material\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport ReadingImg from \"../reading-side.png\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nimport \"../style.css\";\r\n\r\nexport const WordsTable = () => {\r\n  const blend = useContext(BlendContext);\r\n\r\n  const {\r\n    selectTwoLanguages,\r\n    wordsPerPage,\r\n    words,\r\n    minWordLength,\r\n    maxWordLength,\r\n  } = useContext(LanguageContext);\r\n\r\n  const [page, setPage] = useState<number>(0);\r\n  const [itemsPerPage, setItemsPerPage] = useState<number>(25);\r\n  const [minLength, setMinLength] = useState<number>(4);\r\n  const [maxLength, setMaxLength] = useState<number>(15);\r\n  const [localFilteredList, setLocalFilteredList] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    setLocalFilteredList(\r\n      blend.blendedList.filter((word: string) => {\r\n        if (word.length >= minLength && word.length <= maxLength) return true;\r\n        else return false;\r\n      })\r\n    );\r\n  }, [minLength, maxLength, blend.blendedList]);\r\n\r\n  const navigate = (e: any) => {\r\n    if (e.target.dataset.testid === \"NavigateNextIcon\") {\r\n      setPage(page + 1);\r\n      return;\r\n    }\r\n    if (e.target.dataset.testid === \"NavigateBeforeIcon\") {\r\n      setPage(page - 1);\r\n      return;\r\n    }\r\n    setPage(parseInt(e.target.outerText) - 1);\r\n  };\r\n  return (\r\n    <>\r\n      {blend.blendedList.length === 0 && !blend.loading && (\r\n        <div id=\"placeholder-image-container\">\r\n          <img src={ReadingImg} style={{ width: \"25%\", marginTop: \"30px \" }} />\r\n          <div style={{ fontSize: \"30px\", color: \"#bfbfbf\" }}>\r\n            {selectTwoLanguages}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {blend.loading && (\r\n        <div style={{ display: \"flex\", flexGrow: 1, justifyContent: \"center\" }}>\r\n          <CircularProgress\r\n            style={{ fontSize: \"60px\", color: \"#00ADB5\", marginTop: \"40px\" }}\r\n          />\r\n        </div>\r\n      )}\r\n      {blend.blendedList.length > 0 && !blend.loading && (\r\n        <>\r\n          <div id=\"settings-container\">\r\n            <TextField\r\n              id=\"outlined-number\"\r\n              label={wordsPerPage}\r\n              type=\"number\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              value={itemsPerPage}\r\n              onChange={(e) => {\r\n                setItemsPerPage(parseInt(e.target.value));\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              id=\"outlined-number\"\r\n              label={minWordLength}\r\n              type=\"number\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              value={minLength}\r\n              onChange={(e) => {\r\n                setMinLength(parseInt(e.target.value));\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              id=\"outlined-number\"\r\n              label={maxWordLength}\r\n              type=\"number\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              value={maxLength}\r\n              onChange={(e) => {\r\n                setMaxLength(parseInt(e.target.value));\r\n              }}\r\n            />\r\n          </div>\r\n          <div id=\"top-pagination\">\r\n            <Pagination\r\n              count={Math.ceil(localFilteredList.length / itemsPerPage)}\r\n              shape=\"rounded\"\r\n              onChange={navigate}\r\n              page={page + 1}\r\n            />\r\n          </div>\r\n          <Paper id=\"words-table-container\">\r\n            {blend.loading ? (\r\n              <CircularProgress style={{ fontSize: \"60px\" }} />\r\n            ) : (\r\n              <>\r\n                {blend.selectedLanguage1.length *\r\n                  blend.selectedLanguage2.length ===\r\n                  0 && (\r\n                  <h3 style={{ color: \"lightgrey\" }}>\r\n                    Select 2 languages to begin!\r\n                  </h3>\r\n                )}\r\n\r\n                <div id=\"words-table-header\">\r\n                  <div className=\"first-column\">\r\n                    {localFilteredList.length} {words}\r\n                  </div>\r\n                  <div className=\"second-column\">Link</div>\r\n                  <div className=\"third-column\">Link</div>\r\n                </div>\r\n\r\n                {localFilteredList.length > 0 &&\r\n                  localFilteredList.map((word: string, index: number) => {\r\n                    if (\r\n                      index >= itemsPerPage * page &&\r\n                      index <= itemsPerPage * (page + 1) - 1\r\n                    )\r\n                      return (\r\n                        <div\r\n                          key={`${word}${index}`}\r\n                          className=\"blended-words-table-row\"\r\n                          style={{\r\n                            backgroundColor: index % 2 === 1 ? \"#EEEEEE\" : \"\",\r\n                          }}\r\n                        >\r\n                          <div className=\"first-column\">{word}</div>\r\n\r\n                          <div className=\"second-column\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={`https://${blend.languageCode1}.wiktionary.org/wiki/${word}`}\r\n                              style={{ color: \"#00ADB5\" }}\r\n                            >\r\n                              {blend.languageCode1}.wiktionary.org/wiki/{word}\r\n                            </a>\r\n                          </div>\r\n\r\n                          <div className=\"third-column\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={`https://${blend.languageCode2}.wiktionary.org/wiki/${word}`}\r\n                              style={{ color: \"#00ADB5\" }}\r\n                            >\r\n                              {blend.languageCode2}.wiktionary.org/wiki/{word}\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                  })}\r\n              </>\r\n            )}\r\n          </Paper>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              margin: \"10px\",\r\n            }}\r\n          >\r\n            <Pagination\r\n              count={Math.ceil(localFilteredList.length / itemsPerPage)}\r\n              shape=\"rounded\"\r\n              onChange={navigate}\r\n              page={page + 1}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import LanguageIcon from \"@mui/icons-material/Language\";\r\nimport { MenuItem, Select } from \"@mui/material\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\n\r\nimport \"../style.css\";\r\n\r\nconst NavBar = () => {\r\n  const { setLanguage, commonWords, resources, about, changelog, tools } =\r\n    useContext(LanguageContext);\r\n\r\n  return (\r\n    <nav\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", alignItems: \"baseline\" }}>\r\n        <div id=\"title\">\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              fontFamily: \"consolas\",\r\n              color: \"#222831\",\r\n              marginLeft: \"8px\",\r\n            }}\r\n          >\r\n            {commonWords}\r\n          </Link>\r\n        </div>\r\n        <span\r\n          style={{\r\n            fontSize: \"13px\",\r\n            marginRight: \"30px\",\r\n            color: \"#393E46\",\r\n            marginLeft: \"3px\",\r\n          }}\r\n        >\r\n          V0.5.0\r\n        </span>\r\n        <Link\r\n          to=\"/tools\"\r\n          style={{\r\n            marginRight: \"30px\",\r\n            textDecoration: \"none\",\r\n            color: \"#00ADB5\",\r\n          }}\r\n        >\r\n          <u>{tools}</u>\r\n        </Link>\r\n        <Link\r\n          to=\"/resources\"\r\n          style={{\r\n            marginRight: \"30px\",\r\n            textDecoration: \"none\",\r\n            color: \"#00ADB5\",\r\n          }}\r\n        >\r\n          <u>{resources}</u>\r\n        </Link>\r\n        <Link\r\n          to=\"/about\"\r\n          style={{\r\n            marginRight: \"30px\",\r\n            textDecoration: \"none\",\r\n            color: \"#00ADB5\",\r\n          }}\r\n        >\r\n          <u>{about}</u>\r\n        </Link>\r\n        <Link\r\n          to=\"/changelog\"\r\n          style={{\r\n            marginRight: \"30px\",\r\n            textDecoration: \"none\",\r\n            color: \"#00ADB5\",\r\n          }}\r\n        >\r\n          <u>{changelog}</u>\r\n        </Link>\r\n      </div>\r\n      <Select\r\n        label=\"Age\"\r\n        onChange={(e) => setLanguage(e.target.value)}\r\n        style={{ width: \"70px\", margin: \"0 32px 0px 0px\", height: \"40px\" }}\r\n        renderValue={(selected: any) => {\r\n          return (\r\n            <LanguageIcon style={{ color: \"#00ADB5\", marginBottom: \"-3px\" }} />\r\n          );\r\n        }}\r\n        displayEmpty\r\n        inputProps={{ \"aria-label\": \"Without label\" }}\r\n        defaultValue={\"\"}\r\n      >\r\n        <MenuItem value=\"english\">English</MenuItem>\r\n        <MenuItem value=\"romanian\">Română</MenuItem>\r\n      </Select>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { TableHeader } from \"./components/tableHeader\";\r\nimport { WordsTable } from \"./components/wordsTable\";\r\nimport NavBar from \"../../Layout/NavBar/NavBar\";\r\nimport { BlendContext } from \"../../../App\";\r\nimport React from \"react\";\r\n\r\nexport const LanguageBlendContext = React.createContext<any>(null);\r\n\r\nconst LanguageBlendPage = () => {\r\n  const blend = React.useContext(BlendContext);\r\n\r\n  return (\r\n    <LanguageBlendContext.Provider value={blend}>\r\n      <NavBar />\r\n      <TableHeader />\r\n      <WordsTable />\r\n    </LanguageBlendContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LanguageBlendPage;\r\n","import { CircularProgress } from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst LanguageList = () => {\r\n  const { language }: any = useParams();\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [wordList, setWordList] = useState<string[]>([]);\r\n\r\n  const getLanguage = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setWordList(response.data.data[0].list);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLanguage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading === true && <CircularProgress id=\"resource-spinner\" />}\r\n      <p style={{ whiteSpace: \"pre\" }}>{wordList.join(\"\\r\\n\")}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LanguageList;\r\n","import { Button, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nexport const MoreStatistics = () => {\r\n  return (\r\n    <div className=\"more-statistics-container\">\r\n      <Typography style={{ fontSize: \"3.58rem\", fontWeight: 100 }}>\r\n        STATISTICS:\r\n      </Typography>\r\n      <Button>\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <b>&larr; &nbsp;</b> back to blending\r\n        </Link>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import NavBar from \"../../Layout/NavBar/NavBar\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Resources = () => {\r\n  const {\r\n    languageWordList,\r\n    english,\r\n    finnish,\r\n    french,\r\n    german,\r\n    hungarian,\r\n    italian,\r\n    polish,\r\n    romanian,\r\n    spanish,\r\n    turkish,\r\n  } = useContext(LanguageContext);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div id=\"resources-container\">\r\n        <div id=\"laguages-title\">{languageWordList}</div>\r\n        <div id=\"languages-list-container\">\r\n          <Link to=\"/resources/english\" className=\"language-link\">\r\n            {\">\"} (en) {english}\r\n          </Link>\r\n          <Link to=\"/resources/finnish\" className=\"language-link\">\r\n            {\">\"} (fi) {finnish}\r\n          </Link>\r\n          <Link to=\"/resources/french\" className=\"language-link\">\r\n            {\">\"} (fr) {french}\r\n          </Link>\r\n          <Link to=\"/resources/german\" className=\"language-link\">\r\n            {\">\"} (de) {german}\r\n          </Link>\r\n          <Link to=\"/resources/hungarian\" className=\"language-link\">\r\n            {\">\"} (hu) {hungarian}\r\n          </Link>\r\n          <Link to=\"/resources/italian\" className=\"language-link\">\r\n            {\">\"} (it) {italian}\r\n          </Link>\r\n          <Link to=\"/resources/polish\" className=\"language-link\">\r\n            {\">\"} (pl) {polish}\r\n          </Link>\r\n          <Link to=\"/resources/romanian\" className=\"language-link\">\r\n            {\">\"} (ro) {romanian}\r\n          </Link>\r\n          <Link to=\"/resources/spanish\" className=\"language-link\">\r\n            {\">\"} (es) {spanish}\r\n          </Link>\r\n          <Link to=\"/resources/turkish\" className=\"language-link\">\r\n            {\">\"} (tr) {turkish}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resources;\r\n","import NavBar from \"../../Layout/NavBar/NavBar\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { Chip } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst ChangeLog = () => {\r\n  const { update1, update2, update3, update4, update5, update6 } =\r\n    useContext(LanguageContext);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div id=\"changelog-container\">\r\n        <div id=\"changelog-sub-container\">\r\n          <Chip label=\"V0.5.0 / 17.5.2022\" className=\"changelog-chip\" />\r\n          {update6}\r\n          <Chip label=\"V0.0.5 / 26.4.2022\" className=\"changelog-chip\" />\r\n          {update5}\r\n          <Chip label=\"V0.0.4 / 16.4.2022\" className=\"changelog-chip\" />\r\n          {update4}\r\n          <Chip label=\"V0.3 / 29.12.2021\" className=\"changelog-chip\" />\r\n          {update3}\r\n          <Chip label=\"V0.2 / 10.12.2021\" className=\"changelog-chip\" />\r\n          {update2}\r\n          <Chip label=\"V0.1 / 1.12.2021\" className=\"changelog-chip\" />\r\n          {update1}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeLog;\r\n","import { useRef, useState } from \"react\";\r\n\r\nconst useTextScraper = () => {\r\n  const [text, setText] = useState<string>(\"\");\r\n  const [wordsArray, setWordsArray] = useState<string[]>([]);\r\n  const [UTF8Array, setUTF8Array] = useState<string[]>([]);\r\n  const [goodCharacters, setGoodCharacters] = useState<string[]>([]);\r\n  const [badCharacters, setBadCharacters] = useState<string[]>([]);\r\n  const textRef = useRef();\r\n\r\n  return {\r\n    text,\r\n    setText,\r\n    wordsArray,\r\n    setWordsArray,\r\n    UTF8Array,\r\n    setUTF8Array,\r\n    textRef,\r\n    goodCharacters,\r\n    setGoodCharacters,\r\n    badCharacters,\r\n    setBadCharacters,\r\n  };\r\n};\r\n\r\nexport default useTextScraper;\r\n","import { TextScraperContext } from \"..\";\r\nimport { useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\nconst TextInput = () => {\r\n  const { setText, textRef } = useContext(TextScraperContext);\r\n\r\n  const debounce = (func: any) => {\r\n    let timer: any;\r\n    return function (...args: any) {\r\n      if (timer) clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        timer = null;\r\n        func.apply(null, args);\r\n      }, 500);\r\n    };\r\n  };\r\n\r\n  const handleChange = (text: string) => {\r\n    setText(text);\r\n  };\r\n\r\n  const optimizedFn = useCallback(debounce(handleChange), []);\r\n\r\n  return (\r\n    <textarea\r\n      rows={15}\r\n      cols={60}\r\n      name=\"description\"\r\n      placeholder=\"Extract the unique words from every text!\"\r\n      onChange={(e) => optimizedFn(e.target.value)}\r\n      ref={textRef}\r\n    ></textarea>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import useTextScraper from \"./components/useTextScraper\";\r\nimport { Separators } from \"./components/Separators\";\r\nimport NavBar from \"../../../Layout/NavBar/NavBar\";\r\nimport TextInput from \"./components/TextInput\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport const TextScraperContext = React.createContext<any>(null);\r\n\r\nconst TextScraper = () => {\r\n  const textScraper = useTextScraper();\r\n  const [extraSeparators, setExtraSeparators] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let arr = [];\r\n    let goodArr: string[] = [];\r\n    for (let i = 0; i <= 10175; i++) {\r\n      //get good characters\r\n      if ((i >= 97 && i <= 122) || (i >= 65 && i <= 90)) {\r\n        goodArr.push(String.fromCharCode(i));\r\n      }\r\n      // (i >= 256 && i <= 383) ||\r\n      // (i >= 384 && i <= 591) ||\r\n      // (i >= 688 && i <= 767) ||\r\n      // (i >= 768 && i <= 879) ||\r\n      // (i >= 880 && i <= 1023) ||\r\n      // (i >= 1024 && i <= 1279) ||\r\n      // (i >= 1280 && i <= 1327) ||\r\n      // (i >= 8192 && i <= 8303) ||\r\n      // (i >= 8352 && i <= 8399) ||\r\n      // (i >= 8448 && i <= 8527) ||\r\n      // (i >= 8592 && i <= 8703) ||\r\n      // (i >= 8704 && i <= 8959) ||\r\n      // (i >= 9472 && i <= 9599) ||\r\n      // (i >= 9600 && i <= 9631) ||\r\n      // (i >= 9632 && i <= 9727) ||\r\n      // (i >= 9728 && i <= 9983) ||\r\n      // (i >= 9984 && i <= 10175)\r\n\r\n      arr.push(String.fromCharCode(i));\r\n    }\r\n    textScraper.setGoodCharacters(goodArr);\r\n    textScraper.setUTF8Array(arr);\r\n  }, []);\r\n\r\n  const scrape = () => {\r\n    //split text into words\r\n    let arr = textScraper.text\r\n      .replace(/\\r/g, \" \")\r\n      .split(\r\n        /[ \u001b\u001a\u0019\u0018\u0017\u0015\u0014\u0013\u0012\u0011\u0010\u000f\u000e\f\b\u0006\u0003\u0002\u0005\u0001\u0004■+#’‘%$=^†…„♦¬«»•¹²1234567890“*”.·:;?!~,`\"&|()<>{}\\[\\]\\r\\n/\\\\]+/\r\n      );\r\n    //lowercase?\r\n    arr = arr.map((word: string) => word.toLowerCase());\r\n    //remove duplicates\r\n    arr = Object.keys(\r\n      arr.reduce((reducer: any, word: any) => {\r\n        reducer[word] = true;\r\n        return reducer;\r\n      }, {})\r\n    );\r\n    //sorting?\r\n    arr.sort();\r\n\r\n    textScraper.setWordsArray(arr);\r\n    console.log(arr);\r\n  };\r\n\r\n  const clear = () => {\r\n    console.log(\"wa\", textScraper.textRef);\r\n    //@ts-ignore\r\n    textScraper.textRef.current.value = \"\";\r\n    textScraper.setText(\"\");\r\n    textScraper.setWordsArray([]);\r\n  };\r\n\r\n  return (\r\n    <TextScraperContext.Provider value={textScraper}>\r\n      <NavBar />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          padding: \"20px 10px 50px 10px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Link\r\n            to=\"/tools\"\r\n            style={{ alignSelf: \"flex-start\", textDecoration: \"none\" }}\r\n          >\r\n            <Button\r\n              style={{\r\n                color: \"#00adb5\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              {\"< Go back\"}\r\n            </Button>\r\n          </Link>\r\n          <TextInput />\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ margin: \"10px 0 10px 0\", backgroundColor: \"grey\" }}\r\n              onClick={clear}\r\n            >\r\n              CLEAR\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ margin: \"10px 0 10px 0\", backgroundColor: \"#00adb5\" }}\r\n              onClick={scrape}\r\n            >\r\n              EXTRACT UNIQUE WORDS\r\n            </Button>\r\n          </div>\r\n          <textarea\r\n            rows={15}\r\n            cols={60}\r\n            name=\"description\"\r\n            placeholder=\"Unique words will appear here\"\r\n            value={textScraper.wordsArray.join(\"\\n\")}\r\n            readOnly\r\n          ></textarea>\r\n        </div>\r\n        {/* <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            margin: \"20px 2px 20px 2px\",\r\n            padding: \"10px\",\r\n            fontWeight: \"bold\",\r\n            color: \"#222831\",\r\n            borderRadius: \"4px\",\r\n          }}\r\n        >\r\n          Select the characters to be ignored in the text ↓\r\n        </div> */}\r\n        {/* <Separators /> */}\r\n      </div>\r\n    </TextScraperContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TextScraper;\r\n","import NavBar from \"../../Layout/NavBar/NavBar\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        color: \"#fff\",\r\n      }}\r\n    >\r\n      <NavBar />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexGrow: 1,\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <span style={{ fontSize: \"6rem\", marginTop: \"100px\" }}>404</span>\r\n        <p style={{ marginTop: \"-15px\", marginBottom: \"30px\" }}>\r\n          Nothing to see here\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BlendContext } from \"../../../App\";\r\nimport NavBar from \"../../Layout/NavBar/NavBar\";\r\n\r\nconst MoreDetails = () => {\r\n  const blend = React.useContext(BlendContext);\r\n  const wordList = blend.blendedList;\r\n\r\n  const [minLength, setMinLength] = React.useState(1);\r\n  const [maxLength, setMaxLength] = React.useState(10);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <NavBar />\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <h1\r\n          style={{ fontFamily: \"consolas\", color: \"white\", marginTop: \"30px\" }}\r\n        >\r\n          <span\r\n            onClick={() => {\r\n              blend.setBlendedList([]);\r\n              blend.setSelectedLanguage2(\"\");\r\n              blend.setSelectedLanguage1(\"\");\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            BLEND LANGUAGES\r\n          </span>\r\n          {\">\"}{\" \"}\r\n          <Link\r\n            to=\"/language-blend\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            RESULTS\r\n          </Link>\r\n          {\">\"} <u>MORE DETAILS</u>\r\n        </h1>\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: \"10px\",\r\n          margin: \"30px 0 30px 0\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        {/*minimum word length*/}\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", margin: \"5px\" }}\r\n        >\r\n          <span style={{ color: \"white\", marginBottom: \"5px\" }}>\r\n            minimum word length\r\n          </span>\r\n          <TextField\r\n            placeholder=\"\"\r\n            type=\"number\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={minLength}\r\n            style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}\r\n            onChange={(e: any) => setMinLength(Number(e.target.value))}\r\n          />\r\n        </div>\r\n        {/*maximum word length*/}\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", margin: \"5px\" }}\r\n        >\r\n          <span style={{ color: \"white\", marginBottom: \"5px\" }}>\r\n            maximum word length\r\n          </span>\r\n          <TextField\r\n            placeholder=\"\"\r\n            type=\"number\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={maxLength}\r\n            style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}\r\n            onChange={(e: any) => setMaxLength(Number(e.target.value))}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\r\n        {wordList.map((el: any) =>\r\n          el.word &&\r\n          el.word.length >= minLength &&\r\n          el.word.length <= maxLength ? (\r\n            <div\r\n              style={{\r\n                margin: \"10px\",\r\n                padding: \"10px\",\r\n                borderRadius: \"20px\",\r\n                backgroundColor: \"rgba(255, 255, 255,0.1)\",\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              {el.word}\r\n            </div>\r\n          ) : null\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoreDetails;\r\n","import \"./style.css\";\r\nimport { Button } from \"@mui/material\";\r\nimport ArrowForwardIosRoundedIcon from \"@mui/icons-material/ArrowForwardIosRounded\";\r\nimport { useRef } from \"react\";\r\nimport React from \"react\";\r\n//@ts-ignore\r\nimport GLOBE from \"vanta/dist/vanta.globe.min\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../../Layout/NavBar/NavBar\";\r\nimport { BlendContext, LanguageContext } from \"../../../App\";\r\n\r\nconst LandingPage = () => {\r\n  const [vantaEffect, setVantaEffect] = React.useState<any>(0);\r\n  const myRef = useRef(null);\r\n  const blend = React.useContext(BlendContext);\r\n  const { startExploring, landingPageText } = React.useContext(LanguageContext);\r\n\r\n  React.useEffect(() => {\r\n    //clear blending history\r\n    blend.selectedLanguage1 = [];\r\n    blend.selectedLanguage2 = [];\r\n    blend.blendedList = [];\r\n\r\n    if (!vantaEffect) {\r\n      setVantaEffect(\r\n        GLOBE({\r\n          el: myRef.current,\r\n          color: 0x00adb5,\r\n          color2: 0x222831,\r\n          backgroundColor: 0xeeeeee,\r\n          //and so on...\r\n        })\r\n      );\r\n    }\r\n    return () => {\r\n      if (vantaEffect) vantaEffect.destroy();\r\n    };\r\n  }, [vantaEffect]);\r\n  return (\r\n    <div style={{ height: \"100vh\" }} ref={myRef} id=\"landing-page-container\">\r\n      <NavBar />\r\n      <div id=\"left-section-container\">\r\n        <p\r\n          style={{\r\n            fontFamily: \"consolas\",\r\n            color: \"#222831\",\r\n            width: \"370px\",\r\n            marginBottom: \"30px\",\r\n          }}\r\n        >\r\n          {landingPageText}\r\n        </p>\r\n        <Link\r\n          to=\"/language-blend\"\r\n          style={{ textDecoration: \"none\", color: \"#F84284\" }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{\r\n              backgroundColor: \"#393E46\",\r\n              color: \"#EEEEEE\",\r\n            }}\r\n          >\r\n            {startExploring}\r\n            <ArrowForwardIosRoundedIcon\r\n              style={{ fontSize: \"16px\", color: \"#EEEEEE\" }}\r\n            />\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      <div id=\"right-section-container\"></div>\r\n      <a\r\n        href=\"https://www.vantajs.com/\"\r\n        style={{\r\n          position: \"absolute\",\r\n          right: 10,\r\n          bottom: 10,\r\n          textDecoration: \"none\",\r\n          color: \"#00ADB5\",\r\n        }}\r\n      >\r\n        vanta.js\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useLanguageBlend = () => {\r\n  const [selectedLanguage1, setSelectedLanguage1] = useState<any>([]);\r\n  const [selectedLanguage2, setSelectedLanguage2] = useState<any>([]);\r\n  const [languageCode1, setLanguageCode1] = useState<string>(\"\");\r\n  const [languageCode2, setLanguageCode2] = useState<string>(\"\");\r\n  const [languages, setLanguages] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [blendedList, setBlendedList] = useState<any>([]);\r\n  const [alert, setAlert] = useState<string>(\"\");\r\n\r\n  const getLanguages = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguages`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setLanguages(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getFirstLanguage = async (language: string) => {\r\n    setLoading(true);\r\n\r\n    //update language code for language1\r\n    switch (language) {\r\n      case \"english\":\r\n        setLanguageCode1(\"en\");\r\n        break;\r\n      case \"finnish\":\r\n        setLanguageCode1(\"fi\");\r\n        break;\r\n      case \"french\":\r\n        setLanguageCode1(\"fr\");\r\n        break;\r\n      case \"german\":\r\n        setLanguageCode1(\"de\");\r\n        break;\r\n      case \"hungarian\":\r\n        setLanguageCode1(\"hu\");\r\n        break;\r\n      case \"italian\":\r\n        setLanguageCode1(\"it\");\r\n        break;\r\n      case \"polish\":\r\n        setLanguageCode1(\"pl\");\r\n        break;\r\n      case \"romanian\":\r\n        setLanguageCode1(\"ro\");\r\n        break;\r\n      case \"spanish\":\r\n        setLanguageCode1(\"es\");\r\n        break;\r\n      case \"turkish\":\r\n        setLanguageCode1(\"tr\");\r\n        break;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSelectedLanguage1(response.data.data[0].list);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getSecondLanguage = async (language: string) => {\r\n    setLoading(true);\r\n\r\n    //update language code for language2\r\n    switch (language) {\r\n      case \"english\":\r\n        setLanguageCode2(\"en\");\r\n        break;\r\n      case \"finnish\":\r\n        setLanguageCode2(\"fi\");\r\n        break;\r\n      case \"french\":\r\n        setLanguageCode2(\"fr\");\r\n        break;\r\n      case \"german\":\r\n        setLanguageCode2(\"de\");\r\n        break;\r\n      case \"hungarian\":\r\n        setLanguageCode2(\"hu\");\r\n        break;\r\n      case \"italian\":\r\n        setLanguageCode2(\"it\");\r\n        break;\r\n      case \"polish\":\r\n        setLanguageCode2(\"pl\");\r\n        break;\r\n      case \"romanian\":\r\n        setLanguageCode2(\"ro\");\r\n        break;\r\n      case \"spanish\":\r\n        setLanguageCode2(\"es\");\r\n        break;\r\n      case \"turkish\":\r\n        setLanguageCode2(\"tr\");\r\n        break;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/getLanguage?language=${language}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSelectedLanguage2(response.data.data[0].list);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLanguages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage1.length > 0 && selectedLanguage2.length > 0) {\r\n      var count = [...selectedLanguage1, ...selectedLanguage2].reduce(\r\n        (o, v) => {\r\n          o[v] = o[v] + 1 || 1;\r\n          return o;\r\n        },\r\n        {}\r\n      );\r\n\r\n      var duplicate = Object.keys(count)\r\n        .filter((k) => count[k] > 1)\r\n        .map(String);\r\n\r\n      setBlendedList(duplicate);\r\n    }\r\n\r\n    //set language codes\r\n  }, [selectedLanguage1, selectedLanguage2]);\r\n\r\n  return {\r\n    selectedLanguage1,\r\n    setSelectedLanguage1,\r\n\r\n    selectedLanguage2,\r\n    setSelectedLanguage2,\r\n\r\n    loading,\r\n    setLoading,\r\n\r\n    blendedList,\r\n    setBlendedList,\r\n\r\n    languages,\r\n    setLanguages,\r\n\r\n    alert,\r\n    setAlert,\r\n\r\n    getFirstLanguage,\r\n    getSecondLanguage,\r\n\r\n    languageCode1,\r\n    setLanguageCode1,\r\n    languageCode2,\r\n    setLanguageCode2,\r\n  };\r\n};\r\n\r\nexport default useLanguageBlend;\r\n","import CompareArrowsIcon from \"@mui/icons-material/CompareArrows\";\r\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\r\nimport ConstructionIcon from \"@mui/icons-material/Construction\";\r\nimport ContactMailIcon from \"@mui/icons-material/ContactMail\";\r\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\r\nimport LanguageIcon from \"@mui/icons-material/Language\";\r\nimport StorageIcon from \"@mui/icons-material/Storage\";\r\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport NavBar from \"../../Layout/NavBar/NavBar\";\r\nimport ApiIcon from \"@mui/icons-material/Api\";\r\n\r\nimport \"./style.css\";\r\nimport { LanguageContext } from \"../../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const About = () => {\r\n  const {\r\n    findTheCommonWordsOfLanguages,\r\n    appBuiltUsingMERN,\r\n    developerAndCommunity,\r\n    getInvolved,\r\n    contribuitors,\r\n  } = useContext(LanguageContext);\r\n\r\n  return (\r\n    <div id=\"about-page-container\">\r\n      <NavBar />\r\n      <div id=\"about-content\">\r\n        <div id=\"project-description-container\">\r\n          <h1>{findTheCommonWordsOfLanguages}</h1>\r\n          <div style={{ display: \"flex\", color: \"grey\", alignItems: \"center\" }}>\r\n            <span style={{ color: \"grey\" }}>\r\n              <span style={{ color: \"#00ADB5\", fontWeight: \"bolder\" }}>\r\n                ABC\r\n              </span>{\" \"}\r\n              PVBF AUX{\" \"}\r\n              <span style={{ color: \"#00ADB5\", fontWeight: \"bolder\" }}>\r\n                DEF\r\n              </span>{\" \"}\r\n              IQYE\r\n            </span>\r\n            <LanguageIcon\r\n              style={{ fontSize: \"3rem\", margin: \"0px 10px 0px 10px\" }}\r\n            />\r\n            <CompareArrowsIcon\r\n              style={{ fontSize: \"2rem\", margin: \"0px 10px 0px 10px\" }}\r\n            />\r\n            <LanguageIcon\r\n              style={{ fontSize: \"3rem\", margin: \"0px 10px 0px 10px\" }}\r\n            />\r\n            <span style={{ color: \"grey\" }}>\r\n              OQUE{\" \"}\r\n              <span style={{ color: \"#00ADB5\", fontWeight: \"bolder\" }}>\r\n                ABC\r\n              </span>{\" \"}\r\n              KIYW JSU{\" \"}\r\n              <span style={{ color: \"#00ADB5\", fontWeight: \"bolder\" }}>\r\n                DEF\r\n              </span>\r\n            </span>\r\n          </div>\r\n          <ArrowDownwardIcon style={{ fontSize: \"2rem\", color: \"grey\" }} />\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginLeft: \"37px\",\r\n            }}\r\n          >\r\n            <ListAltIcon style={{ fontSize: \"3rem\", color: \"grey\" }} />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                color: \"#00ADB5\",\r\n                marginLeft: \"7px\",\r\n                fontWeight: \"bolder\",\r\n              }}\r\n            >\r\n              <span>ABC</span>\r\n              <span>DEF</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/*App made using mern stack*/}\r\n\r\n        <h1>{appBuiltUsingMERN}</h1>\r\n\r\n        <div id=\"mern-container\">\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://www.mongodb.com/\" style={{ color: \"#00ADB5\" }}>\r\n              mongoDB\r\n            </a>\r\n            <StorageIcon style={{ fontSize: \"3rem\", color: \"grey\" }} />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://nodejs.dev/\" style={{ color: \"#00ADB5\" }}>\r\n              Node\r\n            </a>\r\n            <ApiIcon style={{ fontSize: \"3rem\", color: \"grey\" }} />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://expressjs.com/\" style={{ color: \"#00ADB5\" }}>\r\n              Express\r\n            </a>\r\n            <ConstructionIcon style={{ fontSize: \"3rem\", color: \"grey\" }} />\r\n          </div>\r\n\r\n          <div className=\"technology-container\">\r\n            <a href=\"https://reactjs.org/\" style={{ color: \"#00ADB5\" }}>\r\n              React\r\n            </a>\r\n            <DashboardIcon style={{ fontSize: \"3rem\", color: \"grey\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"developer-and-community-container\">\r\n          <h1>{developerAndCommunity}</h1>\r\n\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <ContactMailIcon\r\n              style={{ fontSize: \"1.5rem\", color: \"grey\", marginRight: \"10px\" }}\r\n            />\r\n            <div style={{ color: \"#00ADB5\" }}>\r\n              chita.catalin.adrian@gmail.com\r\n            </div>\r\n          </div>\r\n\r\n          <h2 style={{ fontWeight: 100 }}>{getInvolved}</h2>\r\n\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <GitHubIcon\r\n              style={{ fontSize: \"1.5rem\", color: \"grey\", marginRight: \"10px\" }}\r\n            />\r\n            <div style={{ color: \"#00ADB5\" }}>\r\n              https://github.com/chita-catalin/common-words{\" \"}\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <GitHubIcon\r\n              style={{ fontSize: \"1.5rem\", color: \"grey\", marginRight: \"10px\" }}\r\n            />\r\n            <div style={{ color: \"#00ADB5\" }}>\r\n              https://github.com/chita-catalin/common-words-backend\r\n            </div>\r\n          </div>\r\n\r\n          <h2 style={{ fontWeight: 100 }}>{contribuitors}</h2>\r\n          <a\r\n            href=\"https://github.com/chita-catalin\"\r\n            style={{ color: \"#00ADB5\" }}\r\n          >\r\n            chita-catalin\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import DocumentScannerRoundedIcon from \"@mui/icons-material/DocumentScannerRounded\";\r\n//import CompareArrowsRoundedIcon from \"@mui/icons-material/CompareArrowsRounded\";\r\n//import ListAltRoundedIcon from \"@mui/icons-material/ListAltRounded\";\r\nimport NavBar from \"../../Layout/NavBar/NavBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Tools = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div id=\"tools-container\">\r\n        <Link to=\"/tools/text-scraper\" style={{ textDecoration: \"none\" }}>\r\n          <Paper elevation={3} className=\"tool-paper\">\r\n            <div className=\"tool-paper-title\">TEXT SCRAPER</div>\r\n            <DocumentScannerRoundedIcon style={{ fontSize: \"50px\" }} />\r\n          </Paper>\r\n        </Link>\r\n\r\n        {/* <Paper elevation={3} className=\"tool-paper\">\r\n          <div className=\"tool-paper-title\">COMPARE YOUR OWN LISTS</div>\r\n          <div style={{ display: \"flex\" }}>\r\n            <ListAltRoundedIcon style={{ fontSize: \"50px\" }} />\r\n            <CompareArrowsRoundedIcon style={{ fontSize: \"50px\" }} />\r\n            <ListAltRoundedIcon style={{ fontSize: \"50px\" }} />\r\n          </div>\r\n        </Paper> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tools;\r\n","import LanguageBlendPage from \"./components/pages/LanguageBlendPage/index\";\nimport LanguageList from \"./components/pages/Resources/LanguageList\";\nimport { MoreStatistics } from \"./components/pages/MoreStatistics\";\nimport Resources from \"./components/pages/Resources/Resources\";\nimport ChangeLog from \"./components/pages/changelog/ChangeLog\";\nimport TextScraper from \"./components/pages/Tools/TextScraper\";\nimport { Route, Routes, HashRouter } from \"react-router-dom\";\nimport NotFound from \"./components/pages/NotFound/NotFound\";\nimport MoreDetails from \"./components/pages/MoreDetails\";\nimport LandingPage from \"./components/pages/LandingPage\";\nimport useLanguageBlend from \"./useLanguageBlend\";\nimport { About } from \"./components/pages/about\";\nimport Tools from \"./components/pages/Tools\";\nimport { useLanguage } from \"./useLanguage\";\nimport React from \"react\";\n\n//env\nimport \"dotenv/config\";\n\nexport const LanguageContext = React.createContext<any>(null);\nexport const BlendContext = React.createContext<any>(null);\n\nfunction App() {\n  const blend = useLanguageBlend();\n  const language = useLanguage();\n\n  return (\n    <LanguageContext.Provider value={language}>\n      <BlendContext.Provider value={blend}>\n        <HashRouter>\n          <Routes>\n            <Route path=\"/language-blend\" element={<LanguageBlendPage />} />\n            <Route path=\"/resources\" element={<Resources />} />\n            <Route path=\"/resources/:language\" element={<LanguageList />} />\n            <Route path=\"/changelog\" element={<ChangeLog />} />\n            <Route path=\"/more-statistics\" element={<MoreStatistics />} />\n            <Route path=\"/more-details\" element={<MoreDetails />} />\n            <Route path=\"/about\" element={<About />} />\n            <Route path=\"/\" element={<LandingPage />} />\n            <Route path=\"*\" element={<NotFound />} />\n            <Route path=\"/tools\" element={<Tools />} />\n            <Route path=\"/tools/text-scraper\" element={<TextScraper />} />\n          </Routes>\n        </HashRouter>\n      </BlendContext.Provider>\n    </LanguageContext.Provider>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useLanguage = () => {\r\n  const [language, setLanguage] = useState(\"english\");\r\n\r\n  const [commonWords, setCommonWords] = useState(\"COMMON WORDS\");\r\n  const [resources, setResources] = useState(\"resources\");\r\n  const [about, setAbout] = useState(\"about\");\r\n  const [changelog, setChangelog] = useState(\"changelog\");\r\n  const [startExploring, setStartExploring] = useState(\"START EXPLORING\");\r\n  const [landingPageText, setLandingPageText] = useState(\r\n    \"Compare your language with another! Find the common words, and more fun statistics about languages, completely free!\"\r\n  );\r\n  const [selectTwoLanguages, setSelectTwoLanguages] = useState(\r\n    \"Select two languages!\"\r\n  );\r\n  const [wordsPerPage, setWordsPerPage] = useState(\"Words per page\");\r\n  const [words, setWords] = useState(\"Words\");\r\n  const [minWordLength, setMinWordLength] = useState(\"Min. word length\");\r\n  const [maxWordLength, setMaxWordLength] = useState(\"Max. word length\");\r\n  const [tools, setTools] = useState(\"tools\");\r\n  //about page\r\n  const [findTheCommonWordsOfLanguages, setFindTheCommonWordsOfLanguages] =\r\n    useState(\"FIND THE COMMON WORDS OF LANGUAGES\");\r\n  const [developerAndCommunity, setDeveloperAndCommunity] = useState(\r\n    \"DEVELOPER & COMMUNITY\"\r\n  );\r\n  const [getInvolved, setGetInvolved] = useState(\"GET INVOLVED!\");\r\n  const [contribuitors, setContribuitors] = useState(\"CONTRIBUTORS:\");\r\n  const [appBuiltUsingMERN, setAppBuiltUsingMERN] = useState(\r\n    \"THIS WEB APP WAS BUILT USING THE MERN STACK\"\r\n  );\r\n  //resources\r\n  const [languageWordList, setLanguageWordList] = useState(\r\n    \"Language word lists (all words)\"\r\n  );\r\n  //languages\r\n  const [english, setEnglish] = useState(\"English\");\r\n  const [finnish, setFinnish] = useState(\"Finnish\");\r\n  const [french, setFrench] = useState(\"French\");\r\n  const [german, setGerman] = useState(\"German\");\r\n  const [hungarian, setHungarian] = useState(\"Hungarian\");\r\n  const [italian, setItalian] = useState(\"Italian\");\r\n  const [polish, setPolish] = useState(\"Polish\");\r\n  const [romanian, setRomanian] = useState(\"Romanian\");\r\n  const [spanish, setSpanish] = useState(\"Spanish\");\r\n  const [turkish, setTurkish] = useState(\"Turkish\");\r\n  //ChangeLog\r\n  const [update1, setUpdate1] = useState(\"Project created\");\r\n  const [update2, setUpdate2] = useState(\"Added basic language blending\");\r\n  const [update3, setUpdate3] = useState(\r\n    `Added Italian,French,Finnish languages\\nEnhanced results page.\\nadded ${\"changelog\"} section.\\nadded country flags.\\nadded dark/light theme switch`\r\n  );\r\n  const [update4, setUpdate4] = useState(\r\n    `Removed language lists from frontend side\\nAdded about section\\nRemoved light/dark theme switch\\nEnhanced landing page UI\\nUpdated versioning system to match web standards`\r\n  );\r\n  const [update5, setUpdate5] = useState(\r\n    `Connected to Backend App\\nNow retreiving languages list from database\\nAdded not-yet-functional table to \"blend-page\"\\nadded Romanian word list to \"Resources\" page`\r\n  );\r\n  const [update6, setUpdate6] = useState(\r\n    \"Added language switch RO/EN\\nAdded more languages\\nAdded language comparing functionality\\nAdded tools section, with unique word extraction tool\\nAdded languages list from database to resources page\\nImproved general UI\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (language) {\r\n      case \"english\":\r\n        setCommonWords(\"COMMON WORDS\");\r\n        setResources(\"resources\");\r\n        setAbout(\"about\");\r\n        setChangelog(\"changelog\");\r\n        setStartExploring(\"START EXPLORING\");\r\n        setLandingPageText(\r\n          \"Compare your language with another! Find the common words, and more fun statistics about languages, completely free!\"\r\n        );\r\n        setSelectTwoLanguages(\"Select two languages!\");\r\n        setWordsPerPage(\"Words per page\");\r\n        setWords(\"Words\");\r\n        setMinWordLength(\"Min. word length\");\r\n        setMaxWordLength(\"Max. word length\");\r\n        setTools(\"tools\");\r\n        //about page\r\n        setFindTheCommonWordsOfLanguages(\"FIND THE COMMON WORDS OF LANGUAGES\");\r\n        setDeveloperAndCommunity(\"DEVELOPER & COMMUNITY\");\r\n        setGetInvolved(\"GET INVOLVED!\");\r\n        setContribuitors(\"CONTRIBUITORS:\");\r\n        setAppBuiltUsingMERN(\"THIS WEB APP WAS BUILT USING THE MERN STACK\");\r\n        //resources\r\n        setLanguageWordList(\"Language word lists (all words)\");\r\n        //languages\r\n        setEnglish(\"English\");\r\n        setFinnish(\"Finnish\");\r\n        setFrench(\"French\");\r\n        setGerman(\"German\");\r\n        setHungarian(\"Hungarian\");\r\n        setItalian(\"Italian\");\r\n        setPolish(\"Polish\");\r\n        setRomanian(\"Romanian\");\r\n        setSpanish(\"Spanish\");\r\n        setTurkish(\"Turkish\");\r\n        //ChangeLog\r\n        setUpdate1(\"Project created\");\r\n        setUpdate2(\"Added basic language blending\");\r\n        setUpdate3(\r\n          `Added Italian,French,Finnish languages\\nEnhanced results page.\\nadded ${\"changelog\"} section.\\nadded country flags.\\nadded dark/light theme switch`\r\n        );\r\n        setUpdate4(\r\n          `Removed language lists from frontend side\\nAdded about section\\nRemoved light/dark theme switch\\nEnhanced landing page UI\\nUpdated versioning system to match web standards`\r\n        );\r\n        setUpdate5(\r\n          `Connected to Backend App\\nNow retreiving languages list from database\\nAdded not-yet-functional table to \"blend-page\"\\nadded Romanian word list to \"Resources\" page`\r\n        );\r\n        setUpdate6(\r\n          \"Added language switch RO/EN\\nAdded more languages\\nAdded language comparing functionality\\nAdded tools section, with unique word extraction tool\\nAdded languages list from database to resources page\\nImproved general UI\"\r\n        );\r\n\r\n        break;\r\n\r\n      case \"romanian\":\r\n        setCommonWords(\"CUVINTE COMUNE\");\r\n        setResources(\"resurse\");\r\n        setAbout(\"despre\");\r\n        setChangelog(\"istoric schimbari\");\r\n        setStartExploring(\"EXPLOREAZĂ\");\r\n        setLandingPageText(\r\n          \"Compară limba ta cu altă limbă! Găsește cuvintele comune, și alte statistici interesante despre limbi, complet gratuit!\"\r\n        );\r\n        setSelectTwoLanguages(\"Selectează două limbi diferite!\");\r\n        setWordsPerPage(\"Cuvinte pe pagină\");\r\n        setWords(\"Cuvinte\");\r\n        setMinWordLength(\"Lungime minimă\");\r\n        setMaxWordLength(\"Lungime maximă\");\r\n        setTools(\"unelte\");\r\n        //about page\r\n        setFindTheCommonWordsOfLanguages(\r\n          \"GĂSEȘTE CUVINTELE COMUNE ALE LIMBILOR\"\r\n        );\r\n        setDeveloperAndCommunity(\"DEZVOLTATOR & COMUNITATE\");\r\n        setGetInvolved(\"IMPLICĂ-TE!\");\r\n        setContribuitors(\"CONTRIBUITORI:\");\r\n        setAppBuiltUsingMERN(\r\n          \"ACEASTĂ APLICAȚIE WEB A FOST DEZVOLTATĂ FOLOSIND STACK-UL MERN\"\r\n        );\r\n        //resources\r\n        setLanguageWordList(\r\n          \"Listele de cuvinte ale limbilor (toate cuvintele)\"\r\n        );\r\n        //languages\r\n        setEnglish(\"Engleză\");\r\n        setFinnish(\"Finlandeză\");\r\n        setFrench(\"Franceză\");\r\n        setGerman(\"Germană\");\r\n        setHungarian(\"Maghiară\");\r\n        setItalian(\"Italiană\");\r\n        setPolish(\"Poloneză\");\r\n        setRomanian(\"Română\");\r\n        setSpanish(\"Spaniolă\");\r\n        setTurkish(\"Turcă\");\r\n        //changelog\r\n        setUpdate1(\"Început proiect\");\r\n        setUpdate2(\"Adăugat algoritm de combinare a limbilor\");\r\n        setUpdate3(\r\n          `Adăugat Italiană, Franceză, Finlandeză\\nÎmbunătățit pagina de rezultate\\nAdăugat secțiune de \"istoric schimbări\"\\nAdăugat steaguri pentru țări\\nAdăugat buton pentru temă light/dark`\r\n        );\r\n        setUpdate4(\r\n          `Înlăturat listele de cuvinte din Frontend\\nAdăugat secțiunea \"despre\"\\nÎnlăturat butonul pentru temă light/dark\\nÎmbunătățit UI-ul paginii de pornire\\nUpdatat sistemul de versionare cu standardul web`\r\n        );\r\n        setUpdate5(\r\n          `Conectat aplicația web la Backend\\nListele de limbi acum sunt preluate dintr-o bază de date\\nAdăugat tabel de cuvinte, încă nefuncțional\\nAdăugat lista cuvintelor din limba română la pagina de resurse `\r\n        );\r\n        setUpdate6(\r\n          `Adăugat funcția de schimbare de limbă\\nAdăugat mai multe limbi\\nAdăugat funcția de comparare a limbilor\\nAdăugat secțiunea de unelte\\nAdăugat unealta de extragere a cuvintelor unice\\nAdăugat liste de limbi la pagina de resurse\\nÎmbunătățit UI general`\r\n        );\r\n\r\n        break;\r\n    }\r\n  }, [language]);\r\n\r\n  return {\r\n    language,\r\n    setLanguage,\r\n    commonWords,\r\n    resources,\r\n    about,\r\n    changelog,\r\n    startExploring,\r\n    landingPageText,\r\n    selectTwoLanguages,\r\n    wordsPerPage,\r\n    words,\r\n    minWordLength,\r\n    maxWordLength,\r\n    tools,\r\n    //about page\r\n    findTheCommonWordsOfLanguages,\r\n    developerAndCommunity,\r\n    getInvolved,\r\n    contribuitors,\r\n    appBuiltUsingMERN,\r\n    //resources\r\n    languageWordList,\r\n    //languages\r\n    english,\r\n    finnish,\r\n    french,\r\n    german,\r\n    hungarian,\r\n    italian,\r\n    polish,\r\n    romanian,\r\n    spanish,\r\n    turkish,\r\n    //ChangeLog\r\n    update1,\r\n    update2,\r\n    update3,\r\n    update4,\r\n    update5,\r\n    update6,\r\n  };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}